{"version":3,"sources":["screens/Auth/components/TextFieldWithError.js","screens/Auth/components/PracticeForm.js","screens/Auth/components/Success.js","screens/Auth/SignUp.js","components/common/Error.js","services/email.service.js","components/common/Dimmer.js","services/auth.service.js"],"names":["TextFieldWithError","fieldName","label","value","handleOnChange","handleOnBlur","errors","type","id","TextField","variant","margin","required","fullWidth","name","autoComplete","onChange","onBlur","Error","defaultProps","useStyles","makeStyles","theme","form","width","marginTop","spacing","formSectionTitle","marginBottom","personalFormTitle","checkbox","submit","PracticeForm","onFormSubmit","classes","useState","setName","phone","setPhone","url","setUrl","clientCode","setClientCode","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","termsAndConditions","setTermsAndConditions","fieldErrors","setFieldErrors","useEffect","nameWithoutSpeChar","removeSpecialCharFromString","clientCodeAcc","getAcronym","trim","practiceErrors","filter","err","param","includes","userErrors","getFieldError","target","handleAjaxValidation","event","AuthService","validate","then","response","updatedErrors","error","data","message","uniqueFieldErrors","_","uniqWith","isEqual","console","catch","className","noValidate","onSubmit","e","preventDefault","formData","client","website","code","user","firstname","lastname","handleFormSubmission","Typography","component","color","map","index","Alert","severity","msg","inputProps","maxLength","helperText","length","validatePassword","FormControlLabel","control","Checkbox","Link","href","Button","disabled","Grid","container","item","xs","root","textAlign","fontSize","lineHeight","Success","enqueueSnackbar","useSnackbar","setErrors","isLoading","setIsLoading","Card","CardContent","status","onClick","EmailService","resendEmailVerification","Dimmer","isOpen","pageTitle","paper","display","flexDirection","alignItems","avatar","backgroundColor","palette","text","secondary","lockIcon","SignUp","signedUpUser","setSignedUpUser","success","setSuccess","Container","maxWidth","CssBaseline","Avatar","register","sendEmailVerification","sendVerificationEmail","children","axios","post","API_BASE","userId","token","get","backdrop","zIndex","drawer","open","a","loginResponse","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem"],"mappings":"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","file":"static/js/68.eca86c84.chunk.js","sourcesContent":["import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nimport Error from \"../../../components/common/Error\";\n\nconst TextFieldWithError = ({\n  fieldName,\n  label,\n  value,\n  handleOnChange,\n  handleOnBlur,\n  errors,\n  type,\n  id,\n}) => (\n  <>\n    <TextField\n      value={value}\n      variant=\"outlined\"\n      margin=\"dense\"\n      required\n      fullWidth\n      id={id || fieldName}\n      label={label}\n      name={fieldName}\n      type={type || \"text\"}\n      autoComplete={fieldName}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n    />\n    <Error errors={errors} />\n  </>\n);\n\nTextFieldWithError.defaultProps = {\n  id: null,\n  value: null,\n  type: null,\n};\n\nTextFieldWithError.propTypes = {\n  id: PropTypes.string,\n  fieldName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnBlur: PropTypes.func.isRequired,\n  errors: PropTypes.arrayOf(PropTypes.array).isRequired,\n  type: PropTypes.string,\n};\n\nexport default TextFieldWithError;\n","import React, { useState, useEffect } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport AuthService from \"../../../services/auth.service\";\nimport { getAcronym, removeSpecialCharFromString } from \"../../../utils/helpers\";\nimport TextFieldWithError from \"./TextFieldWithError\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  formSectionTitle: {\n    marginBottom: theme.spacing(1),\n  },\n  personalFormTitle: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  checkbox: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst PracticeForm = ({ onFormSubmit, ...props }) => {\n  const { errors } = props;\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  // const [address, setAddress] = useState(\"\");\n  // const [address2, setAddress2] = useState(\"\");\n  // const [city, setCity] = useState(\"\");\n  // const [state, setState] = useState(\"\");\n  // const [zipCode, setZipCode] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  // const [fax, setFax] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  // const [practiceEmail, setPracticeEmail] = useState(\"\");\n  // const [ein, setEin] = useState(\"\");\n  // const [npi, setNpi] = useState(\"\");\n  const [clientCode, setClientCode] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  // const [personalNPI, setPersonalNPI] = useState(\"\");\n  // const [medicalLicenseNumber, setMedicalLicenseNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [termsAndConditions, setTermsAndConditions] = useState(false);\n\n  const [fieldErrors, setFieldErrors] = useState([]);\n\n  useEffect(() => {\n    const nameWithoutSpeChar = removeSpecialCharFromString(name);\n    const clientCodeAcc = getAcronym(nameWithoutSpeChar.trim());\n    setClientCode(clientCodeAcc);\n  }, [name]);\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n\n    const formData = {\n      client: {\n        name: name.trim(),\n        // address: address.trim(),\n        // address2: address2.trim(),\n        // city: city.trim(),\n        // state: state.trim(),\n        // postal: zipCode.trim(),\n        phone: phone.trim(),\n        // fax: fax.trim(),\n        // email: practiceEmail.trim(),\n        website: url.trim(),\n        // ein: ein.trim(),\n        // npi: npi.trim(),\n        code: clientCode.trim(),\n      },\n      user: {\n        firstname: firstName.trim(),\n        lastname: lastName.trim(),\n        email: email.trim(),\n        // npi: personalNPI.trim(),\n        // medical_license: medicalLicenseNumber.trim(),\n        password: password.trim(),\n      },\n    };\n\n    onFormSubmit(formData);\n  };\n\n  const validatePassword = (event) => {\n    if (event.target.value.length < 8) {\n      setFieldErrors([\n        ...fieldErrors,\n        {\n          value: event.target.value,\n          msg: \"Too Weak. Must be atleast 8 Characters\",\n          param: \"user.password\",\n        },\n      ]);\n    } else {\n      const updatedErrors = fieldErrors.filter(\n        (error) => error.param !== \"user.password\",\n      );\n      setFieldErrors(updatedErrors);\n    }\n  };\n\n  const practiceErrors = errors && errors.filter((err) => err.param.includes(\"client\"));\n  const userErrors = errors && errors.filter((err) => err.param.includes(\"user\"));\n\n  const getFieldError = (target, fieldName) => {\n    let value = `client.${fieldName}`;\n    if (target) {\n      value = `${target}.${fieldName}`;\n    }\n    return fieldErrors && fieldErrors.filter((err) => err.param === value);\n  };\n  const handleAjaxValidation = (event, target) => {\n    if (!event.target) {\n      return;\n    }\n\n    AuthService.validate({\n      fieldName: event.target.name,\n      value: event.target.value,\n      target: target || \"client\",\n    })\n      .then(\n        (response) => {\n          // Remove errors record with param\n          const updatedErrors = fieldErrors.filter(\n            (error) => error.param !== response.data.message.param,\n          );\n          setFieldErrors(updatedErrors);\n        },\n        (error) => {\n          if (!error.response) {\n            // network error\n            console.error(error);\n          } else {\n            const uniqueFieldErrors = _.uniqWith(\n              [...fieldErrors, error.response.data.message],\n              _.isEqual,\n            );\n            setFieldErrors(uniqueFieldErrors);\n          }\n        },\n      )\n      .catch((err) => {\n        console.error(\"catch err\", err);\n      });\n  };\n\n  return (\n    <form className={classes.form} noValidate onSubmit={(event) => handleFormSubmission(event)}>\n      <Typography\n        component=\"h3\"\n        variant=\"h4\"\n        color=\"textPrimary\"\n        className={classes.formSectionTitle}\n      >\n        Practice Information\n      </Typography>\n      {practiceErrors\n        // eslint-disable-next-line react/no-array-index-key\n        && practiceErrors.map((error, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Alert severity=\"error\" key={index}>\n            {error.msg}\n          </Alert>\n        ))}\n      <TextFieldWithError\n        fieldName=\"name\"\n        label=\"Practice Name\"\n        value={name}\n        handleOnChange={(event) => setName(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"name\")}\n        inputProps={{ maxLength: 35 }}\n        helperText={`${name.length >= 35 ? \"Enter a name between 35 charecter\" : \"\"\n        }`}\n      />\n      {/* <TextFieldWithError\n        fieldName=\"code\"\n        label=\"Practice Code\"\n        value={clientCode}\n        handleOnChange={(event) => setClientCode(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"code\")}\n        inputProps={{ maxLength: 35 }}\n      /> */}\n      {/* <TextField\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        name=\"address\"\n        label=\"Practice Address\"\n        id=\"address\"\n        autoComplete=\"current-address\"\n        onChange={(event) => setAddress(event.target.value)}\n        value={address}\n        inputProps={{ maxLength: 90 }}\n        helperText={`${\n          address.length >= 90 ? \"Enter a adress between 90 charecter\" : \"\"\n        }`}\n      /> */}\n      {/* <TextField\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        name=\"address2\"\n        label=\"Practice Address Line Two\"\n        id=\"address2\"\n        autoComplete=\"current-address2\"\n        onChange={(event) => setAddress2(event.target.value)}\n        value={address2}\n        inputProps={{ maxLength: 90 }}\n        helperText={`${\n          address2.length >= 90 ? \"Enter a adress between 90 charecter\" : \"\"\n        }`}\n      /> */}\n      {/* <TextField\n        value={city}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        id=\"city\"\n        label=\"Practice City\"\n        name=\"city\"\n        autoComplete=\"city\"\n        onChange={(event) => setCity(event.target.value)}\n        inputProps={{ maxLength: 45 }}\n        helperText={`${\n          city.length >= 45 ? \"Enter a city between 45 charecter\" : \"\"\n        }`}\n      /> */}\n      {/* <TextField\n        value={state}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        id=\"state\"\n        label=\"Practice State\"\n        name=\"state\"\n        autoComplete=\"state\"\n        onChange={(event) => setState(event.target.value)}\n        inputProps={{ maxLength: 45 }}\n        helperText={`${\n          state.length >= 45 ? \"Enter a state between 45 charecter\" : \"\"\n        }`}\n      /> */}\n      {/* <TextField\n        value={zipCode}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        id=\"zipcode\"\n        label=\"Practice Zipcode\"\n        name=\"zipcode\"\n        autoComplete=\"zipcode\"\n        onChange={(event) => setZipCode(event.target.value)}\n        inputProps={{ maxLength: 20 }}\n        helperText={`${\n          zipCode.length >= 20 ? \"Enter a zip between 20 charecter\" : \"\"\n        }`}\n      /> */}\n      <TextFieldWithError\n        fieldName=\"phone\"\n        label=\"Practice Phone\"\n        value={phone}\n        handleOnChange={(event) => setPhone(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"phone\")}\n        inputProps={{ maxLength: 15 }}\n        helperText={`${phone.length >= 15 ? \"Enter a number between 15 charecter\" : \"\"\n        }`}\n      />\n      {/* <TextFieldWithError\n        fieldName=\"fax\"\n        label=\"Practice Fax\"\n        value={fax}\n        handleOnChange={(event) => setFax(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"fax\")}\n        inputProps={{ maxLength: 15 }}\n        helperText={`${\n          fax.length >= 15 ? \"Enter a number between 15 charecter\" : \"\"\n        }`}\n      /> */}\n      <TextFieldWithError\n        fieldName=\"website\"\n        label=\"Practice Website URL\"\n        value={url}\n        handleOnChange={(event) => setUrl(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"website\")}\n        inputProps={{ maxLength: 1000 }}\n        helperText={`${url.length >= 1000 ? \"Enter an url between 1000 charecter\" : \"\"\n        }`}\n      />\n      {/* <TextFieldWithError\n        fieldName=\"email\"\n        label=\"Practice Email\"\n        value={practiceEmail}\n        handleOnChange={(event) => setPracticeEmail(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"email\")}\n        inputProps={{ maxLength: 255 }}\n        helperText={`${\n          practiceEmail.length >= 255\n            ? \"Enter an email between 255 charecter\"\n            : \"\"\n        }`}\n      /> */}\n      {/* <TextFieldWithError\n        fieldName=\"ein\"\n        label=\"Practice EIN Number\"\n        value={ein}\n        handleOnChange={(event) => setEin(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"ein\")}\n        inputProps={{ maxLength: 15 }}\n        helperText={`${\n          ein.length >= 15 ? \"Enter a number between 15 charecter\" : \"\"\n        }`}\n      /> */}\n      {/* <TextFieldWithError\n        fieldName=\"npi\"\n        label=\"Practice NPI Number\"\n        value={npi}\n        handleOnChange={(event) => setNpi(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event)}\n        errors={getFieldError(\"client\", \"npi\")}\n        inputProps={{ maxLength: 15 }}\n        helperText={`${\n          npi.length >= 15 ? \"Enter a number between 15 charecter\" : \"\"\n        }`}\n      /> */}\n      <Typography\n        component=\"h3\"\n        variant=\"h4\"\n        color=\"textPrimary\"\n        className={classes.personalFormTitle}\n      >\n        Your Personal Information\n      </Typography>\n      {userErrors\n        && userErrors.map((error, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Alert severity=\"error\" key={index}>\n            {error.msg}\n          </Alert>\n        ))}\n      <TextField\n        value={firstName}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        id=\"firstName\"\n        label=\"Your Firstname\"\n        name=\"firstName\"\n        autoComplete=\"firstName\"\n        onChange={(event) => setFirstName(event.target.value)}\n        inputProps={{ maxLength: 35 }}\n        helperText={`${firstName.length >= 35\n          ? \"Enter a first name between 35 charecter\"\n          : \"\"\n        }`}\n      />\n      <TextField\n        value={lastName}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        id=\"lastName\"\n        label=\"Your Lastname\"\n        name=\"lastName\"\n        autoComplete=\"lastName\"\n        onChange={(event) => setLastName(event.target.value)}\n        inputProps={{ maxLength: 35 }}\n        helperText={`${lastName.length >= 35 ? \"Enter a last name between 35 charecter\" : \"\"\n        }`}\n      />\n      <TextFieldWithError\n        id=\"userEmail\"\n        fieldName=\"email\"\n        label=\"Your Email Address\"\n        value={email}\n        handleOnChange={(event) => setEmail(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event, \"user\")}\n        errors={getFieldError(\"user\", \"email\")}\n        inputProps={{ maxLength: 255 }}\n        helperText={`${email.length >= 255 ? \"Enter an email between 255 charecter\" : \"\"\n        }`}\n      />\n      {/* <TextFieldWithError\n        id=\"userNPI\"\n        fieldName=\"npi\"\n        label=\"Your NPI Number\"\n        value={personalNPI}\n        handleOnChange={(event) => setPersonalNPI(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event, \"user\")}\n        errors={getFieldError(\"user\", \"npi\")}\n        inputProps={{ maxLength: 15 }}\n        helperText={`${\n          personalNPI.length >= 15 ? \"Enter a number between 15 charecter\" : \"\"\n        }`}\n      /> */}\n      {/* <TextFieldWithError\n        fieldName=\"medical_license\"\n        label=\"Your Medical License Number\"\n        value={medicalLicenseNumber}\n        handleOnChange={(event) => setMedicalLicenseNumber(event.target.value)}\n        handleOnBlur={(event) => handleAjaxValidation(event, \"user\")}\n        errors={getFieldError(\"user\", \"medical_license\")}\n        inputProps={{ maxLength: 35 }}\n        helperText={`${\n          medicalLicenseNumber.length >= 35\n            ? \"Enter a numbner between 35 charecter\"\n            : \"\"\n        }`}\n      /> */}\n      <TextFieldWithError\n        fieldName=\"password\"\n        label=\"Your Password\"\n        type=\"password\"\n        value={password}\n        handleOnChange={(event) => setPassword(event.target.value)}\n        handleOnBlur={(event) => validatePassword(event)}\n        errors={getFieldError(\"user\", \"password\")}\n        inputProps={{ maxLength: 90 }}\n        helperText={`${password.length >= 90 ? \"Enter a password between 90 charecter\" : \"\"\n        }`}\n      />\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label={(\n          <div>\n            <span>\n              Check here to indicate that you have read and agree to the terms\n              of the\n              {\" \"}\n              <Link href=\"/agreement\">Customer Agreement</Link>\n            </span>\n          </div>\n        )}\n        className={classes.checkbox}\n        onChange={() => setTermsAndConditions(!termsAndConditions)}\n      />\n      <Button\n        disabled={fieldErrors.length > 0 || !termsAndConditions}\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        type=\"submit\"\n      >\n        Sign up\n      </Button>\n      <Grid container>\n        <Grid item xs>\n          <Link href=\"/login_client\" variant=\"body2\">\n            Already a member? Login here\n          </Link>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nPracticeForm.defaultProps = {\n  onFormSubmit: () => { },\n  errors: null,\n};\n\nPracticeForm.propTypes = {\n  onFormSubmit: PropTypes.func,\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default PracticeForm;\n","import React, { useState } from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport Dimmer from \"../../../components/common/Dimmer\";\nimport EmailService from \"../../../services/email.service\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    \"& p\": {\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n    },\n  },\n}));\n\nconst Success = ({ user }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [errors, setErrors] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendResendEmailRequest = () => {\n    setIsLoading(true);\n    EmailService.resendEmailVerification(user).then(\n      (response) => {\n        setErrors(response.data);\n        enqueueSnackbar(response.data.message, {\n          variant: \"success\",\n        });\n        setIsLoading(false);\n      },\n      (error) => {\n        setErrors(error.response);\n      },\n    );\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        {errors && (\n          <Alert severity={errors.status || \"error\"}>{errors.message}</Alert>\n        )}\n        <p>Thank you for signing up. </p>\n        <p>\n          Please confirm your email address by clicking one of the email just\n          emailed you.\n        </p>\n        <p>\n          <Button onClick={() => sendResendEmailRequest()} color=\"primary\">\n            Resend confirmation email\n          </Button>\n        </p>\n      </CardContent>\n      <Dimmer isOpen={isLoading} />\n    </Card>\n  );\n};\n\nSuccess.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Success;\n","import React, { useState } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { useSnackbar } from \"notistack\";\n\nimport AuthService from \"../../services/auth.service\";\nimport EmailService from \"../../services/email.service\";\nimport PracticeForm from \"./components/PracticeForm\";\nimport Success from \"./components/Success\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  pageTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent\",\n    color: theme.palette.text.secondary,\n  },\n  lockIcon: {\n    fontSize: \"40px\",\n  },\n}));\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [signedUpUser, setSignedUpUser] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [success, setSuccess] = useState(false);\n\n  const sendVerificationEmail = (data) => {\n    EmailService.sendEmailVerification(data).then(\n      (response) => {\n        setSuccess(true);\n        enqueueSnackbar(`${response.data.message}`, {\n          variant: \"success\",\n        });\n      },\n      (error) => {\n        setSuccess(false);\n        enqueueSnackbar(`${error.response.data}`, {\n          variant: \"error\",\n        });\n      },\n    );\n  };\n\n  const handleFormSubmit = (data) => {\n    AuthService.register(data).then(\n      (response) => {\n        if (response.data) {\n          setSuccess(true);\n          sendVerificationEmail(response.data.data.user);\n          setSignedUpUser(response.data.data.user);\n        }\n        enqueueSnackbar(`${response.data.message}`, {\n          variant: \"success\",\n        });\n      },\n      (error) => {\n        if (error.response) {\n          setErrors(error.response.data.message);\n        }\n      },\n    );\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon className={classes.lockIcon} />\n        </Avatar>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          className={classes.pageTitle}\n        >\n          Physician Sign Up\n        </Typography>\n        {success ? (\n          <Success user={signedUpUser} />\n        ) : (\n          <PracticeForm\n            onFormSubmit={handleFormSubmit}\n            errors={errors}\n          />\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ errors, variant, children }) => (\n  <>\n    {errors\n      && errors.map((error, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Alert severity=\"error\" variant={variant} key={index}>\n          {error.msg}\n          {children}\n        </Alert>\n      ))}\n  </>\n);\n\nError.defaultProps = {\n  errors: null,\n  children: null,\n  variant: \"outlined\",\n};\n\nError.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Error;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\n\nclass EmailService {\n  sendEmailVerification(user) {\n    return axios.post(`${API_BASE}/email/send/verification/`, user);\n  }\n\n  resendEmailVerification(user) {\n    return axios.post(`${API_BASE}/email/resend/verification/`, user);\n  }\n\n  emailVerify(userId, token) {\n    return axios.get(`${API_BASE}/email/confirmation/${userId}/${token}`);\n  }\n}\n\nexport default new EmailService();\n","import React from \"react\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\n// TODO:: Add local fetching indicator https://www.basefactor.com/react-how-to-display-a-loading-indicator-on-fetch-calls\nconst Dimmer = ({ isOpen }) => {\n  const classes = useStyles();\n  const handleClose = () => {\n  };\n\n  return (\n    <Backdrop className={classes.backdrop} open={isOpen} onClick={handleClose}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nDimmer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Dimmer;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\n\nclass AuthService {\n  async login(user) {\n    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {\n      email: user.email,\n      password: user.password,\n    });\n    if (loginResponse.data) {\n      if (loginResponse.data.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.data));\n      }\n      return loginResponse.data;\n    }\n    return false;\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  passwordChangeRequest(email) {\n    return axios.post(`${API_BASE}/auth/reset_password/user/${email}`);\n  }\n\n  resetPassword(userId, token, password) {\n    return axios.post(`${API_BASE}/auth/reset/${userId}/${token}`, {\n      password,\n    });\n  }\n\n  register(user) {\n    return axios.post(`${API_BASE}/auth/signup`, user);\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  checkAuth() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // TODO:: Need Token validation check\n    if (user && user.accessToken) {\n      return true;\n    }\n    return false;\n  }\n\n  validate(data) {\n    return axios.post(`${API_BASE}/auth/field/validate`, data);\n  }\n}\n\nexport default new AuthService();\n"],"sourceRoot":""}