{"version":3,"sources":["screens/patient-portal/auth/Login.js","components/common/Error.js","components/common/CountrySelect.js","components/common/RegionSelect.js","services/patient_portal/auth.service.js","static/expandForm.js","screens/patient-portal/auth/components/SignupForm.js","assets/img/NoClientLogo.png","screens/patient-portal/auth/components/Image.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","boxShadow","padding","Logo","textAlign","width","maxWidth","fontSize","fontWeight","avatar","margin","backgroundColor","color","palette","text","secondary","lockIcon","pageTitle","marginBottom","form","withErrors","opacity","submit","meta","forgotPass","PatientLogin","classes","useForm","register","handleSubmit","errors","enqueueSnackbar","useSnackbar","patientLogin","useAuth","clientCode","useParams","useState","email","setEmail","clientId","setClientId","password","setPassword","apiErrors","setApiErrors","useEffect","AuthService","getClientCode","then","res","client_id","data","error","response","status","msg","message","onFormSubmit","a","localStorage","username","trim","console","variant","component","className","lassName","src","process","alt","clsx","length","noValidate","onSubmit","disabled","value","type","inputRef","required","pattern","id","label","name","autoComplete","fullWidth","autoFocus","onChange","event","target","helperText","container","item","xs","href","Error","children","map","index","severity","defaultProps","CountryRegionMUISelectors","props","country","size","handleChange","outlined","select","e","CountryRegionData","option","getRegions","split","regionPair","RegionMUISelectors","region","PatientAuthService","user","axios","post","API_BASE","loginResponse","accessToken","setItem","JSON","stringify","get","patient","patientId","token","FormFields","basicInfo","baseType","options","addressDetails","contactInfo","emergencyInfo","insuranceInfo","medicalInfo","userNamePasswordDetails","inputRow","sigCanvas","border","sigCanvasClear","position","background","top","sigCanvasSave","sigImage","backgroundSize","height","signupActions","SignupForm","BasicInfo","AddressDetails","ContactInfo","EmergencyInfo","InsuranceInfo","MedicalInfo","UserNamePasswordInfo","firstname","middlename","lastname","gender","address","address2","find","state","city","postal","contactPreference","formFields","setFormFields","fieldErrors","setFieldErrors","handleInputChange","handleCountryRegion","identifier","patientErrors","filter","err","param","includes","getFieldError","fieldName","handleAjaxValidation","validate","updatedErrors","uniqueFieldErrors","_","uniqWith","isEqual","catch","preventDefault","formData","phone_home","phone_cell","phone_work","phone_other","phone_note","dob","ssn","emergency_firstname","emergency_middlename","emergency_lastname","emergency_relationship","emergency_email","emergency_phone","insurance_name","insurance_group","insurance_member","insurance_phone","insurance_desc","primary_reason","admin_note","medical_note","referred_by","waist","weight","weigh","Grid","Alert","Typography","gutterBottom","md","TextField","placeholder","MenuItem","i","Divider","lg","CountrySelect","RegionSelect","onBlur","slice","multiline","rows","confirmPassword","validatePassword","justify","Button","Image","onErrorImage","imageEl","useRef","onError","current","ref","defaultErrorImage"],"mappings":"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","file":"static/js/55.9f96fe30.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport clsx from \"clsx\";\nimport { useSnackbar } from \"notistack\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\n\nimport Error from \"../../../components/common/Error\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport AuthService from \"../../../services/patient_portal/auth.service\";\nimport { Image } from \"./components\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    boxShadow: \"0 15px 35px 0 rgb(60 66 87 / 8%), 0 5px 15px 0 rgb(0 0 0 / 12%)\",\n    padding: theme.spacing(2),\n  },\n  Logo: {\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n    \"& img\": {\n      width: \"100%\",\n      maxWidth: 180,\n    },\n    \"& p\": {\n      fontSize: \"16px\",\n      \"& span\": {\n        fontWeight: 600,\n      },\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent\",\n    color: theme.palette.text.secondary,\n  },\n  lockIcon: {\n    fontSize: \"40px\",\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  withErrors: {\n    opacity: 0.9,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  meta: {\n    \"& a\": {\n      color: theme.palette.text.secondary,\n      fontSize: \"12px\",\n    },\n  },\n  forgotPass: {\n    textAlign: \"right\",\n  },\n}));\n\nconst PatientLogin = () => {\n  const classes = useStyles();\n  const {\n    register, handleSubmit, errors,\n  } = useForm();\n  const { enqueueSnackbar } = useSnackbar();\n  const { patientLogin } = useAuth();\n  const { clientCode } = useParams();\n  const [email, setEmail] = useState(\"\");\n  const [clientId, setClientId] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [apiErrors, setApiErrors] = useState([]);\n\n  useEffect(() => {\n    AuthService.getClientCode(clientCode).then(\n      (res) => {\n        const { client_id } = res.data[0];\n        setClientId(client_id);\n      },\n      (error) => {\n        if (!error.response) {\n          return;\n        }\n        const { data, status } = error.response;\n\n        if (status === 400) {\n          setApiErrors([\n            {\n              msg: data.message,\n            },\n          ]);\n        } else {\n          setApiErrors([]);\n        }\n      },\n    );\n  }, [clientCode]);\n\n  const onFormSubmit = async () => {\n    if (email !== \"\") {\n      localStorage.username = email;\n      localStorage.password = password;\n    }\n\n    try {\n      await patientLogin(clientId, email.trim(), password.trim()); // Call AuthProvider login\n      // enqueueSnackbar(\"Successfully logged in!\", {\n      //  variant: \"success\",\n      // });\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar(\"Unable to login\", {\n        variant: \"error\",\n      });\n      setApiErrors([\n        {\n          msg: error.message,\n        },\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.username !== \"\") {\n      setEmail(localStorage.username);\n      setPassword(localStorage.password);\n    }\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.Logo}>\n        <Image\n          lassName=\"clientLogo\"\n          src={`${process.env.REACT_APP_API_URL}static/client/c${clientId}_logo.png`}\n          alt=\"Client Logo\"\n        />\n      </div>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon className={classes.lockIcon} />\n        </Avatar>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          className={classes.pageTitle}\n        >\n          Patient Sign in\n        </Typography>\n\n        <Error errors={apiErrors} />\n\n        <form\n          className={clsx({\n            [classes.form]: true, // always apply\n            [classes.withErrors]: errors.length > 0, // only when isLoading === true\n          })}\n          noValidate\n          onSubmit={handleSubmit(onFormSubmit)}\n        >\n          <TextField\n            disabled={errors.length > 0}\n            value={email}\n            type=\"email\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            inputRef={register({\n              required: \"You must provide the email address!\",\n              pattern: {\n                // eslint-disable-next-line max-len, no-useless-escape\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"You must provide a valid email address!\",\n              },\n            })}\n            error={!!errors.email}\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            fullWidth\n            autoFocus\n            required\n            onChange={(event) => setEmail(event.target.value)}\n            helperText={errors?.email?.message}\n          />\n          <TextField\n            disabled={errors.length > 0}\n            value={password}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            disabled={!email || !password || errors.length > 0}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </form>\n        <Grid container className={classes.meta}>\n          <Grid item xs={6}>\n            <Link href={`/signup/${clientCode}`} variant=\"body2\">\n              Don&apos;t have an account? Register.\n            </Link>\n          </Grid>\n          <Grid item xs={6} className={classes.forgotPass}>\n            <Link href={`/forgot/${clientCode}`} variant=\"body2\">\n              Forgot your password? Reset.\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default PatientLogin;\n","import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ errors, variant, children }) => (\n  <>\n    {errors\n      && errors.map((error, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Alert severity=\"error\" variant={variant} key={index}>\n          {error.msg}\n          {children}\n        </Alert>\n      ))}\n  </>\n);\n\nError.defaultProps = {\n  errors: null,\n  children: null,\n  variant: \"outlined\",\n};\n\nError.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Error;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n\nfunction CountryRegionMUISelectors(props) {\n  const {\n    country, size, handleChange, outlined, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"country\"\n      label=\"Country\"\n      value={country}\n      select\n      onChange={(e) => handleChange(\"country\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {CountryRegionData.map((option) => (\n        <MenuItem key={option[0]} value={option}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nCountryRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  country: null,\n  outlined: true,\n  margin: \"none\",\n};\n\nCountryRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  handleChange: PropTypes.func.isRequired,\n  outlined: PropTypes.bool,\n  margin: PropTypes.string,\n};\n\nexport default CountryRegionMUISelectors;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst getRegions = (country) => {\n  if (!country) {\n    return [];\n  }\n  return country[2].split(\"|\").map((regionPair) => {\n    const [regionName = null, regionInShort] = regionPair.split(\"~\");\n    return [regionName, regionInShort];\n  });\n};\n\nfunction RegionMUISelectors(props) {\n  const {\n    size, label, region, handleChange, outlined, country, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"state\"\n      label={label}\n      value={region}\n      select\n      onChange={(e) => handleChange(\"region\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {getRegions(country).map((option) => (\n        <MenuItem key={option[0]} value={option[1]}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  outlined: true,\n  margin: \"none\",\n};\n\nRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  outlined: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  region: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]).isRequired,\n  margin: PropTypes.string,\n};\n\nexport default RegionMUISelectors;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\n\nclass PatientAuthService {\n  async login(user) {\n    const loginResponse = await axios.post(`${API_BASE}/auth/patient/login`, {\n      client_id: user.client_id,\n      email: user.email,\n      password: user.password,\n    });\n    if (loginResponse.data) {\n      if (loginResponse.data.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.data));\n      }\n      return loginResponse.data;\n    }\n    return false;\n  }\n\n  getClientCode(clientCode) {\n    return axios\n      .get(`${API_BASE}/auth/patient/client/?c=${clientCode}`)\n      .then((res) => res.data);\n  }\n\n  validate(data) {\n    return axios.post(`${API_BASE}/auth/field/validate`, data);\n  }\n\n  register(patient) {\n    return axios.post(`${API_BASE}/auth/patient/signup`, patient);\n  }\n\n  passwordChangeRequest(email, data) {\n    return axios.post(`${API_BASE}/auth/patient/reset_password/${email}`, data);\n  }\n\n  resetPassword(patientId, token, password) {\n    return axios.post(`${API_BASE}/auth/patient/reset/${patientId}/${token}`, {\n      password,\n    });\n  }\n}\n\nexport default new PatientAuthService();\n","export const FormFields = {\n  basicInfo: [\n    {\n      name: \"firstname\",\n      id: \"firstname\",\n      label: \"First Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"middlename\",\n      id: \"middlename\",\n      label: \"Middle Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"lastname\",\n      id: \"lastname\",\n      label: \"Last Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"dob\",\n      id: \"dob\",\n      label: \"\",\n      baseType: \"input\",\n      type: \"date\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"ssn\",\n      id: \"ssn\",\n      label: \"Social Security\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"nickName\",\n      id: \"nickName\",\n      label: \"Nick Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"aboutUs\",\n      id: \"aboutUs\",\n      label: \"How did you hear about us?\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"gender\",\n      id: \"gender\",\n      label: \"Gender\",\n      baseType: \"select\",\n      type: null,\n      required: true,\n      options: [\n        {\n          label: \"\",\n          value: \"\",\n        },\n        {\n          label: \"Male\",\n          value: \"M\",\n        },\n        {\n          label: \"Female\",\n          value: \"F\",\n        },\n      ],\n    },\n  ],\n  addressDetails: [\n    {\n      name: \"address\",\n      id: \"address\",\n      label: \"Address\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"address2\",\n      id: \"address2\",\n      label: \"Address 2\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"city\",\n      id: \"city\",\n      label: \"City\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"postal\",\n      id: \"postal\",\n      label: \"Zip/Postal\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n  ],\n  contactInfo: [\n    {\n      name: \"phone_home\",\n      id: \"phone_home\",\n      label: \"Home Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"phone_cell\",\n      id: \"phone_cell\",\n      label: \"Cell Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"phone_work\",\n      id: \"phone_work\",\n      label: \"Work Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"email\",\n      id: \"email\",\n      label: \"Email\",\n      baseType: \"input\",\n      type: \"email\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"contactPreference\",\n      id: \"contactPreference\",\n      label: \"Contact Preference\",\n      baseType: \"select\",\n      type: null,\n      required: false,\n      options: [\n        {\n          label: \"Mobile Phone\",\n          value: \"mobile\",\n        },\n        {\n          label: \"Home Phone\",\n          value: \"home\",\n        },\n        {\n          label: \"Work Phone\",\n          value: \"work\",\n        },\n      ],\n    },\n  ],\n  emergencyInfo: [\n    {\n      name: \"emergency_firstname\",\n      id: \"emergency_firstname\",\n      label: \"First Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_middlename\",\n      id: \"emergency_middlename\",\n      label: \"Middle Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_lastname\",\n      id: \"emergency_lastname\",\n      label: \"Last Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_relationship\",\n      id: \"emergency_relationship\",\n      label: \"Relationship\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_email\",\n      id: \"emergencyemail\",\n      label: \"Email\",\n      baseType: \"input\",\n      type: \"email\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_phone\",\n      id: \"emergency_phone\",\n      label: \"Contact Number\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: false,\n    },\n  ],\n  insuranceInfo: [\n    {\n      name: \"insurance_name\",\n      id: \"insurance_name\",\n      label: \"Plan Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insurance_group\",\n      id: \"insurance_group\",\n      label: \"Group Number\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insurance_member\",\n      id: \"insurance_member\",\n      label: \"Member Id\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insuranceType\",\n      id: \"insuranceType\",\n      label: \"Insurance Type\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n  ],\n  medicalInfo: [\n    {\n      name: \"height\",\n      id: \"height\",\n      label: \"Height in (INCHES)\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"weight\",\n      id: \"weight\",\n      label: \"Weight in (POUNDS)\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"medical_note\",\n      id: \"medical_note\",\n      label: \"Reason For Consult\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n  ],\n  userNamePasswordDetails: [\n    {\n      name: \"password\",\n      id: \"password\",\n      label: \"Password\",\n      baseType: \"input\",\n      type: \"password\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"confirmPassword\",\n      id: \"confirmPassword\",\n      label: \"Confirm Password\",\n      baseType: \"input\",\n      type: \"password\",\n      options: [],\n      required: true,\n    },\n  ],\n};\n","import React, { useState } from \"react\";\n\nimport {\n  TextField,\n  Button,\n  Grid,\n  Typography,\n  MenuItem,\n  // Checkbox,\n  // FormControlLabel,\n  Divider,\n} from \"@material-ui/core\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import CheckIcon from \"@material-ui/icons/CheckOutlined\";\n// import RotateLeftTwoToneIcon from \"@material-ui/icons/RotateLeftTwoTone\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n// import SignatureCanvas from \"react-signature-canvas\";\n\nimport CountrySelect from \"../../../../components/common/CountrySelect\";\nimport Error from \"../../../../components/common/Error\";\nimport RegionSelect from \"../../../../components/common/RegionSelect\";\nimport PatientAuthService from \"../../../../services/patient_portal/auth.service\";\nimport { FormFields } from \"../../../../static/expandForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRow: {\n    margin: theme.spacing(3, 0),\n  },\n  sigCanvas: {\n    border: \"1px solid grey\",\n  },\n  sigCanvasClear: {\n    position: \"absolute\",\n    background: \"#f3f3f3\",\n    top: \"-20px\",\n  },\n  sigCanvasSave: {\n    position: \"absolute\",\n    background: \"#f3f3f3\",\n    top: \"30px\",\n  },\n  sigImage: {\n    backgroundSize: \"200px 50px\",\n    width: \"200px\",\n    height: \"50px\",\n    backgroundColor: \"white\",\n  },\n  signupActions: {\n    marginTop: theme.spacing(1),\n    // maxWidth: \"506px\",\n    // marginLeft: \"auto\",\n    // marginRight: \"auto\",\n    // textAlign: \"right\",\n    // display: \"block\",\n  },\n}));\n\nconst SignupForm = (props) => {\n  const classes = useStyles();\n  const { errors, onFormSubmit } = props;\n\n  const BasicInfo = FormFields.basicInfo;\n  const AddressDetails = FormFields.addressDetails;\n  const ContactInfo = FormFields.contactInfo;\n  const EmergencyInfo = FormFields.emergencyInfo;\n  const InsuranceInfo = FormFields.insuranceInfo;\n  const MedicalInfo = FormFields.medicalInfo;\n  const UserNamePasswordInfo = FormFields.userNamePasswordDetails;\n\n  // const [termsChecked, setTermsChecked] = useState(true);\n  // const [signatureRef, setSignatureRef] = useState(null);\n  // const [signature, setSignature] = useState(null);\n\n  const [formFields, setFormFields] = useState({\n    firstname: \"\",\n    middlename: \"\",\n    lastname: \"\",\n    gender: \"\",\n    address: \"\",\n    address2: \"\",\n    country: CountryRegionData.find((item) => item?.[1] === \"US\"),\n    state: \"\",\n    city: \"\",\n    postal: \"\",\n    contactPreference: \"\",\n  });\n  const [fieldErrors, setFieldErrors] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { value, name } = e.target;\n    setFormFields({\n      ...formFields,\n      [name]: value,\n    });\n  };\n\n  const handleCountryRegion = (identifier, value) => {\n    if (identifier === \"country\") {\n      setFormFields({\n        ...formFields,\n        [identifier]: value,\n      });\n    } else if (identifier === \"region\") {\n      const ident = \"state\";\n      setFormFields({\n        ...formFields,\n        [ident]: value,\n      });\n    }\n  };\n\n  // const handleCheckboxChange = (event) => {\n  //   setTermsChecked(event.target.checked);\n  // };\n\n  // const clearSignaturePad = () => {\n  //   signatureRef.clear();\n  // };\n\n  // const saveSignaturePad = () => {\n  //   setSignature(signatureRef.getTrimmedCanvas().toDataURL(\"image/png\"));\n  // };\n\n  const patientErrors = errors && errors.filter((err) => err.param.includes(\"patient\"));\n\n  const getFieldError = (target, fieldName) => {\n    let value = `client.${fieldName}`;\n    if (target) {\n      value = `${target}.${fieldName}`;\n    }\n    return fieldErrors && fieldErrors.filter((err) => err.param === value);\n  };\n\n  const handleAjaxValidation = (event, target) => {\n    if (!event.target) {\n      return;\n    }\n\n    PatientAuthService.validate({\n      fieldName: event.target.name,\n      value: event.target.value,\n      target: target || \"patient\",\n    })\n      .then(\n        (response) => {\n          // Remove errors record with param\n          const updatedErrors = fieldErrors.filter(\n            (error) => error.param !== response.data.message.param,\n          );\n          setFieldErrors(updatedErrors);\n        },\n        (error) => {\n          if (!error.response) {\n            // network error\n            console.error(error);\n          } else {\n            const uniqueFieldErrors = _.uniqWith(\n              [...fieldErrors, error.response.data.message],\n              _.isEqual,\n            );\n            setFieldErrors(uniqueFieldErrors);\n          }\n        },\n      )\n      .catch((err) => {\n        console.error(\"catch err\", err);\n      });\n  };\n\n  const validatePassword = (event) => {\n    if (event.target.value.length < 8) {\n      setFieldErrors([\n        ...fieldErrors,\n        {\n          value: event.target.value,\n          msg: \"Too Weak. Must be atleast 8 Characters\",\n          param: `patient.${event.target.name}`,\n        },\n      ]);\n    } else {\n      const updatedErrors = fieldErrors.filter(\n        (error) => error.param !== `patient.${event.target.name}`,\n      );\n      setFieldErrors(updatedErrors);\n    }\n\n    if (event.target.name === \"confirmPassword\") {\n      if (formFields.password !== formFields.confirmPassword) {\n        setFieldErrors([\n          ...fieldErrors,\n          {\n            value: event.target.value,\n            msg: \"Passwords must be same\",\n            param: `patient.${event.target.name}`,\n          },\n        ]);\n      } else {\n        const updatedErrors = fieldErrors.filter(\n          (error) => error.param !== `patient.${event.target.name}`,\n        );\n        setFieldErrors(updatedErrors);\n      }\n    }\n  };\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    const formData = {\n      patient: {\n        status: \"A\",\n        firstname: formFields.firstname,\n        middlename: formFields.middlename,\n        lastname: formFields.lastname,\n        // preferred_name: formFields.preferred_name.trim(),\n        address: formFields.address,\n        address2: formFields.address2,\n        city: formFields.city,\n        state: formFields.state,\n        postal: formFields.postal,\n        country: formFields.country[0],\n        phone_home: formFields.phone_home,\n        phone_cell: formFields.phone_cell,\n        phone_work: formFields.phone_work,\n        phone_other: formFields.phone_other,\n        phone_note: formFields.phone_note,\n        email: formFields.email,\n        password: formFields.password,\n        dob: formFields.dob,\n        ssn: formFields.ssn,\n        gender: formFields.gender,\n        emergency_firstname: formFields.emergency_firstname,\n        emergency_middlename: formFields.emergency_middlename,\n        emergency_lastname: formFields.lastname,\n        emergency_relationship: formFields.emergency_relationship,\n        emergency_email: formFields.emergency_email,\n        emergency_phone: formFields.emergency_phone,\n        insurance_name: formFields.insurance_name,\n        insurance_group: formFields.insurance_group,\n        insurance_member: formFields.insurance_member,\n        insurance_phone: formFields.insurance_phone,\n        insurance_desc: formFields.insurance_desc,\n        primary_reason: formFields.primary_reason,\n        admin_note: formFields.admin_note,\n        medical_note: formFields.medical_note,\n        referred_by: formFields.referred_by,\n        height: formFields.height,\n        waist: formFields.waist,\n        weight: formFields.weigh,\n        // imgBase64: signatureRef.getTrimmedCanvas().toDataURL(\"image/png\"),\n      },\n    };\n    onFormSubmit(formData);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmission}>\n        <Grid className={classes.inputRow}>\n          {patientErrors\n            && patientErrors.map((error, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Alert severity=\"error\" variant=\"filled\" key={index}>\n                {error.msg}\n              </Alert>\n            ))}\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Basic Information\n          </Typography>\n          <Grid container spacing={1}>\n            {BasicInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                {item.baseType === \"input\" ? (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    label={item.label}\n                    name={item.name}\n                    id={item.id}\n                    type={item.type}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  />\n                ) : (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    select\n                    placeholder={item.label}\n                    label={item.label}\n                    id={item.id}\n                    name={item.name}\n                    value={formFields[item.name]}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  >\n                    <MenuItem key={-1} value=\"\" />\n                    {item.options.map((option, i) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={i} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Address Information\n          </Typography>\n          <Grid container spacing={1}>\n            {AddressDetails.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n            <Grid item lg={4}>\n              <CountrySelect\n                size=\"small\"\n                id=\"country-select\"\n                error={null}\n                name=\"country-select\"\n                helperText=\"\"\n                label=\"Country\"\n                outlined\n                handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                country={formFields.country}\n              />\n            </Grid>\n            <Grid item lg={4}>\n              <RegionSelect\n                size=\"small\"\n                id=\"state-select\"\n                error={null}\n                name=\"state-select\"\n                helperText=\"\"\n                label=\"State\"\n                outlined\n                handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                country={formFields.country}\n                region={formFields.state}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Contact Information\n          </Typography>\n          <Grid container spacing={1} alignItems=\"flex-end\">\n            {ContactInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                {item.baseType === \"input\" ? (\n                  <>\n                    <TextField\n                      required={item.required}\n                      size=\"small\"\n                      variant=\"outlined\"\n                      label={item.label}\n                      name={item.name}\n                      id={item.id}\n                      type={item.type}\n                      fullWidth\n                      onChange={(e) => handleInputChange(e)}\n                      onBlur={(event) => (item.name === \"email\" || item.name === \"ssn\")\n                        && handleAjaxValidation(event)}\n                    />\n                    <Error errors={getFieldError(\"patient\", item.name)} />\n                  </>\n                ) : (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    // className={classes.select}\n                    select\n                    placeholder={item.label}\n                    label={item.label}\n                    id={item.id}\n                    name={item.name}\n                    value={formFields[item.name]}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  >\n                    {item.options.map((option, i) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={i} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Emergency Information\n          </Typography>\n          <Grid container spacing={1}>\n            {EmergencyInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  onBlur={(event) => item.name === \"emergency_email\"\n                    && handleAjaxValidation(event)}\n                />\n                <Error errors={getFieldError(\"patient\", item.name)} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Insurance Information\n          </Typography>\n          <Grid container spacing={1}>\n            {InsuranceInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Medical Information\n          </Typography>\n          <Grid container spacing={1}>\n            {MedicalInfo.slice(0, 2).map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={6}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n            {MedicalInfo.slice(2, 3).map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={12}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  multiline\n                  rows={5}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Set Password for Patient Portal\n          </Typography>\n          <Grid container spacing={1}>\n            {UserNamePasswordInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  onBlur={(event) => (item.name === \"password\"\n                    || item.name === \"confirmPassword\")\n                    && validatePassword(event)}\n                />\n                <Error errors={getFieldError(\"patient\", item.name)} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        {/* <Divider />\n\n        <FormControlLabel\n          value=\"end\"\n          control={(\n            <Checkbox\n              checked={termsChecked}\n              onChange={(e) => handleCheckboxChange(e)}\n              color=\"primary\"\n            />\n          )}\n          label=\"I have read and accept the terms of the privacy policy below.\"\n          labelPlacement=\"end\"\n        />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Signature\n          </Typography>\n          <Grid container justify=\"center\" style={{ position: \"relative\" }}>\n            <Grid item>\n              <SignatureCanvas\n                ref={(ref) => setSignatureRef(ref)}\n                on\n                penColor=\"black\"\n                canvasProps={{\n                  width: 500,\n                  height: 200,\n                  className: classes.sigCanvas,\n                }}\n              />\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => clearSignaturePad()}\n                className={classes.sigCanvasClear}\n              >\n                <RotateLeftTwoToneIcon />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => saveSignaturePad()}\n                className={classes.sigCanvasSave}\n              >\n                <CheckIcon />\n              </IconButton>\n            </Grid>\n            {signature ? (\n              <img\n                alt=\"signature\"\n                className={classes.sigImage}\n                src={signature}\n              />\n            ) : null}\n          </Grid>\n        </Grid> */}\n        <Grid container justify=\"center\" className={classes.signupActions}>\n          <Button\n            disabled={!formFields.email || fieldErrors.length > 0 || !formFields.password}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nSignupForm.defaultProps = {\n  errors: null,\n  onFormSubmit: () => { },\n};\n\nSignupForm.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  onFormSubmit: PropTypes.func,\n};\n\nexport default SignupForm;\n","export default __webpack_public_path__ + \"static/media/NoClientLogo.4083c1ce.png\";","import React, { useRef } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport defaultErrorImage from \"../../../../assets/img/NoClientLogo.png\";\n\nconst Image = ({\n  src, alt, className, onErrorImage,\n}) => {\n  const imageEl = useRef(null);\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      onError={() => {\n        imageEl.current.src = onErrorImage;\n      }}\n      ref={imageEl}\n    />\n  );\n};\n\nImage.defaultProps = {\n  onErrorImage: defaultErrorImage,\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  onErrorImage: PropTypes.string,\n};\n\nexport default Image;\n"],"sourceRoot":""}