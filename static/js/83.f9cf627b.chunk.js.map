{"version":3,"sources":["services/patientPortalHeader.service.js","screens/Client/Setup/PortalHeader/PortalHeader.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["axios","get","API_BASE","headers","authHeader","id","data","put","useStyles","makeStyles","theme","root","flexGrow","padding","uploadButtons","display","alignItems","justifyContent","maxWidth","marginBottom","spacing","breakpoints","up","marginRight","portal","border","borderColor","margin","height","textField","width","backgroundColor","outline","fontFamily","color","fontSize","resize","PortalHeader","classes","React","updated","setUpdated","updatedUser","setUpdatedUser","header","setHeader","portalId","setPortalId","isInEditMode","setIsInEditMode","editedHeader","setEditedHeader","getPatientPortalHeader","PatientPortalHeaderService","getClientPortalHeader","then","res","map","moment","format","updated_user","editPatientPortalHeader","editClientPortalHeader","handleDoubleClick","CssBaseline","Container","className","Typography","component","variant","title","Button","onClick","setTimeout","Grid","container","justify","item","md","xs","onChange","e","target","value","onKeyUp","event","keyCode","onDoubleClick","ReactHtmlParser","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","props","ref","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","_props$lg","lg","_props$md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","_extends","StyledGrid","withStyles","boxSizing","flexWrap","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","generateGrid","name"],"mappings":"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","file":"static/js/83.f9cf627b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\nimport authHeader from \"./auth-header\";\n\nclass PatientPortalHeader {\n  getClientPortalHeader() {\n    return axios.get(`${API_BASE}/patient-portal-header`, {\n      headers: authHeader(),\n    });\n  }\n\n  editClientPortalHeader(id, data) {\n    return axios.put(`${API_BASE}/patient-portal-header/${id}`, data, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new PatientPortalHeader();\n","import * as React from \"react\";\n\nimport {\n  Button, Container, CssBaseline, makeStyles,\n} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moment from \"moment\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nimport PatientPortalHeaderService from \"../../../../services/patientPortalHeader.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"40px 0px\",\n  },\n  uploadButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    maxWidth: \"450px\",\n    marginBottom: theme.spacing(1),\n    \"& h1\": {\n      [theme.breakpoints.up(\"md\")]: {\n        marginRight: theme.spacing(4),\n      },\n    },\n  },\n  portal: {\n    border: \"1px solid\",\n    borderColor: \"textPrimary\",\n    margin: \"5px 0px\",\n    padding: \"10px\",\n    height: \"500px\",\n  },\n  textField: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    outline: \"none\",\n    fontFamily: \"inherit\",\n    color: \"inherit\",\n    fontSize: \"inherit\",\n    resize: \"none\",\n  },\n}));\n\nconst PortalHeader = () => {\n  const classes = useStyles();\n  const [updated, setUpdated] = React.useState(\"\");\n  const [updatedUser, setUpdatedUser] = React.useState(\"\");\n  const [header, setHeader] = React.useState(\"\");\n  const [portalId, setPortalId] = React.useState(\"\");\n  const [isInEditMode, setIsInEditMode] = React.useState(false);\n  const [editedHeader, setEditedHeader] = React.useState(\"\");\n\n  const getPatientPortalHeader = () => {\n    PatientPortalHeaderService.getClientPortalHeader().then((res) => {\n      res.data.data.map((portal) => {\n        setUpdated(moment(portal.updated).format(\"lll\"));\n        setUpdatedUser(portal.updated_user);\n        setHeader(portal.header);\n        setPortalId(portal.id);\n        return portal;\n      });\n    });\n  };\n\n  const editPatientPortalHeader = () => {\n    PatientPortalHeaderService.editClientPortalHeader(portalId, {\n      header: editedHeader,\n    });\n  };\n\n  React.useEffect(() => {\n    getPatientPortalHeader();\n  }, []);\n\n  const handleDoubleClick = () => {\n    setIsInEditMode(!isInEditMode);\n  };\n\n  const handleOnSaveClick = () => {\n    setIsInEditMode(false);\n    editPatientPortalHeader();\n    setTimeout(() => {\n      getPatientPortalHeader();\n    }, 200);\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      setIsInEditMode(false);\n      editPatientPortalHeader();\n      setTimeout(() => {\n        getPatientPortalHeader();\n      }, 200);\n    }\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth={false} className={classes.root}>\n        <div className={classes.uploadButtons}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            Portal Header\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"span\"\n            onClick={handleOnSaveClick}\n          >\n            Save\n          </Button>\n        </div>\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item md={12} xs={12}>\n            <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n              This page is used to set the patient portal header\n            </Typography>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item md={5} xs={12}>\n                <div className={classes.portal}>\n                  {isInEditMode ? (\n                    <textarea\n                      className={classes.textField}\n                      onChange={(e) => setEditedHeader(e.target.value)}\n                      onKeyUp={handleKeyUp}\n                    >\n                      {header}\n                    </textarea>\n                  ) : (\n                    <Typography\n                      component=\"p\"\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                      onDoubleClick={handleDoubleClick}\n                    >\n                      {ReactHtmlParser(header)}\n                    </Typography>\n                  )}\n                </div>\n                <Typography\n                  component=\"p\"\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Updated:\n                  {\" \"}\n                  {`${updated} ${updatedUser}`}\n                </Typography>\n              </Grid>\n              <Grid item md={7} xs={12}>\n                <div className={classes.portal}>\n                  <Typography\n                    component=\"p\"\n                    variant=\"body2\"\n                    color=\"textPrimary\"\n                    onDoubleClick={handleDoubleClick}\n                  >\n                    {ReactHtmlParser(header)}\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default PortalHeader;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}