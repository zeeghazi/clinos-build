{"version":3,"sources":["services/icdcodes.service.js","screens/Client/Setup/ICDcodes/components/ICDcodesform.js","screens/Client/Setup/ICDcodes/components/ICDcodestable.js","screens/Client/Setup/ICDcodes/ICDcodes.js"],"names":["data","axios","post","API_BASE","headers","authHeader","id","userId","delete","useStyles","makeStyles","theme","root","display","flexDirection","margin","controlLabel","marginLeft","marginRight","textField","width","submit","marginTop","spacing","padding","fontSize","maxWidth","check","ICDcodesform","fetchSearchIcdCodes","textChangeHandler","checkBoxChangeHandler","classes","handleKeyUp","event","keyCode","className","TextField","size","variant","autoFocus","onChange","name","label","onKeyUp","FormControlLabel","control","Switch","color","Button","type","onClick","tableContainer","minWidth","actions","textAlign","border","StyledTableCell","withStyles","head","backgroundColor","palette","grey","fontWeight","body","TableCell","StyledTableRow","action","hover","height","TableRow","ICDcodestable","result","enqueueSnackbar","useSnackbar","user","useAuth","useState","state","setState","errors","setErrors","map","error","index","Alert","severity","msg","TableContainer","component","Paper","Table","table","aria-label","TableHead","TableBody","code","scope","checked","Boolean","favorite","e","icdcode_id","payload","icd_id","target","item","icdcodesService","addFavorite","then","response","setTimeout","message","deleteFavorite","changeHandler","updated","moment","format","updated_name","flexGrow","card","minHeight","alignItems","justifyContent","title","paddingBottom","ICDcodes","searchTerm","setSearchTerm","setFavorite","searchResult","setSearchResult","checkBox","search","res","CssBaseline","Typography","Grid","container","md","xs","value","length"],"mappings":"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","file":"static/js/103.99617e7d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\nimport authHeader from \"./auth-header\";\n\nclass Icdcodes {\n  search(data) {\n    return axios.post(`${API_BASE}/icd`, data, { headers: authHeader() });\n  }\n\n  addFavorite(id, userId, data) {\n    return axios.post(`${API_BASE}/icd/${id}/${userId}`, data, {\n      headers: authHeader(),\n    });\n  }\n\n  deleteFavorite(id) {\n    return axios.delete(`${API_BASE}/icd/${id}`, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new Icdcodes();\n","import React from \"react\";\n\nimport {\n  Button,\n  Switch,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"10px 0\",\n  },\n  controlLabel: {\n    marginLeft: \"0px\",\n    marginRight: \"0px\",\n  },\n  textField: {\n    width: \"250px\",\n  },\n  submit: {\n    marginTop: theme.spacing(1),\n    padding: \"4px 30px\",\n    fontSize: \"1rem\",\n    maxWidth: \"100px\",\n  },\n  check: {\n    marginLeft: \"7px\",\n    marginTop: \"5px\",\n  },\n}));\n\nconst ICDcodesform = ({\n  fetchSearchIcdCodes,\n  textChangeHandler,\n  checkBoxChangeHandler,\n}) => {\n  const classes = useStyles();\n  const handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      fetchSearchIcdCodes();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        size=\"small\"\n        variant=\"outlined\"\n        autoFocus\n        onChange={textChangeHandler}\n        className={classes.textField}\n        name=\"searchTerm\"\n        label=\"Name\"\n        onKeyUp={(event) => handleKeyUp(event)}\n      />\n      <FormControlLabel\n        control={(\n          <Switch\n            onChange={checkBoxChangeHandler}\n            color=\"primary\"\n            onKeyUp={(event) => handleKeyUp(event)}\n            name=\"favorite\"\n            size=\"small\"\n            className={classes.check}\n          />\n        )}\n        label=\"Favorite\"\n      />\n\n      <Button\n        size=\"small\"\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={fetchSearchIcdCodes}\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nICDcodesform.propTypes = {\n  fetchSearchIcdCodes: PropTypes.func.isRequired,\n  textChangeHandler: PropTypes.func.isRequired,\n  checkBoxChangeHandler: PropTypes.func.isRequired,\n};\n\nexport default ICDcodesform;\n","import React, { useState } from \"react\";\n\nimport {\n  makeStyles,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  withStyles,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport useAuth from \"../../../../../hooks/useAuth\";\nimport icdcodesService from \"../../../../../services/icdcodes.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    minWidth: 450,\n    marginTop: theme.spacing(2),\n  },\n  actions: {\n    textAlign: \"center\",\n    display: \"flex\",\n    border: \"none\",\n    \"& button\": {\n      fontSize: \"12px\",\n    },\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n      height: \"50px\",\n    },\n  },\n}))(TableRow);\n\nconst ICDcodestable = ({ result, fetchSearchIcdCodes }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const [state, setState] = useState(result);\n  const [errors, setErrors] = useState([]);\n\n  const changeHandler = (event, icdcode_id) => {\n    const payload = {\n      icd_id: icdcode_id,\n    };\n    const { checked } = event.target;\n    setState(\n      result.map((item) => {\n        if (icdcode_id === item.id) {\n          // eslint-disable-next-line no-param-reassign\n          item.favorite = checked;\n        }\n        return state;\n      }),\n    );\n    if (checked === true) {\n      icdcodesService.addFavorite(icdcode_id, user.id, payload).then(\n        (response) => {\n          setTimeout(() => {\n            enqueueSnackbar(`${response.data.message}`, {\n              variant: \"success\",\n            });\n          }, 300);\n        },\n        (error) => {\n          setTimeout(() => {\n            setErrors(error.response.error);\n          }, 300);\n        },\n      );\n    } else {\n      icdcodesService.deleteFavorite(icdcode_id).then(\n        (response) => {\n          setTimeout(() => {\n            enqueueSnackbar(`${response.data.message}`, {\n              variant: \"success\",\n            });\n          }, 300);\n        },\n        (error) => {\n          setTimeout(() => {\n            setErrors(error.response.error);\n          }, 300);\n        },\n      );\n    }\n  };\n\n  return (\n    <div>\n      {errors\n        && errors.map((error, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Alert severity=\"error\" key={index}>\n            {error.msg}\n          </Alert>\n        ))}\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table\n          size=\"small\"\n          className={classes.table}\n          aria-label=\"a dense table\"\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell padding=\"checkbox\">Code</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Description</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Favorites</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Updated</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Updated By</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((code) => (\n              <StyledTableRow key={code.id}>\n                <TableCell padding=\"checkbox\" component=\"th\" scope=\"row\">\n                  {code.id}\n                </TableCell>\n                <TableCell padding=\"checkbox\">{code.name}</TableCell>\n                <TableCell padding=\"checkbox\">\n                  <FormControlLabel\n                    control={(\n                      <Switch\n                        size=\"small\"\n                        checked={Boolean(code.favorite)}\n                        name=\"switchBox\"\n                        color=\"primary\"\n                        onChange={(e) => {\n                          changeHandler(e, code.id);\n                          setTimeout(() => {\n                            fetchSearchIcdCodes();\n                          }, 200);\n                        }}\n                      />\n                    )}\n                  />\n                </TableCell>\n                <TableCell padding=\"checkbox\">\n                  {code.updated ? moment(code.updated).format(\"lll\") : \"\"}\n                </TableCell>\n                <TableCell padding=\"checkbox\">{code.updated_name}</TableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nICDcodestable.propTypes = {\n  result: PropTypes.arrayOf(\n    PropTypes.arrayOf({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      favorite: PropTypes.string,\n      updated: PropTypes.string,\n      updated_name: PropTypes.string,\n    }),\n  ).isRequired,\n  fetchSearchIcdCodes: PropTypes.func.isRequired,\n};\n\nexport default ICDcodestable;\n","import React, { useState } from \"react\";\n\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport icdcodesService from \"../../../../services/icdcodes.service\";\nimport ICDcodesform from \"./components/ICDcodesform\";\nimport ICDcodestable from \"./components/ICDcodestable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  card: {\n    minHeight: 300,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    paddingBottom: theme.spacing(0.5),\n  },\n}));\n\nconst ICDcodes = () => {\n  const classes = useStyles();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [favorite, setFavorite] = useState(false);\n  const [searchResult, setSearchResult] = useState([]);\n  const payload = {\n    searchTerm,\n    checkBox: favorite,\n  };\n  const fetchSearchIcdCodes = () => {\n    icdcodesService.search(payload).then((res) => {\n      setSearchResult(res.data.data);\n    });\n  };\n\n  const textChangeHandler = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const checkBoxChangeHandler = (e) => {\n    setFavorite(e.target.checked);\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <div className={classes.root}>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            ICD Codes\n          </Typography>\n          <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n            This page is used to manage ICD codes.\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item md={12} xs={12}>\n              <ICDcodesform\n                fetchSearchIcdCodes={fetchSearchIcdCodes}\n                textChangeHandler={textChangeHandler}\n                checkBoxChangeHandler={checkBoxChangeHandler}\n              />\n              {searchResult.length > 0 && (\n                <ICDcodestable\n                  result={searchResult}\n                  fetchSearchIcdCodes={fetchSearchIcdCodes}\n                />\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </CssBaseline>\n    </>\n  );\n};\n\nexport default ICDcodes;\n"],"sourceRoot":""}