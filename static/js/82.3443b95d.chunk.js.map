{"version":3,"sources":["screens/Client/Manage/Fax/Fax.js","../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","padding","title","paddingBottom","spacing","status","display","alignItems","subject","width","fields","flexDirection","texArea","next","margin","maxWidth","historyTop","marginTop","history","border","height","fileUpload","fileItems","marginRight","Fax","classes","React","useState","faxNumber","setFaxNumber","cover","setCover","file","setFile","className","Typography","component","variant","color","TextField","value","id","label","name","autoComplete","autoFocus","onChange","event","target","size","fullWidth","multiline","InputProps","normalOutline","inputComponent","TextareaAutosize","rows","Button","files","type","style","disabled","onClick","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","props","ref","_props$autoFocus","children","_props$color","defaultValue","_props$disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","helperText","hiddenLabel","InputLabelProps","inputProps","inputRef","_props$multiline","onBlur","onFocus","placeholder","_props$required","required","rowsMax","_props$select","select","SelectProps","_props$variant","other","_objectWithoutProperties","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","_props$component","Component","focused","muiFormControl","useFormControl","fcs","formControlState","states","contained","marginDense","dangerouslySetInnerHTML","__html","palette","text","secondary","typography","caption","textAlign","main","marginLeft"],"mappings":"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","file":"static/js/82.3443b95d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  title: {\n    paddingBottom: theme.spacing(0.5),\n  },\n  status: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  subject: {\n    width: \"50%\",\n  },\n  fields: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  texArea: {\n    width: \"75%\",\n  },\n  next: {\n    margin: theme.spacing(3, 0, 2),\n    maxWidth: \"100px\",\n    width: \"100px\",\n  },\n  historyTop: {\n    marginTop: \"15px\",\n  },\n  history: {\n    marginTop: \"5px\",\n    display: \"flex\",\n    border: \"black solid 1px\",\n    padding: \"5px\",\n    height: \"300px\",\n    flexDirection: \"row\",\n    \"& div\": {\n      width: \"16%\",\n      margin: \"5px\",\n    },\n  },\n  fileUpload: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fileItems: {\n    marginRight: \"5px\",\n  },\n}));\n\nexport default function Fax() {\n  const classes = useStyles();\n  const [faxNumber, setFaxNumber] = React.useState(\"\");\n  const [cover, setCover] = React.useState(\"\");\n  const [file, setFile] = React.useState(null);\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        color=\"textPrimary\"\n        className={classes.title}\n      >\n        Send Fax\n      </Typography>\n      <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n        This page is used to send fax\n      </Typography>\n\n      <div className={classes.fields}>\n        <TextField\n          className={classes.subject}\n          value={faxNumber}\n          variant=\"outlined\"\n          margin=\"normal\"\n          id=\"faxNumber\"\n          label=\"Fax Number\"\n          name=\"faxNumber\"\n          autoComplete=\"faxNumber\"\n          autoFocus\n          onChange={(event) => setFaxNumber(event.target.value)}\n          size=\"small\"\n        />\n        <TextField\n          className={classes.texArea}\n          fullWidth\n          variant=\"outlined\"\n          label=\"Cover Sheet\"\n          multiline\n          name=\"note\"\n          InputProps={{\n            classes: classes.normalOutline,\n            inputComponent: TextareaAutosize,\n            rows: 8,\n          }}\n          value={cover}\n          onChange={(event) => setCover(event)}\n          size=\"small\"\n        />\n        <div className={classes.fileUpload}>\n          <Button\n            component=\"label\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={`${classes.next} ${classes.fileItems}`}\n            onChange={(event) => setFile(event.target.files[0].name)}\n            size=\"small\"\n          >\n            Add File\n            <input type=\"file\" style={{ display: \"none\" }} />\n          </Button>\n          <Typography\n            className={classes.fileItems}\n            component=\"p\"\n            variant=\"body2\"\n            color=\"textPrimary\"\n          >\n            {file}\n          </Typography>\n          {file && (\n            <Button\n              disabled={!file}\n              color=\"secondary\"\n              className={classes.next}\n              onClick={() => setFile(null)}\n              size=\"small\"\n            >\n              Remove\n            </Button>\n          )}\n        </div>\n        <Button\n          disabled={!faxNumber || !cover}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.next}\n          size=\"small\"\n        >\n          Send\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);"],"sourceRoot":""}