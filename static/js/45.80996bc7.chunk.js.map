{"version":3,"sources":["services/patient_portal/purchase-lab.service.js","screens/patient-portal/PurchaseLabs/components/PaymentMethodsForm.js","screens/patient-portal/PurchaseLabs/PurchaseLabs.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","components/Alert/index.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","services/patient_portal/patient-portal.service.js","components/common/CountrySelect.js","components/common/RegionSelect.js","components/common/MaskInput.js","services/patient_portal/payment-method.service.js"],"names":["axios","get","API_BASE","headers","authHeader","then","res","data","post","useStyles","makeStyles","theme","title","backgroundColor","palette","primary","light","color","closeButton","position","right","spacing","top","formContainer","margin","gutterBottom","marginBottom","circularProgress","textAlign","left","modalConentBelow","opacity","contentWithLoading","customLabel","fontSize","buttonsContainer","cancelButton","borderColor","colors","orange","PaymentMethodsForm","props","classes","enqueueSnackbar","useSnackbar","user","useAuth","isOpen","onClose","reloadData","useState","cardType","cardNumber","cvv","expiryDate","address","address2","city","postal","formFields","setFormFields","country","setCountry","region","setRegion","isLoading","setIsLoading","useEffect","selectedCountry","CountryRegionData","filter","countryArray","length","selectedRegion","split","map","regionPair","x","state","handleInputChange","e","target","value","key","updateFormState","name","handleCountryRegion","identifier","fetchProfile","useCallback","PatientPortalService","getProfile","profile","formFieldValues","Dialog","open","fullWidth","maxWidth","aria-labelledby","aria-describedby","DialogTitle","id","className","IconButton","aria-label","onClick","DialogContent","content","CircularProgress","clsx","onSubmit","preventDefault","reqBody","exp","replace","type","cvc","account_number","replaceAll","stripe_customer_id","corp_stripe_customer_id","PaymentMethodService","createPaymentMethod","response","message","variant","Grid","MaskInput","required","label","mask","onChange","Typography","TextField","CountrySelect","error","helperText","handleChange","RegionSelect","container","justify","Button","size","root","flexGrow","padding","customSelect","width","marginTop","paddingBottom","table","fontWeight","selectCheckbox","Total","marginRight","purchaseButton","display","boldPrice","link","StyledTableCell","withStyles","head","whiteSpace","borderBottom","body","TableCell","StyledTableRow","cursor","lineHeight","TableRow","PurchaseLabs","lastVisitedPatient","selected","setSelected","selectedLabs","setSelectedLabs","paymentMethods","setPaymentMethods","selectedPaymentMethod","setSelectedPaymentMethod","total","setTotal","labs","setLabs","isNewPaymentMethodOpen","setIsNewPaymentMethodOpen","isConfirmDialog","setIsConfirmDialog","showPurchaseConfirmation","setShowPurchaseConfirmation","fetchPaymentMethods","getPaymentMethods","PurchaseLabsService","getAll","handleClick","event","stopPropagation","selectedIndex","indexOf","newSelected","concat","slice","selectedLabIds","sLabs","lab","includes","patient_cpt_id","sumOfSelectedLabs","reduce","acc","price","calculateTotal","Alert","toFixed","applyButtonText","cancelButtonText","applyForm","paymentMethodForStripe","p","Number","payload","payment_method_id","corp_stripe_payment_method_token","customer_id","amount","patient_cpt_ids","create","handleOnSubmit","cancelForm","component","Box","mt","to","item","md","sm","xs","TableContainer","tableContainer","Table","TableHead","TableBody","isChecked","hover","role","scope","Checkbox","checked","cpt_name","FormControl","InputLabel","htmlFor","Select","native","newPaymentMethod","inputProps","pm","paymentMethodType","disabled","DialogActions","React","ref","_props$disableSpacing","disableSpacing","other","_objectWithoutProperties","_extends","alignItems","justifyContent","flex","marginLeft","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","SwitchBase","capitalize","undefined","text","secondary","colorPrimary","main","fade","action","hoverOpacity","colorSecondary","createStyles","titleContainer","minHeight","common","white","actionsContainer","w100","minWidth","DialogForm","disableBackdropClick","disableTypography","disableElevation","defaultProps","autoFocus","checkedProp","defaultChecked","disabledProp","inputRef","onBlur","onFocus","readOnly","tabIndex","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","input","newChecked","height","zIndex","patientId","put","patient","url","client_id","params","appointmentId","pharmacyId","testId","a","delete","CountryRegionMUISelectors","outlined","select","option","getRegions","RegionMUISelectors","paymentMethodId"],"mappings":"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","file":"static/js/45.80996bc7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass PurchaseLabsService {\n  // patient profile\n  getAll() {\n    return axios\n      .get(`${API_BASE}/patient-portal/purchase-labs`, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n\n  create(data) {\n    return axios\n      .post(`${API_BASE}/patient-portal/purchase-labs`, data, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n}\n\nexport default new PurchaseLabsService();\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport {\n  TextField, Button, Grid, Typography,\n  colors,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\";\nimport clsx from \"clsx\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n\nimport CountrySelect from \"../../../../components/common/CountrySelect\";\nimport MaskInput from \"../../../../components/common/MaskInput\";\nimport RegionSelect from \"../../../../components/common/RegionSelect\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport PatientPortalService from \"../../../../services/patient_portal/patient-portal.service\";\nimport PaymentMethodService from \"../../../../services/patient_portal/payment-method.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    backgroundColor: theme.palette.primary.light,\n    \"& h2\": {\n      color: \"#fff\",\n    },\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1 / 2),\n    top: theme.spacing(1 / 2),\n    color: \"#ffffff\",\n  },\n  formContainer: {\n    margin: theme.spacing(3, 0),\n  },\n  gutterBottom: {\n    marginBottom: theme.spacing(1),\n  },\n  circularProgress: {\n    position: \"absolute\",\n    textAlign: \"center\",\n    left: \"50%\",\n  },\n  modalConentBelow: { opacity: \"1\" },\n  contentWithLoading: {\n    opacity: \"0.5\",\n  },\n  customLabel: {\n    fontSize: 16,\n    color: \"#37474f\",\n    marginBottom: theme.spacing(2),\n  },\n  buttonsContainer: {\n    margin: theme.spacing(3, 0),\n  },\n  cancelButton: {\n    borderColor: colors.orange[600],\n    color: colors.orange[600],\n  },\n}));\n\nconst PaymentMethodsForm = (props) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const {\n    isOpen, onClose, reloadData,\n  } = props;\n  const [formFields, setFormFields] = useState({\n    cardType: \"\",\n    cardNumber: \"\",\n    cvv: \"\",\n    expiryDate: \"\",\n    address: \"\",\n    address2: \"\",\n    city: \"\",\n    postal: \"\",\n  });\n  const [country, setCountry] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const selectedCountry = CountryRegionData.filter(\n      (countryArray) => countryArray[1] === formFields.country,\n    );\n    if (selectedCountry.length) { // country and state is present in the db\n      setCountry(selectedCountry[0]);\n      const regions = selectedCountry[0][2].split(\"|\").map((regionPair) => {\n        const [regionName = null, regionInShort] = regionPair.split(\"~\");\n        return [regionName, regionInShort];\n      });\n      const selectedRegion = regions.filter((x) => x[1] === formFields.state);\n      setRegion(selectedRegion[0][1]);\n    }\n  }, [formFields]);\n\n  const updateFormState = (key, value) => {\n    setFormFields({\n      ...formFields,\n      [key]: value,\n    });\n  };\n\n\n  const handleInputChange = (e) => {\n    const { value, name } = e.target;\n    updateFormState(name, value);\n  };\n\n  const handleCountryRegion = (identifier, value) => {\n    if (identifier === \"country\") {\n      setCountry(value);\n    } else if (identifier === \"region\") {\n      setRegion(value);\n    }\n  };\n\n  const fetchProfile = useCallback(() => {\n    PatientPortalService.getProfile().then((res) => {\n      const profile = res.data?.[0];\n      setFormFields((formFieldValues) => ({\n        ...formFieldValues,\n        ...profile,\n      }));\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchProfile();\n  }, [fetchProfile]);\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const reqBody = {\n      data: {\n        exp: formFields.expiryDate.replace(\"/\", \"\"),\n        type: formFields.cardType[0] || \"V\",\n        cvc: formFields.cvv,\n        account_number: formFields.cardNumber.replaceAll(\"/\", \"\"),\n        stripe_customer_id: user.stripe_customer_id,\n        corp_stripe_customer_id: user.corp_stripe_customer_id,\n        address: formFields.address,\n        address2: formFields.address2,\n        city: formFields.city,\n        postal: formFields.postal,\n        country: country[1],\n        state: region,\n      },\n    };\n\n    PaymentMethodService.createPaymentMethod(reqBody).then((response) => {\n      enqueueSnackbar(`${response.message}`, { variant: \"success\" });\n      reloadData();\n      setIsLoading(false);\n      onClose();\n    });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      fullWidth\n      maxWidth=\"xs\"\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\" className={classes.title}>\n        Add Payment Method\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent className={classes.content}>\n        {isLoading && (\n          <div className={classes.circularProgress}>\n            <CircularProgress />\n          </div>\n        )}\n        <div\n          className={clsx({\n            [classes.modalConentBelow]: true, // always apply\n            [classes.contentWithLoading]: isLoading, // only when isLoading === true\n          })}\n        >\n          <form onSubmit={onFormSubmit}>\n            <Grid className={classes.formContainer}>\n              <Grid>\n                <MaskInput\n                  required\n                  fullWidth\n                  className={classes.gutterBottom}\n                  type=\"text\"\n                  name=\"cardNumber\"\n                  label=\"Card Number\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  value={formFields.cardNumber}\n                  mask=\"9999/9999/9999/9999\"\n                  onChange={(e) => handleInputChange(e)}\n                />\n                {!!formFields.cardType && formFields.cardType.length ? (\n                  <Typography gutterBottom>{formFields.cardType}</Typography>\n                )\n                  : null}\n              </Grid>\n              <Grid>\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  name=\"cvv\"\n                  id=\"cvv\"\n                  type=\"text\"\n                  label=\"CVV\"\n                  className={classes.gutterBottom}\n                  value={formFields.cvv}\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n\n              <Grid>\n                <MaskInput\n                  required\n                  className={classes.gutterBottom}\n                  type=\"text\"\n                  name=\"expiryDate\"\n                  label=\"Expiration\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  value={formFields.expiryDate}\n                  mask=\"99/99\"\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n              <Grid>\n                <TextField\n                  className={classes.gutterBottom}\n                  label=\"Address\"\n                  name=\"address\"\n                  value={formFields.address}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid>\n                <TextField\n                  className={classes.gutterBottom}\n                  label=\"Address Line 2\"\n                  name=\"address2\"\n                  value={formFields.address2}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid>\n                <TextField\n                  className={classes.gutterBottom}\n                  label=\"City\"\n                  name=\"city\"\n                  value={formFields.city}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid>\n                <TextField\n                  className={classes.gutterBottom}\n                  label=\"Zip/Postal\"\n                  name=\"postal\"\n                  value={formFields.postal}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid>\n                <CountrySelect\n                  id=\"country-select\"\n                  error={null}\n                  name=\"country-select\"\n                  helperText=\"\"\n                  label=\"Country\"\n                  handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                  country={country}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid>\n                <RegionSelect\n                  id=\"state-select\"\n                  error={null}\n                  name=\"state-select\"\n                  helperText=\"\"\n                  label=\"State\"\n                  handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                  country={country}\n                  region={region}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container className={classes.buttonsContainer} justify=\"space-between\">\n              <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                Add Method\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={() => onClose()}\n                className={classes.cancelButton}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </form>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nPaymentMethodsForm.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default PaymentMethodsForm;\n","import React, { useCallback, useState, useEffect } from \"react\";\n\nimport {\n  makeStyles, Typography, Grid, Box, withStyles,\n} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useSnackbar } from \"notistack\";\nimport { Link } from \"react-router-dom\";\n\nimport Alert from \"../../../components/Alert\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport PaymentMethodService from \"../../../services/patient_portal/payment-method.service\";\nimport PurchaseLabsService from \"../../../services/patient_portal/purchase-lab.service\";\nimport { paymentMethodType } from \"../../../utils/helpers\";\nimport PaymentMethodsForm from \"./components/PaymentMethodsForm\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"40px 0px\",\n  },\n  customSelect: {\n    width: \"220px\",\n    marginTop: theme.spacing(2.5),\n  },\n  title: {\n    paddingBottom: theme.spacing(0.5),\n  },\n  table: {\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n  selectCheckbox: {\n    padding: 0,\n  },\n  Total: {\n    marginTop: theme.spacing(2),\n    \"& span\": {\n      fontWeight: 600,\n      marginRight: theme.spacing(1 / 2),\n    },\n  },\n  purchaseButton: {\n    display: \"block\",\n    width: \"220px\",\n    marginTop: theme.spacing(2.5),\n  },\n  boldPrice: {\n    fontWeight: \"bold\",\n    padding: theme.spacing(0, 0.5),\n  },\n  link: {\n    padding: theme.spacing(0, 0.5),\n  },\n}));\n\nconst StyledTableCell = withStyles(() => ({\n  head: {\n    whiteSpace: \"nowrap\",\n    fontSize: 14,\n    fontWeight: 700,\n    padding: \"6px 24px 6px 2px\",\n    borderBottom: \"unset\",\n  },\n  body: {\n    fontSize: 14,\n    borderBottom: \"unset\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(() => ({\n  root: {\n    fontSize: 14,\n    cursor: \"pointer\",\n    \"& th\": {\n      fontSize: 14,\n      whiteSpace: \"nowrap\",\n      padding: \"0px 16px 0px 2px\",\n      lineHeight: \"16px\",\n    },\n    \"& td\": {\n      fontSize: 14,\n      whiteSpace: \"nowrap\",\n      padding: \"0px 16px 0px 2px\",\n      lineHeight: \"16px\",\n    },\n  },\n}))(TableRow);\n\n\nconst PurchaseLabs = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { lastVisitedPatient, user } = useAuth();\n  const [selected, setSelected] = useState([]);\n  const [selectedLabs, setSelectedLabs] = useState([]);\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [labs, setLabs] = useState([]);\n  const [isNewPaymentMethodOpen, setIsNewPaymentMethodOpen] = useState(false);\n  const [isConfirmDialog, setIsConfirmDialog] = useState(false);\n  const [showPurchaseConfirmation, setShowPurchaseConfirmation] = useState(false);\n\n  const fetchPaymentMethods = useCallback(() => {\n    PaymentMethodService.getPaymentMethods(lastVisitedPatient).then((res) => {\n      setPaymentMethods(\n        [...res.data, {\n          id: 999,\n          type: \"new\",\n          account_number: \"000\",\n        }],\n      );\n    });\n  }, [lastVisitedPatient]);\n\n  useEffect(() => {\n    PurchaseLabsService.getAll().then((res) => {\n      setLabs(res.data);\n    });\n    fetchPaymentMethods();\n  }, [fetchPaymentMethods]);\n\n  const handlePaymentMethodChange = (newPaymentMethod) => {\n    if (Number(newPaymentMethod) === 999) {\n      setIsNewPaymentMethodOpen(true);\n    } else {\n      setSelectedPaymentMethod(newPaymentMethod);\n    }\n  };\n\n  const calculateTotal = (selectedLabIds) => {\n    const sLabs = labs.filter((lab) => selectedLabIds.includes(lab.patient_cpt_id));\n    setSelectedLabs(sLabs);\n    const sumOfSelectedLabs = sLabs.reduce((acc, lab) => (acc + lab.price), 0);\n    setTotal(sumOfSelectedLabs);\n  };\n\n  const handleClick = (event, id) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    setSelected(newSelected);\n    calculateTotal(newSelected);\n  };\n\n  const handleOnSubmit = () => {\n    const paymentMethodForStripe = paymentMethods.filter((p) => p.id === Number(selectedPaymentMethod));\n    const payload = {\n      data: {\n        payment_method_id: selectedPaymentMethod,\n        corp_stripe_payment_method_token: paymentMethodForStripe[0].corp_stripe_payment_method_token,\n        customer_id: user.corp_stripe_customer_id,\n        amount: total,\n        patient_cpt_ids: selected,\n        selectedLabs,\n      },\n    };\n\n    PurchaseLabsService.create(payload).then(() => {\n      enqueueSnackbar(`Lab purchased successfully!`, {\n        variant: \"success\",\n      });\n      setIsConfirmDialog(false);\n      setShowPurchaseConfirmation(true);\n      setSelected([]);\n      setSelectedPaymentMethod(null);\n    });\n  };\n\n  const isSelected = (patient_cpt_id) => selected.indexOf(patient_cpt_id) !== -1;\n\n  return (\n    <>\n      <Alert\n        open={isConfirmDialog}\n        title=\"Purchase Confirmation\"\n        message={`Confirm purchase of $${total?.toFixed(2)}?`}\n        applyButtonText=\"Confirm\"\n        cancelButtonText=\"Cancel\"\n        applyForm={() => handleOnSubmit()}\n        cancelForm={() => setIsConfirmDialog(false)}\n      />\n      <div className={classes.root}>\n        {\n          showPurchaseConfirmation\n            ? (\n              <>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h2\"\n                  color=\"textPrimary\"\n                  className={classes.title}\n                >\n                  Purchase Lab Confirmation\n                </Typography>\n                <Box mt={2}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    This is a confirmation that you have purchased lab(s) for\n                    <span className={classes.boldPrice}>\n                      $\n                      {total?.toFixed(2)}\n                    </span>\n                  </Typography>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Next step is to\n                    <Link\n                      className={classes.link}\n                      to=\"/patient/labs-requisition\"\n                    >\n                      click here\n                    </Link>\n                    to print your lab requisition.\n                  </Typography>\n                </Box>\n              </>\n            )\n            : (\n              <>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h2\"\n                  color=\"textPrimary\"\n                  className={classes.title}\n                >\n                  Purchase Lab Tests\n                </Typography>\n                <Grid item md={6} sm={12} xs={12}>\n                  <TableContainer className={classes.tableContainer}>\n                    <Table size=\"small\" className={classes.table} aria-label=\"a dense table\">\n                      <TableHead>\n                        <TableRow>\n                          <StyledTableCell>Select</StyledTableCell>\n                          <StyledTableCell>Lab Name</StyledTableCell>\n                          <StyledTableCell>Price</StyledTableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {labs.map((lab) => {\n                          const isChecked = isSelected(lab.patient_cpt_id);\n                          return (\n                            <StyledTableRow\n                              hover\n                              key={lab.patient_cpt_id}\n                              onClick={(event) => handleClick(event, lab.patient_cpt_id)}\n                              role=\"checkbox\"\n                            >\n                              <StyledTableCell scope=\"item\">\n                                <Checkbox\n                                  onClick={(event) => handleClick(event, lab.patient_cpt_id)}\n                                  className={classes.selectCheckbox}\n                                  checked={isChecked}\n                                />\n                              </StyledTableCell>\n                              <StyledTableCell scope=\"item\">{lab.cpt_name}</StyledTableCell>\n                              <StyledTableCell scope=\"item\">\n                                $\n                                {lab?.price?.toFixed(2)}\n                              </StyledTableCell>\n                            </StyledTableRow>\n                          );\n                        })}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  <div className={classes.Total}>\n                    <span>Total:</span>\n                    $\n                    {total?.toFixed(2)}\n                  </div>\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.customSelect}\n                    size=\"small\"\n                  >\n                    <InputLabel htmlFor=\"age-native-simple\">Select Payment Method</InputLabel>\n                    <Select\n                      native\n                      value={selectedPaymentMethod}\n                      onChange={(event) => handlePaymentMethodChange(event.target.value)}\n                      inputProps={{\n                        name: \"type\",\n                        id: \"age-native-simple\",\n                      }}\n                      label=\"User\"\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      {paymentMethods.map((pm) => (\n                        <option key={pm.id} value={pm.id}>\n                          {paymentMethodType(pm.type)}\n                          {pm.id !== 999 ? (\n                            ` (${pm.account_number})`\n                          ) : \"\"}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <Button\n                    disabled={(!total || !selectedPaymentMethod)}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"medium\"\n                    onClick={() => setIsConfirmDialog(true)}\n                    className={classes.purchaseButton}\n                  >\n                    Purchase\n                  </Button>\n                </Grid>\n              </>\n            )\n        }\n        <PaymentMethodsForm\n          isOpen={isNewPaymentMethodOpen}\n          onClose={() => setIsNewPaymentMethodOpen(false)}\n          reloadData={() => fetchPaymentMethods()}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default PurchaseLabs;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from \"react\";\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n  titleContainer: {\n    minHeight: 50,\n    backgroundColor: theme.palette.primary.main,\n    \"& h5\": {\n      color: theme.palette.common.white,\n    },\n  },\n  content: {\n    padding: \"1rem 1.5rem\",\n  },\n  actionsContainer: {\n    padding: \"1rem 1.5rem\",\n    justifyContent: \"space-between\",\n  },\n  w100: {\n    minWidth: 100,\n  },\n}));\n\nconst DialogForm = ({\n  title,\n  open,\n  message,\n  applyForm,\n  cancelForm,\n  applyButtonText,\n  cancelButtonText,\n  size,\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={open}\n      onClose={cancelForm}\n      fullWidth\n      maxWidth={size}\n      disableBackdropClick\n    >\n      <DialogTitle disableTypography className={classes.titleContainer} id=\"form-dialog-title\">\n        <Typography variant=\"h5\">{title}</Typography>\n      </DialogTitle>\n      <DialogContent className={classes.content}>\n        <Typography variant=\"h5\">{message}</Typography>\n      </DialogContent>\n      <DialogActions classes={{ root: classes.actionsContainer }}>\n        <Button\n          className={classes.w100}\n          onClick={cancelForm}\n          type=\"submit\"\n          variant=\"outlined\"\n          disableElevation\n        >\n          {cancelButtonText}\n        </Button>\n        <Button\n          className={classes.w100}\n          onClick={applyForm}\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          disableElevation\n        >\n          {applyButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDialogForm.defaultProps = {\n  title: \"\",\n  message: \"\",\n  applyForm: () => { },\n  cancelForm: () => { },\n  applyButtonText: \"Continue\",\n  cancelButtonText: \"Cancel\",\n  size: \"xs\",\n};\n\nDialogForm.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.string,\n  applyForm: PropTypes.func,\n  cancelForm: PropTypes.func,\n  applyButtonText: PropTypes.string,\n  cancelButtonText: PropTypes.string,\n  size: PropTypes.string,\n};\n\nexport default DialogForm;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass PatientPortalService {\n  // patient profile\n  getProfile() {\n    return axios.get(`${API_BASE}/client-portal/patient`, { headers: authHeader() }).then((res) => res.data);\n  }\n\n  updateProfile(payload, patientId) {\n    return axios.put(`${API_BASE}/client-portal/patient/${patientId}`, payload, {\n      headers: authHeader(),\n    });\n  }\n\n  // appointments\n  getPractitioners(patient) {\n    let url = `${API_BASE}/client-portal/practitioners`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioners/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getPractitionerDates(patient) {\n    let url = `${API_BASE}/client-portal/practitioner-dates`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioner-dates/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBookedAppointments(patient, params) {\n    let url = `${API_BASE}/client-portal/booked-appointments`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/booked-appointments?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n        params,\n      })\n      .then((res) => res.data);\n  }\n\n  getAppointmentTypesByPractitionerId(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment-types`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  bookAppointment(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updateAppointment(payload, appointmentId) {\n    return axios\n      .put(`${API_BASE}/client-portal/appointment/${appointmentId}`, payload, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // encounters\n  getEncounters(patient) {\n    let url = `${API_BASE}/client-portal/encounters`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/encounters/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // lab/documents\n  getLabDocuments(patient) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createLabDocuments(patient, reqBody) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .post(url, reqBody, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Billings\n  getBillings(patient) {\n    let url = `${API_BASE}/client-portal/billings`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/billings/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createBilling(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/billings`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBalance(patient) {\n    let url = `${API_BASE}/client-portal/balance`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/balance/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Payment Methods\n  getPaymentMethods(patient) {\n    let url = `${API_BASE}/patient-portal/payment-methods`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/patient-portal/payment-methods/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Pharmacies\n  getPharmacies() {\n    return axios\n      .get(`${API_BASE}/client-portal/pharmacy`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  searchPharmacies(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/pharmacy/search`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updatePharmacy(pharmacyId, payload) {\n    return axios.put(`${API_BASE}/client-portal/pharmacy/${pharmacyId}`, payload, {\n      headers: authHeader(),\n    })\n      .then((res) => res.data);\n  }\n\n  // Requisitions\n  getRequisitions(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Lab billing\n  getLabBilling(patient) {\n    let url = `${API_BASE}/client-portal/lab_billing`;\n    if (patient) {\n        // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_billing/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n\n  // test list\n  getTestList(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions/test-list`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  async getTestProfileInfo(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/test-profile-info?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n    return res.data;\n  }\n\n  async getProfileTests(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/profile-tests?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n\n    return res.data;\n  }\n\n  // Handouts\n  getHandouts() {\n    return axios\n      .get(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createHandouts() {\n    return axios\n      .post(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  deleteHandout(id) {\n    return axios\n      .delete(`${API_BASE}/client-portal/handouts/${id}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Prescriptions\n  getPrescriptions() {\n    return axios\n      .get(`${API_BASE}/client-portal/prescription`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n}\n\nexport default new PatientPortalService();\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n\nfunction CountryRegionMUISelectors(props) {\n  const {\n    country, size, handleChange, outlined, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"country\"\n      label=\"Country\"\n      value={country}\n      select\n      onChange={(e) => handleChange(\"country\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {CountryRegionData.map((option) => (\n        <MenuItem key={option[0]} value={option}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nCountryRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  country: null,\n  outlined: true,\n  margin: \"none\",\n};\n\nCountryRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  handleChange: PropTypes.func.isRequired,\n  outlined: PropTypes.bool,\n  margin: PropTypes.string,\n};\n\nexport default CountryRegionMUISelectors;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst getRegions = (country) => {\n  if (!country) {\n    return [];\n  }\n  return country[2].split(\"|\").map((regionPair) => {\n    const [regionName = null, regionInShort] = regionPair.split(\"~\");\n    return [regionName, regionInShort];\n  });\n};\n\nfunction RegionMUISelectors(props) {\n  const {\n    size, label, region, handleChange, outlined, country, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"state\"\n      label={label}\n      value={region}\n      select\n      onChange={(e) => handleChange(\"region\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {getRegions(country).map((option) => (\n        <MenuItem key={option[0]} value={option[1]}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  outlined: true,\n  margin: \"none\",\n};\n\nRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  outlined: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  region: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]).isRequired,\n  margin: PropTypes.string,\n};\n\nexport default RegionMUISelectors;\n","import React from \"react\";\n\nimport { TextField } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport InputMask from \"react-input-mask\";\n\nconst MaskInput = (props) => {\n  const {\n    className,\n    disabled,\n    required,\n    fullWidth,\n    type,\n    name,\n    label,\n    autoFocus,\n    margin,\n    variant,\n    value,\n    mask,\n    onChange,\n  } = props;\n\n  return (\n    <InputMask\n      disabled={disabled}\n      mask={mask}\n      value={value}\n      onChange={onChange}\n    >\n      {(inputProps) => (\n        <TextField\n          {...inputProps}\n          disabled={disabled}\n          autoFocus={autoFocus}\n          required={required}\n          fullWidth={fullWidth}\n          name={name}\n          label={label}\n          margin={margin}\n          type={type}\n          className={className}\n          variant={variant}\n        />\n      )}\n    </InputMask>\n  );\n};\n\nMaskInput.defaultProps = {\n  className: \"\",\n  type: \"text\",\n  name: \"\",\n  label: \"Label\",\n  margin: \"normal\",\n  variant: \"outlined\",\n  value: \"\",\n  mask: \"\",\n  autoFocus: false,\n  required: false,\n  disabled: false,\n  fullWidth: false,\n};\n\nMaskInput.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  margin: PropTypes.string,\n  variant: PropTypes.string,\n  value: PropTypes.string,\n  mask: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default MaskInput;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass PaymentMethodService {\n  // patient profile\n  getPaymentMethods() {\n    return axios\n      .get(`${API_BASE}/patient-portal/payment-methods`, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n\n  createPaymentMethod(data) {\n    return axios\n      .post(`${API_BASE}/patient-portal/payment-methods`, data, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n\n  updatePaymentMethod(paymentMethodId, data) {\n    return axios\n      .put(\n        `${API_BASE}/patient-portal/payment-methods/${paymentMethodId}`,\n        data,\n        { headers: authHeader() },\n      )\n      .then((res) => res.data);\n  }\n\n  deletePaymentMethod(id) {\n    return axios\n      .delete(`${API_BASE}/patient-portal/payment-methods/${id}`, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n}\n\nexport default new PaymentMethodService();\n"],"sourceRoot":""}