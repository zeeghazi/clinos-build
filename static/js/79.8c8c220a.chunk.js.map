{"version":3,"sources":["screens/patient-portal/PdfTemplate/components/Footer.js","screens/patient-portal/PdfTemplate/components/Header.js","screens/patient-portal/PdfTemplate/components/InformationTable.js","screens/patient-portal/PdfTemplate/components/PatientInformation.js","screens/patient-portal/PdfTemplate/components/ProfileTests.js","screens/patient-portal/PdfTemplate/PdfTemplate.js","screens/patient-portal/Requisition/Requisition.js","services/patient_portal/patient-portal.service.js","theme/colors.js"],"names":["useStyles","makeStyles","theme","questDiagnosticHeading","color","colors","headingBlue","pscHoldOrderText","palette","warning","main","footerHeading","fontSize","pTypo","Footer","classes","Box","className","footer","Typography","variant","component","Header","Grid","container","justify","item","src","alt","infoSpace","lineHeight","tableHeading","border","padding","tableBody","fontWeight800","fontWeight","fontWeight1000","fontSize14","dataInformationGrid","paddingTop","patNameGrid","marginLeft","billTypeTypo","clientTypo","margin","spacing","clientTypoHeading","genderTextSize","mt5","marginTop","ml5","mt10","ml15","ml10","ml1","ml2","ml3","ml4","InformationTable","props","testProfileInfo","direction","xs","clsx","patient_id","formatPdfDate","dob","firstname","lastname","alignItems","profileGenderTypo","gender","ulta_order","target","href","clientAndPatientInfo","patientInformationGridItem","alignSelf","mt2","PatientInformation","address","city","state","postal","formatPhoneNumber","phone_home","replaceAll","root","width","questId","minWidth","textAlign","mid","questName","ProfileTests","profileTests","map","test","quest_id","quest_name","coverRoot","minHeight","mt20","importantTypo","profileTestsComponent","PdfTemplate","forwardRef","ref","flexGrow","title","paddingBottom","btnContainer","btn","marginRight","testListContainer","cursor","tableContainer","tableTestsCell","table","tableRow","firstColumnforStyledTableCell","secondColumnforStyledTableCell","StyledTableCell","withStyles","head","backgroundColor","grey","paddingLeft","body","TableCell","Encounters","lastVisitedPatient","useAuth","componentRef","useRef","useState","testList","setTestList","setTestProfileInfo","setProfileTests","handlePrint","useReactToPrint","pageStyle","content","current","fetchTestList","useCallback","PatientPortalService","getTestList","then","res","data","useEffect","fetchReportInformation","id","a","getTestProfileInfo","testProfileInfoRes","getProfileTests","profileTestsRes","Boolean","length","TableContainer","Table","size","aria-label","TableHead","TableRow","TableBody","list","dateFormat","dt","onClick","tests","style","display","axios","get","API_BASE","headers","authHeader","payload","patientId","put","patient","url","client_id","params","post","appointmentId","reqBody","pharmacyId","testId","delete","Colors","white","black","blue","brandColor","red","newsLetterBg","textGrey","placeHolderText","inputBg","background","fillGray","iconBackGround","lighterText","graphInRange","graphOutRange"],"mappings":"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","file":"static/js/79.8c8c220a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Typography, Box, makeStyles } from \"@material-ui/core\";\n\nimport colors from \"../../../../theme/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  questDiagnosticHeading: {\n    color: colors.headingBlue,\n  },\n  pscHoldOrderText: {\n    color: theme.palette.warning.main,\n  },\n  footerHeading: {\n    fontSize: 12,\n  },\n  pTypo: {\n    fontSize: 9,\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.footer}>\n      <Typography variant=\"h6\" color=\"error\" className={classes.footerHeading}>\n        Bring this sheet to the Patient Service Center. See Attached Patient Instructions.\n      </Typography>\n      <Typography component=\"p\" className={classes.pTypo}>\n        By submitting this Requisition form to the patient service center and or having your specimen\n        collected, you agree to the Ulta Lab Tests Patient Agreement, which is located in your patient portal.\n        If you do not agree to the Patient Agreement, do not use this Requisition form or the Ulta Lab Tests\n        platform\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport { Typography, Grid, makeStyles } from \"@material-ui/core\";\n\nimport colors from \"../../../../theme/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  questDiagnosticHeading: {\n    color: colors.headingBlue,\n  },\n  pscHoldOrderText: {\n    color: theme.palette.warning.main,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <img src=\"https://content.ultalabtests.com/static/images/Logo.png\" alt=\"logo\" />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h5\" className={classes.questDiagnosticHeading}>\n          Quest Diagnostics Incorporated\n        </Typography>\n        <Typography variant=\"h1\" className={classes.pscHoldOrderText}>\n          PSC HOLD ORDER\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\n\nimport { Typography, Grid, makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport { formatPdfDate } from \"../../../../utils/helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  infoSpace: {\n    lineHeight: 1.3,\n  },\n  tableHeading: {\n    border: \"1px solid black\",\n    padding: \"20px 5px 20px 5px\",\n  },\n  tableBody: {\n    border: \"1px solid black\",\n    padding: \"20px 5px 20px 5px\",\n  },\n  fontWeight800: {\n    fontWeight: 800,\n  },\n  fontWeight1000: {\n    fontWeight: 1000,\n  },\n  fontSize14: {\n    fontSize: 14,\n  },\n  dataInformationGrid: {\n    paddingTop: 5,\n  },\n  patNameGrid: {\n    marginLeft: 4,\n  },\n  billTypeTypo: {\n    marginLeft: 10,\n  },\n  clientTypo: {\n    margin: theme.spacing(0.5, 0),\n  },\n  clientTypoHeading: {\n    fontSize: 18,\n  },\n  genderTextSize: {\n    fontSize: 12,\n  },\n  mt5: {\n    marginTop: 5,\n  },\n  ml5: {\n    marginLeft: 5,\n  },\n  mt10: {\n    marginTop: 10,\n  },\n  ml15: {\n    marginLeft: 15,\n  },\n  ml10: {\n    marginLeft: 10,\n  },\n  ml1: {\n    marginLeft: 1,\n  },\n  ml2: {\n    marginLeft: 2,\n  },\n  ml3: {\n    marginLeft: 3,\n  },\n  ml4: {\n    marginLeft: 4,\n  },\n}));\n\nconst InformationTable = (props) => {\n  const classes = useStyles();\n  const { testProfileInfo } = props;\n  return (\n    <>\n      <Grid container className={classes.mt5}>\n        <Grid\n          item\n          container\n          justify=\"flex-start\"\n          direction=\"column\"\n          xs={6}\n          className={classes.tableHeading}\n        >\n          <Typography variant=\"h5\">Ordering Physician</Typography>\n          <Typography className={clsx(classes.ml5, classes.mt10)}>\n            <span className={clsx(classes.fontWeight800, classes.fontSize14)}>NPI</span>\n            :\n            <span className={classes.ml15}>1346417086</span>\n            <span className={classes.ml10}> Bauer,</span>\n            <span> Michael</span>\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          justify=\"center\"\n          direction=\"column\"\n          xs={6}\n          className={classes.tableHeading}\n        >\n          <Typography variant=\"h5\">Data Information</Typography>\n          <Grid container className={clsx(classes.ml5, classes.dataInformationGrid)}>\n            <Grid item>\n              <Typography component=\"h1\" variant=\"h5\">\n                <p className={clsx(classes.fontWeight800, classes.fontSize14)}>\n                  Pat ID #:\n                  <span className={classes.ml3}>{testProfileInfo.patient_id}</span>\n                </p>\n              </Typography>\n              <Typography variant=\"h5\">\n                <p className={clsx(classes.fontWeight800, classes.fontSize14)}>\n                  DOB:\n                  <span className={classes.ml3}>{formatPdfDate(testProfileInfo.dob)}</span>\n                </p>\n              </Typography>\n            </Grid>\n            <Grid item className={classes.patNameGrid}>\n              <Typography variant=\"h5\">\n                <p className={clsx(classes.fontWeight800, classes.fontSize14)}>\n                  <span className={classes.ml2}>Pat Name: </span>\n                  {\" \"}\n                  <span className={classes.ml2}>{testProfileInfo.firstname}</span>\n                  ,\n                  <span className={classes.ml4}>{testProfileInfo.lastname}</span>\n                </p>\n              </Typography>\n              <Grid container alignItems=\"flex-start\" justify=\"space-between\">\n                <Typography variant=\"h5\" className={classes.profileGenderTypo}>\n                  <span className={clsx(classes.fontWeight800, classes.fontSize14)}>Sex:</span>\n                  <span className={clsx(classes.ml4, classes.genderTextSize)}>{testProfileInfo.gender}</span>\n                  <span className={classes.ml5} />\n                </Typography>\n                <Typography variant=\"h5\">\n                  <p className={clsx(classes.fontWeight800, classes.fontSize14)}>\n                    Order #:\n                    <span className={classes.ml4}>{testProfileInfo.ulta_order}</span>\n                  </p>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* table body */}\n\n      <Grid container>\n        <Grid item xs={6} className={classes.tableBody}>\n          <Grid container>\n            <Typography variant=\"h5\">Responsible Party</Typography>\n            <Typography variant=\"h5\" className={classes.billTypeTypo}>\n              <span className={clsx(classes.fontWeight800, classes.fontSize14)}>Bill Type: </span>\n              Client\n            </Typography>\n          </Grid>\n          <Typography className={clsx(classes.infoSpace, classes.clientTypo)} variant=\"h4\">\n            <span className={clsx(classes.fontWeight1000, classes.clientTypoHeading)}>Client #:</span>\n            <span className={classes.ml4}>97512437</span>\n\n          </Typography>\n          <Typography className={classes.infoSpace}>Ultra Lab Tests, LLC</Typography>\n          <Typography className={classes.infoSpace}>9237 E Via de Ventura, Suite 220 </Typography>\n          <Typography className={classes.infoSpace}>Scottsdale, AZ 85258 </Typography>\n          <a target=\"_blank\" href=\"http://ultralabtests.com\">\n            UltraLabTests.com\n          </a>\n        </Grid>\n\n        <Grid\n          item\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          xs={6}\n          className={classes.tableBody}\n        >\n          <Typography variant=\"h4\">ClIENT BILL ONLY</Typography>\n          <Typography variant=\"h4\">NO PATIENT</Typography>\n          <Typography variant=\"h4\">OR</Typography>\n          <Typography variant=\"h4\">THIRD PARTY BILLING</Typography>\n          <Typography variant=\"h4\">ON THIS ACCOUNT</Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nInformationTable.propTypes = {\n  testProfileInfo: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default InformationTable;\n","import React from \"react\";\n\nimport { Typography, Grid, makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { formatPhoneNumber } from \"../../../../utils/helpers\";\n\nconst useStyles = makeStyles(() => ({\n  clientAndPatientInfo: {\n    marginTop: 20,\n  },\n  infoSpace: {\n    lineHeight: 1.2,\n  },\n  patientInformationGridItem: {\n    alignSelf: \"flex-start\",\n  },\n  mt5: {\n    marginTop: 5,\n  },\n  ml5: {\n    marginLeft: 5,\n  },\n  mt10: {\n    marginTop: 10,\n  },\n  ml15: {\n    marginLeft: 15,\n  },\n  ml10: {\n    marginLeft: 10,\n  },\n  ml1: {\n    marginLeft: 1,\n  },\n  ml2: {\n    marginLeft: 2,\n  },\n  ml3: {\n    marginLeft: 3,\n  },\n  ml4: {\n    marginLeft: 4,\n  },\n  mt2: {\n    marginTop: 2,\n  },\n\n}));\n\nconst PatientInformation = (props) => {\n  const classes = useStyles();\n  const { testProfileInfo } = props;\n  return (\n    <Grid container justify=\"space-between\" className={classes.clientAndPatientInfo}>\n      <Grid item xs={8}>\n        <Typography className={classes.infoSpace}>\n          Client\n          <span className={classes.ml4}>#:</span>\n          {\" \"}\n          <span>97512437</span>\n        </Typography>\n        <Typography className={classes.infoSpace}>Ultra Lab Tests, LLC</Typography>\n        <Typography className={classes.infoSpace}>9237 E Via de Ventura, Suite 220 </Typography>\n        <Typography className={classes.infoSpace}>Scottsdale, AZ 85258 UltraLabTests.com </Typography>\n      </Grid>\n      <Grid item xs={4} className={classes.patientInformationGridItem}>\n        <Typography className={classes.infoSpace}>Patient Information </Typography>\n        <Typography className={classes.infoSpace}>\n          {testProfileInfo.firstname}\n          ,\n          {\" \"}\n          {testProfileInfo.lastname}\n        </Typography>\n        <Typography className={classes.infoSpace}>\n          {\" \"}\n          {testProfileInfo.address}\n          {\" \"}\n        </Typography>\n        <Typography className={classes.infoSpace}>\n          {testProfileInfo.city}\n          ,\n          {\" \"}\n          {testProfileInfo.state}\n          {testProfileInfo.postal}\n        </Typography>\n        <Typography className={classes.infoSpace}>\n          Phone:\n          {\" \"}\n          {formatPhoneNumber(testProfileInfo?.phone_home)?.replaceAll(\" \", \"-\")}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nPatientInformation.propTypes = {\n  testProfileInfo: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default PatientInformation;\n","/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\n\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 3, // theme.spacing(0.38, 0, 0, 0),\n    width: \"100vw\",\n    fontSize: 12,\n  },\n  questId: {\n    minWidth: 40,\n    textAlign: \"end\",\n    fontWeight: 400,\n  },\n  mid: {\n    margin: theme.spacing(0, 0.5),\n    fontWeight: 400,\n  },\n  questName: {\n    fontWeight: 400,\n  },\n}));\n\nconst ProfileTests = (props) => {\n  const classes = useStyles();\n  const { profileTests } = props;\n  return (\n    <>\n      {profileTests.map((test) => (\n        <Grid\n          container\n          component=\"p\"\n          key={test.quest_id}\n          className={classes.root}\n        >\n          <span className={classes.questId}>{test.quest_id}</span>\n          <span className={classes.mid}>-</span>\n          <span className={classes.questName}>{test.quest_name}</span>\n        </Grid>\n      ))}\n    </>\n  );\n};\n\nProfileTests.propTypes = {\n  profileTests: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ProfileTests;\n","/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { forwardRef } from \"react\";\n\nimport { Typography, makeStyles, Box } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport InformationTable from \"./components/InformationTable\";\nimport PatientInformation from \"./components/PatientInformation\";\nimport ProfileTestsComponent from \"./components/ProfileTests\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: 10, // theme.spacing(1.2, 0, 0, 0),\n  },\n\n  coverRoot: {\n    minHeight: \"92%\",\n  },\n\n  mt5: {\n    marginTop: 5, // theme.spacing(0.5, 0, 0, 0),\n  },\n  mt20: {\n    marginTop: 20, // theme.spacing(2.5, 0, 0, 0),\n  },\n  footer: {\n    marginTop: 20, // theme.spacing(2.5, 0, 0, 0),\n  },\n  importantTypo: {\n    fontWeight: 1000,\n  },\n  profileTestsComponent: {\n    marginTop: theme.spacing(1.9, 0, 0, 0),\n  },\n}));\nconst PdfTemplate = forwardRef((props, ref) => {\n  const { testProfileInfo, profileTests } = props;\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root} ref={ref}>\n      <Box className={classes.coverRoot}>\n        <Header />\n        <Box className={classes.mt5}>\n          <Typography component=\"p\">\n            National Clinical Account - Questions Please Call 866-226-8046\n          </Typography>\n        </Box>\n        {/* client and patient information */}\n        <PatientInformation testProfileInfo={testProfileInfo} />\n        <Box className={classes.mt5}>\n          <Typography variant=\"h5\">SPECIMENS MUST BE TESTED IN A QLS LABORATORY</Typography>\n        </Box>\n\n        <Box className={classes.mt5}>\n          <Typography variant=\"h5\" className={classes.importantTypo}>\n            IMPORTANT – Please forward specimens to Quest Diagnostics National Laboratory.\n          </Typography>\n        </Box>\n\n        <InformationTable testProfileInfo={testProfileInfo} />\n\n        <Box className={classes.mt20}>\n          <Typography variant=\"h4\">Profiles/Tests</Typography>\n        </Box>\n        <Box className={classes.profileTestsComponent}>\n          <ProfileTestsComponent profileTests={profileTests} />\n        </Box>\n      </Box>\n\n      <Footer />\n    </Box>\n  );\n});\n\nPdfTemplate.propTypes = {\n  testProfileInfo: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  profileTests: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default PdfTemplate;\n","import React, {\n  useState, useEffect, useCallback, useRef,\n} from \"react\";\n\nimport { makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport clsx from \"clsx\";\nimport { useReactToPrint } from \"react-to-print\";\n\nimport useAuth from \"../../../hooks/useAuth\";\nimport PatientPortalService from \"../../../services/patient_portal/patient-portal.service\";\nimport { dateFormat } from \"../../../utils/helpers\";\nimport PdfTemplate from \"../PdfTemplate\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"40px 0px\",\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n  },\n  btnContainer: {\n    margin: theme.spacing(1, 0),\n  },\n  btn: {\n    marginRight: 15,\n    minWidth: 120,\n  },\n  testListContainer: {\n    marginTop: 20,\n  },\n  mt5: {\n    marginTop: 5,\n  },\n  test: {\n    cursor: \"pointer\",\n  },\n  tableContainer: {\n    marginTop: theme.spacing(2),\n    padding: 0,\n  },\n  tableTestsCell: {\n    cursor: \"pointer\",\n  },\n  table: {\n    \"& th\": {\n      fontWeight: 600,\n    },\n  },\n  tableRow: {\n    border: \"none\",\n  },\n  firstColumnforStyledTableCell: {\n    width: \"9%\",\n  },\n  secondColumnforStyledTableCell: {\n    width: \"91%\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"14px\",\n    fontWeight: 700,\n    paddingLeft: 0,\n    border: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  body: {\n    fontSize: 14,\n    paddingLeft: 0,\n    border: \"none\",\n    margin: 0,\n    padding: 0,\n  },\n}))(TableCell);\n\nconst Encounters = () => {\n  const classes = useStyles();\n  const { lastVisitedPatient } = useAuth();\n  const componentRef = useRef();\n  const [testList, setTestList] = useState([]);\n  // to get personal information like firstName, lastName\n  const [testProfileInfo, setTestProfileInfo] = useState();\n  const [profileTests, setProfileTests] = useState();\n\n  const handlePrint = useReactToPrint({\n    pageStyle: `\n    @media print\n    {\n     \n      footer#footer-sections a {\n        background-image: unset;\n      }\n\n      @page {\n        margin-top: 0;\n        \n        @bottom-center {\n          content: \"Page \" counter(page) \" of \" counter(pages);\n        }\n      }\n\n      @page{\n        @bottom-center {\n          content: \"Page \" counter(page) \" of \" counter(pages);\n        }\n      }\n      \n      \n       body  {\n        \n       }\n    } `,\n    content: () => componentRef.current,\n  });\n\n  const fetchTestList = useCallback(() => {\n    PatientPortalService.getTestList(lastVisitedPatient).then((res) => {\n      setTestList(res.data);\n    });\n  }, [lastVisitedPatient]);\n\n  useEffect(() => {\n    fetchTestList();\n  }, [fetchTestList]);\n\n  const fetchReportInformation = async (id) => {\n    const testProfileInfoRes = await PatientPortalService.getTestProfileInfo(id);\n    const profileTestsRes = await PatientPortalService.getProfileTests(id);\n    setTestProfileInfo(testProfileInfoRes.data[0]);\n    setProfileTests(profileTestsRes.data);\n    handlePrint();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography component=\"h1\" variant=\"h2\" color=\"textPrimary\" className={classes.title}>\n        Lab Requisitions\n      </Typography>\n      <Typography component=\"p\" color=\"textPrimary\">\n        This page is used to view lab requisitions you can take to a Quest Diagnostics Lab\n      </Typography>\n      {Boolean(testList.length) && (\n        <TableContainer className={classes.tableContainer}>\n          <Table size=\"small\" className={classes.table} aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Date</StyledTableCell>\n                <StyledTableCell>Tests</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {testList.map((list) => (\n                <TableRow className={classes.tableRow}>\n                  <StyledTableCell className={classes.firstColumnforStyledTableCell}>\n                    {dateFormat(list.dt)}\n                  </StyledTableCell>\n                  <StyledTableCell\n                    className={clsx(classes.tableTestsCell, classes.secondColumnforStyledTableCell)}\n                    onClick={() => fetchReportInformation(list.id)}\n                  >\n                    {list.tests}\n                  </StyledTableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {testProfileInfo && profileTests && (\n        <div style={{ display: \"none\" }}>\n          <PdfTemplate testProfileInfo={testProfileInfo} profileTests={profileTests} ref={componentRef} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Encounters;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass PatientPortalService {\n  // patient profile\n  getProfile() {\n    return axios.get(`${API_BASE}/client-portal/patient`, { headers: authHeader() }).then((res) => res.data);\n  }\n\n  updateProfile(payload, patientId) {\n    return axios.put(`${API_BASE}/client-portal/patient/${patientId}`, payload, {\n      headers: authHeader(),\n    });\n  }\n\n  // appointments\n  getPractitioners(patient) {\n    let url = `${API_BASE}/client-portal/practitioners`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioners/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getPractitionerDates(patient) {\n    let url = `${API_BASE}/client-portal/practitioner-dates`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioner-dates/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBookedAppointments(patient, params) {\n    let url = `${API_BASE}/client-portal/booked-appointments`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/booked-appointments?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n        params,\n      })\n      .then((res) => res.data);\n  }\n\n  getAppointmentTypesByPractitionerId(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment-types`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  bookAppointment(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updateAppointment(payload, appointmentId) {\n    return axios\n      .put(`${API_BASE}/client-portal/appointment/${appointmentId}`, payload, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // encounters\n  getEncounters(patient) {\n    let url = `${API_BASE}/client-portal/encounters`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/encounters/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // lab/documents\n  getLabDocuments(patient) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createLabDocuments(patient, reqBody) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .post(url, reqBody, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Billings\n  getBillings(patient) {\n    let url = `${API_BASE}/client-portal/billings`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/billings/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createBilling(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/billings`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBalance(patient) {\n    let url = `${API_BASE}/client-portal/balance`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/balance/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Payment Methods\n  getPaymentMethods(patient) {\n    let url = `${API_BASE}/patient-portal/payment-methods`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/patient-portal/payment-methods/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Pharmacies\n  getPharmacies() {\n    return axios\n      .get(`${API_BASE}/client-portal/pharmacy`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  searchPharmacies(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/pharmacy/search`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updatePharmacy(pharmacyId, payload) {\n    return axios.put(`${API_BASE}/client-portal/pharmacy/${pharmacyId}`, payload, {\n      headers: authHeader(),\n    })\n      .then((res) => res.data);\n  }\n\n  // Requisitions\n  getRequisitions(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Lab billing\n  getLabBilling(patient) {\n    let url = `${API_BASE}/client-portal/lab_billing`;\n    if (patient) {\n        // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_billing/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n\n  // test list\n  getTestList(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions/test-list`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  async getTestProfileInfo(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/test-profile-info?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n    return res.data;\n  }\n\n  async getProfileTests(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/profile-tests?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n\n    return res.data;\n  }\n\n  // Handouts\n  getHandouts() {\n    return axios\n      .get(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createHandouts() {\n    return axios\n      .post(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  deleteHandout(id) {\n    return axios\n      .delete(`${API_BASE}/client-portal/handouts/${id}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Prescriptions\n  getPrescriptions() {\n    return axios\n      .get(`${API_BASE}/client-portal/prescription`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n}\n\nexport default new PatientPortalService();\n","const Colors = {\n  white: \"#FFFFFF\",\n  black: \"#333333\",\n  blue: \"#6574FB\",\n  brandColor: \"#19A5D3\",\n  red: \"#ff4148\",\n  border: \"#E9EBEE\",\n  headingBlue: \"#102B5C\",\n  newsLetterBg: \"#FFECEE\",\n  textGrey: \"#8E8E8E\",\n  placeHolderText: \"#B4B4B4\",\n  inputBg: \"#FAFAFA\",\n  background: \"#FBFBFB\",\n  fillGray: \"#cccccc\",\n  iconBackGround: \"#EDF8FB\",\n  lighterText: \"#8a8888\",\n  graphInRange: \"#008000\",\n  graphOutRange: \"#FFA500\",\n};\n\nexport default Colors;\n"],"sourceRoot":""}