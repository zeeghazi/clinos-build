{"version":3,"sources":["services/drugs.service.js","screens/Client/Setup/Drugs/components/Drugsform.js","screens/Client/Setup/Drugs/components/Drugstable.js","screens/Client/Setup/Drugs/Drugs.js"],"names":["data","axios","post","API_BASE","headers","authHeader","id","userId","delete","useStyles","makeStyles","theme","controlLabel","marginLeft","marginRight","textField","width","submit","marginTop","spacing","padding","fontSize","Drugsform","fetchSearchDrugs","textChangeHandler","checkBoxChangeHandler","classes","handleKeyUp","event","keyCode","style","margin","TextField","size","variant","autoFocus","onChange","className","name","label","onKeyUp","FormControlLabel","control","Checkbox","color","Button","type","onClick","tableContainer","minWidth","actions","textAlign","display","border","StyledTableCell","withStyles","head","backgroundColor","palette","grey","fontWeight","body","TableCell","StyledTableRow","root","action","hover","height","TableRow","Drugstable","result","enqueueSnackbar","useSnackbar","user","useAuth","useState","state","setState","errors","setErrors","map","error","index","Alert","severity","msg","TableContainer","component","Paper","Table","table","aria-label","TableHead","TableBody","drug","scope","Switch","checked","Boolean","favorite","e","drugId","payload","drug_id","target","item","DrugsService","addFavorite","then","response","setTimeout","message","deleteFavorite","changeHandler","updated","moment","format","updated_name","flexGrow","title","paddingBottom","textTransform","card","minHeight","alignItems","justifyContent","Drugs","searchTerm","setSearchTerm","setFavorite","searchResult","setSearchResult","checkBox","search","res","CssBaseline","Container","maxWidth","Grid","container","justify","md","xs","Typography","value","length"],"mappings":"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","file":"static/js/101.c27cc52b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\nimport authHeader from \"./auth-header\";\n\nclass Drugs {\n  search(data) {\n    return axios.post(`${API_BASE}/drug/`, data, {\n      headers: authHeader(),\n    });\n  }\n\n  addFavorite(id, userId, data) {\n    return axios.post(`${API_BASE}/drug/${id}/${userId}`, data, {\n      headers: authHeader(),\n    });\n  }\n\n  deleteFavorite(id) {\n    return axios.delete(`${API_BASE}/drug/${id}`, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new Drugs();\n","import React from \"react\";\n\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  controlLabel: {\n    marginLeft: \"0px\",\n    marginRight: \"0px\",\n  },\n  textField: {\n    width: \"250px\",\n  },\n  submit: {\n    marginTop: theme.spacing(1),\n    padding: \"4px 30px\",\n    fontSize: \"1rem\",\n  },\n}));\n\nconst Drugsform = ({\n  fetchSearchDrugs,\n  textChangeHandler,\n  checkBoxChangeHandler,\n}) => {\n  const classes = useStyles();\n\n  const handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      fetchSearchDrugs();\n    }\n  };\n\n  return (\n    <div style={{ margin: \"10px 0\" }}>\n      <TextField\n        size=\"small\"\n        variant=\"outlined\"\n        autoFocus\n        onChange={textChangeHandler}\n        className={classes.textField}\n        name=\"searchTerm\"\n        label=\"Name\"\n        onKeyUp={(event) => handleKeyUp(event)}\n      />\n      <div>\n        <FormControlLabel\n          control={(\n            <Checkbox\n              onChange={checkBoxChangeHandler}\n              color=\"primary\"\n              onKeyUp={(event) => handleKeyUp(event)}\n              name=\"favorite\"\n              size=\"small\"\n            />\n          )}\n          label=\"Favorite\"\n        />\n      </div>\n      <Button\n        size=\"small\"\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={fetchSearchDrugs}\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nDrugsform.propTypes = {\n  fetchSearchDrugs: PropTypes.func.isRequired,\n  textChangeHandler: PropTypes.func.isRequired,\n  checkBoxChangeHandler: PropTypes.func.isRequired,\n};\n\nexport default Drugsform;\n","import React, { useState } from \"react\";\n\nimport {\n  makeStyles,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  withStyles,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport useAuth from \"../../../../../hooks/useAuth\";\nimport DrugsService from \"../../../../../services/drugs.service\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    minWidth: 450,\n    marginTop: theme.spacing(2),\n  },\n  actions: {\n    textAlign: \"center\",\n    display: \"flex\",\n    border: \"none\",\n    \"& button\": {\n      fontSize: \"12px\",\n    },\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n      height: \"50px\",\n    },\n  },\n}))(TableRow);\n\n\nconst Drugstable = ({ result, fetchSearchDrugs }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const [state, setState] = useState(result);\n  const [errors, setErrors] = useState([]);\n\n  const changeHandler = (event, drugId) => {\n    const payload = {\n      drug_id: drugId,\n    };\n    const { checked } = event.target;\n    setState(\n      result.map((item) => {\n        if (drugId === item.id) {\n          // eslint-disable-next-line no-param-reassign\n          item.favorite = checked;\n        }\n        return state;\n      }),\n    );\n    if (checked === true) {\n      DrugsService.addFavorite(drugId, user.id, payload).then(\n        (response) => {\n          setTimeout(() => {\n            enqueueSnackbar(`${response.data.message}`, {\n              variant: \"success\",\n            });\n          }, 300);\n        },\n        (error) => {\n          setTimeout(() => {\n            setErrors(error.response.error);\n          }, 300);\n        },\n      );\n    } else {\n      DrugsService.deleteFavorite(drugId).then(\n        (response) => {\n          setTimeout(() => {\n            enqueueSnackbar(`${response.data.message}`, {\n              variant: \"success\",\n            });\n          }, 300);\n        },\n        (error) => {\n          setTimeout(() => {\n            setErrors(error.response.error);\n          }, 300);\n        },\n      );\n    }\n  };\n\n  return (\n    <div>\n      {errors\n        && errors.map((error, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Alert severity=\"error\" key={index}>\n            {error.msg}\n          </Alert>\n        ))}\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table\n          size=\"small\"\n          className={classes.table}\n          aria-label=\"a dense table\"\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell padding=\"checkbox\">Name</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Favorites</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Updated</StyledTableCell>\n              <StyledTableCell padding=\"checkbox\">Updated By</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((drug) => (\n              <StyledTableRow key={drug.id}>\n                <TableCell padding=\"checkbox\" component=\"th\" scope=\"row\">\n                  {drug.name}\n                </TableCell>\n                <TableCell padding=\"checkbox\">\n                  <FormControlLabel\n                    control={(\n                      <Switch\n                        size=\"small\"\n                        checked={Boolean(drug.favorite)}\n                        name=\"switchBox\"\n                        color=\"primary\"\n                        onChange={(e) => {\n                          changeHandler(e, drug.id);\n                          setTimeout(() => {\n                            fetchSearchDrugs();\n                          }, 200);\n                        }}\n                      />\n                    )}\n                  />\n                </TableCell>\n                <TableCell padding=\"checkbox\">\n                  {drug.updated ? moment(drug.updated).format(\"lll\") : \"\"}\n                </TableCell>\n                <TableCell padding=\"checkbox\">{drug.updated_name}</TableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nDrugstable.propTypes = {\n  result: PropTypes.arrayOf(\n    PropTypes.arrayOf({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      favorite: PropTypes.string,\n      updated: PropTypes.string,\n      updated_name: PropTypes.string,\n    }),\n  ).isRequired,\n  fetchSearchDrugs: PropTypes.func.isRequired,\n};\n\nexport default Drugstable;\n","import React, { useState } from \"react\";\n\nimport { makeStyles, Container, CssBaseline } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DrugsService from \"../../../../services/drugs.service\";\nimport Drugsform from \"./components/Drugsform\";\nimport Drugstable from \"./components/Drugstable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  title: {\n    paddingBottom: theme.spacing(0.5),\n  },\n  action: {\n    textTransform: \"none\",\n    marginTop: theme.spacing(2),\n  },\n\n  card: {\n    minHeight: 300,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function Drugs() {\n  const classes = useStyles();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [favorite, setFavorite] = useState(false);\n  const [searchResult, setSearchResult] = useState([]);\n  const payload = {\n    searchTerm,\n    checkBox: favorite,\n  };\n\n  const fetchSearchDrugs = () => {\n    DrugsService.search(payload).then((res) => {\n      setSearchResult(res.data.data);\n    });\n  };\n\n  const textChangeHandler = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const checkBoxChangeHandler = (e) => {\n    setFavorite(e.target.checked);\n  };\n\n  return (\n    <>\n      <CssBaseline>\n        <Container maxWidth={false} className={classes.root}>\n          <Grid container justify=\"center\" spacing={2}>\n            <Grid item md={12} xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                color=\"textPrimary\"\n                className={classes.title}\n              >\n                Drugs\n              </Typography>\n              <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n                This page is used to manage drugs information.\n              </Typography>\n              <Drugsform\n                fetchSearchDrugs={fetchSearchDrugs}\n                textChangeHandler={textChangeHandler}\n                checkBoxChangeHandler={checkBoxChangeHandler}\n              />\n              {searchResult.length > 0 && (\n                <Drugstable\n                  result={searchResult}\n                  fetchSearchDrugs={fetchSearchDrugs}\n                />\n              )}\n            </Grid>\n          </Grid>\n        </Container>\n      </CssBaseline>\n    </>\n  );\n}\n"],"sourceRoot":""}