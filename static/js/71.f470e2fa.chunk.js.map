{"version":3,"sources":["screens/patient-portal/Prescriptions/Prescriptions.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","services/patient_portal/patient-portal.service.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","padding","title","paddingBottom","spacing","Prescriptions","classes","useState","prescriptions","setPrescriptions","fetchPrescriptions","useCallback","PatientPortalService","getPrescriptions","then","res","data","useEffect","className","Typography","component","variant","color","Boolean","length","map","item","gutterBottom","id","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","axios","get","API_BASE","headers","authHeader","payload","patientId","put","patient","url","client_id","params","post","appointmentId","reqBody","pharmacyId","testId","a","delete"],"mappings":"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","file":"static/js/71.f470e2fa.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport PatientPortalService from \"../../../services/patient_portal/patient-portal.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"40px 0px\",\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst Prescriptions = () => {\n  const classes = useStyles();\n  const [prescriptions, setPrescriptions] = useState([]);\n\n  const fetchPrescriptions = useCallback(() => {\n    PatientPortalService.getPrescriptions().then((res) => {\n      setPrescriptions(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchPrescriptions();\n  }, [fetchPrescriptions]);\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        color=\"textPrimary\"\n        className={classes.title}\n      >\n        Prescriptions\n      </Typography>\n      {\n        Boolean(prescriptions.length) && prescriptions.map((item) => (\n          <Typography\n            key={item.id}\n            gutterBottom\n          >\n            {item.id}\n          </Typography>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default Prescriptions;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass PatientPortalService {\n  // patient profile\n  getProfile() {\n    return axios.get(`${API_BASE}/client-portal/patient`, { headers: authHeader() }).then((res) => res.data);\n  }\n\n  updateProfile(payload, patientId) {\n    return axios.put(`${API_BASE}/client-portal/patient/${patientId}`, payload, {\n      headers: authHeader(),\n    });\n  }\n\n  // appointments\n  getPractitioners(patient) {\n    let url = `${API_BASE}/client-portal/practitioners`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioners/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getPractitionerDates(patient) {\n    let url = `${API_BASE}/client-portal/practitioner-dates`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioner-dates/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBookedAppointments(patient, params) {\n    let url = `${API_BASE}/client-portal/booked-appointments`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/booked-appointments?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n        params,\n      })\n      .then((res) => res.data);\n  }\n\n  getAppointmentTypesByPractitionerId(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment-types`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  bookAppointment(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updateAppointment(payload, appointmentId) {\n    return axios\n      .put(`${API_BASE}/client-portal/appointment/${appointmentId}`, payload, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // encounters\n  getEncounters(patient) {\n    let url = `${API_BASE}/client-portal/encounters`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/encounters/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // lab/documents\n  getLabDocuments(patient) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createLabDocuments(patient, reqBody) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .post(url, reqBody, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Billings\n  getBillings(patient) {\n    let url = `${API_BASE}/client-portal/billings`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/billings/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createBilling(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/billings`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBalance(patient) {\n    let url = `${API_BASE}/client-portal/balance`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/balance/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Payment Methods\n  getPaymentMethods(patient) {\n    let url = `${API_BASE}/patient-portal/payment-methods`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/patient-portal/payment-methods/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Pharmacies\n  getPharmacies() {\n    return axios\n      .get(`${API_BASE}/client-portal/pharmacy`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  searchPharmacies(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/pharmacy/search`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updatePharmacy(pharmacyId, payload) {\n    return axios.put(`${API_BASE}/client-portal/pharmacy/${pharmacyId}`, payload, {\n      headers: authHeader(),\n    })\n      .then((res) => res.data);\n  }\n\n  // Requisitions\n  getRequisitions(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Lab billing\n  getLabBilling(patient) {\n    let url = `${API_BASE}/client-portal/lab_billing`;\n    if (patient) {\n        // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_billing/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n\n  // test list\n  getTestList(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions/test-list`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  async getTestProfileInfo(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/test-profile-info?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n    return res.data;\n  }\n\n  async getProfileTests(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/profile-tests?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n\n    return res.data;\n  }\n\n  // Handouts\n  getHandouts() {\n    return axios\n      .get(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createHandouts() {\n    return axios\n      .post(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  deleteHandout(id) {\n    return axios\n      .delete(`${API_BASE}/client-portal/handouts/${id}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Prescriptions\n  getPrescriptions() {\n    return axios\n      .get(`${API_BASE}/client-portal/prescription`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n}\n\nexport default new PatientPortalService();\n"],"sourceRoot":""}