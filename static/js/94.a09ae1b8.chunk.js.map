{"version":3,"sources":["screens/Client/Setup/Users/component/modal/NewOrEditUserModal.js","screens/Client/Setup/Users/component/UsersTable.js","screens/Client/Setup/Users/Users.js","services/users.service.js"],"names":["useStyles","makeStyles","theme","title","backgroundColor","palette","primary","light","color","content","paddingTop","spacing","paddingBottom","fontSize","formControl","margin","display","flexDirection","alignItems","text","secondary","minWidth","formLabel","root","marginLeft","formHelperText","width","paddingLeft","statusText","modalAction","borderTop","background","default","justifyContent","paddingRight","errorsInitialState","one","two","three","four","five","NewOrEditUserModal","isOpen","handleOnClose","isNewUser","forwardEmailList","fetchAllUsers","allUsers","authUser","props","classes","enqueueSnackbar","useSnackbar","useState","user","setUser","errors","setErrors","errorChecking","setErrorChecking","nameError","some","u","String","firstname","trim","toLowerCase","lastname","firstnameError","length","lastnameError","emailError","email","statusError","id","status","useEffect","tempUser","payload","phone","timezone","note","appointments","type","schedule","admin","email_forward_user_id","handleCreateNewOrEditUser","test","UserService","createNewUser","then","response","setTimeout","data","message","variant","error","updateUser","handleOnChange","event","isChecked","target","name","checked","value","handleKeyUp","keyCode","Dialog","maxWidth","fullWidth","open","onClose","aria-labelledby","aria-describedby","DialogTitle","className","DialogContent","map","index","Alert","severity","msg","Grid","container","justify","item","xs","md","gridMargin","FormControl","component","TextField","autoFocus","required","label","onChange","onKeyUp","size","InputLabelProps","shrink","helperText","select","SelectProps","native","aria-label","disabled","created","moment","format","created_user","list","login_dt","updated","updated_user","FormControlLabel","control","Switch","Boolean","noteMargin","multiline","InputProps","rows","DialogActions","Button","onClick","style","borderColor","colors","orange","tableContainer","marginTop","StyledTableCell","withStyles","head","grey","fontWeight","body","TableCell","StyledTableRow","action","hover","padding","height","TableRow","UsersTable","users","handleOnEditClick","TableContainer","Paper","Table","table","TableHead","TableBody","scope","forward_user","IconButton","flexGrow","uploadButtons","marginBottom","breakpoints","up","marginRight","Users","useAuth","setIsOpen","setIsNewUser","setAllUsers","setForwardEmailList","userValues","setUserValues","isShowDeleted","setIsShowDeleted","useCallback","UsersService","getAllUsers","res","tempUsers","filter","getForwardEmailList","CssBaseline","Container","Typography","labelPlacement","selectUserById","_","API_URL","process","axios","get","headers","authHeader","post","put"],"mappings":"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","file":"static/js/94.a09ae1b8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  colors,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Switch,\n  TextField,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport UserService from \"../../../../../../services/users.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    backgroundColor: theme.palette.primary.light,\n    \"& h2\": {\n      color: \"#fff\",\n    },\n  },\n  content: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    fontSize: \"18px\",\n  },\n  formControl: {\n    margin: \"10px 0\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    color: theme.palette.text.secondary,\n    \"& .MuiSelect-select\": {\n      minWidth: 120,\n    },\n  },\n  formLabel: {\n    margin: \"5px 10px\",\n  },\n  root: {\n    \"& .MuiTypography-root\": {\n      marginLeft: \"5px\",\n    },\n  },\n  formHelperText: {\n    width: \"220px\",\n    fontSize: \"12px\",\n    paddingLeft: \"10px\",\n  },\n  statusText: {\n    width: \"220px\",\n    fontSize: \"14px\",\n  },\n  modalAction: {\n    borderTop: `1px solid ${theme.palette.background.default}`,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n}));\n\nconst errorsInitialState = {\n  one: \"\",\n  two: \"\",\n  three: \"\",\n  four: \"\",\n  five: \"\",\n};\n\nconst NewOrEditUserModal = ({\n  isOpen,\n  handleOnClose,\n  isNewUser,\n  forwardEmailList,\n  fetchAllUsers,\n  allUsers,\n  authUser,\n  ...props\n}) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [user, setUser] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [errorChecking, setErrorChecking] = useState(errorsInitialState);\n\n  const nameError = allUsers.some((u) => (isNewUser\n    ? String(u.firstname).trim().toLowerCase()\n    === String(user.firstname).trim().toLowerCase()\n    && String(u.lastname).trim().toLowerCase()\n    === String(user.lastname).trim().toLowerCase()\n    : false));\n  const firstnameError = String(user.firstname).length <= 0 || String(user.firstname).length > 25;\n  const lastnameError = String(user.lastname).length <= 0 || String(user.lastname).length > 255;\n  const emailError = allUsers.some((u) => (isNewUser\n    ? String(u.email).trim().toLowerCase()\n    === String(user.email).trim().toLowerCase()\n    : false));\n  const statusError = user.id === authUser.id && String(user.status) === \"D\";\n\n  /* TODO: if row edited==self, admin was false, user sets admin=true, then print message \"You cant grant yourself administrator permissions!\" and stop\n   const usePrevious = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n  const prevVal = usePrevious(user.admin);\n\n  const adminError = () => {\n    if (Boolean(user.admin) === true) {\n      if (Boolean(prevVal) === false) {\n        if (user.id === authUser.id) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }; */\n\n  const isValid = () => {\n    // eslint-disable-next-line max-len\n    const checkEmailIsValid = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!user.firstname) {\n      setErrorChecking({ ...errorChecking, one: \"Firstname can't be blank !\" });\n      return false;\n    }\n    if (!user.lastname) {\n      setErrorChecking({ ...errorChecking, two: \"Lastname can't be blank!\" });\n      return false;\n    }\n    if (!user.email) {\n      setErrorChecking({ ...errorChecking, three: \"Email can't be blank!\" });\n      return false;\n    }\n    if (!checkEmailIsValid.test(String(user.email).toLowerCase())) {\n      setErrorChecking({ ...errorChecking, five: \"Invalid email\" });\n      return false;\n    }\n    if (!user.type) {\n      setErrorChecking({ ...errorChecking, four: \"Please select a type!\" });\n      return false;\n    }\n    return true;\n  };\n  const validate = () => {\n    if (\n      nameError\n      || firstnameError\n      || lastnameError\n      || emailError\n      || statusError\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    const tempUser = {\n      ...props.user,\n    };\n    setUser(tempUser);\n    // eslint-disable-next-line react/destructuring-assignment\n  }, [props.user]);\n\n  const payload = {\n    firstname: user.firstname,\n    lastname: user.lastname,\n    title: user.title,\n    email: user.email,\n    phone: user.phone,\n    timezone: user.timezone,\n    note: user.note,\n    status: user.status,\n    appointments: user.appointments,\n    type: user.type,\n    schedule: user.schedule,\n    admin: user.admin,\n    email_forward_user_id: user.email_forward_user_id,\n  };\n\n  const handleCreateNewOrEditUser = () => {\n    if (isValid()) {\n      if (isNewUser) {\n        UserService.createNewUser(payload).then(\n          (response) => {\n            setTimeout(() => {\n              enqueueSnackbar(`${response.data.message}`, {\n                variant: \"success\",\n              });\n            }, 300);\n          },\n          (error) => {\n            setTimeout(() => {\n              setErrors(error.response.error);\n            }, 300);\n          },\n        );\n      } else {\n        UserService.updateUser(user.id, payload).then(\n          (response) => {\n            setTimeout(() => {\n              enqueueSnackbar(`${response.data.message}`, {\n                variant: \"success\",\n              });\n            }, 300);\n          },\n          (error) => {\n            setTimeout(() => {\n              setErrors(error.response.error);\n            }, 300);\n          },\n        );\n      }\n      handleOnClose();\n      setTimeout(() => {\n        fetchAllUsers();\n      }, 200);\n    }\n  };\n\n  const handleOnChange = (event) => {\n    const isChecked = event.target.type === \"checkbox\";\n    setUser({\n      ...user,\n      [event.target.name]: isChecked\n        ? event.target.checked\n        : event.target.value.trim(),\n    });\n    setErrorChecking(errorsInitialState);\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      handleCreateNewOrEditUser();\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        maxWidth=\"sm\"\n        fullWidth\n        open={isOpen}\n        onClose={handleOnClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\" className={classes.title}>\n          {isNewUser ? \"New User\" : \"Edit User\"}\n        </DialogTitle>\n        <DialogContent className={classes.content}>\n          {errors\n            && errors.map((error, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Alert severity=\"error\" key={index}>\n                {error.msg}\n              </Alert>\n            ))}\n          <div className={classes.root}>\n            <Grid container justify=\"center\" spacing={1}>\n              <Grid item xs={12} md={4} className={classes.gridMargin}>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    autoFocus\n                    required\n                    label=\"Firstname\"\n                    name=\"firstname\"\n                    value={user.firstname ? String(user.firstname) : \"\"}\n                    onChange={handleOnChange}\n                    onKeyUp={handleKeyUp}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    error={errorChecking.one || nameError || firstnameError}\n                    helperText={\n                      (errorChecking.one && errorChecking.one)\n                      || (nameError\n                        && \"This firstname and lastname already exists!\")\n                      || (firstnameError\n                        && \"Firstname can't be less then 0 or greater then 255 characters!\")\n                    }\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    required\n                    fullWidth\n                    label=\"Lastname\"\n                    name=\"lastname\"\n                    value={user.lastname ? String(user.lastname) : \"\"}\n                    onChange={handleOnChange}\n                    onKeyUp={handleKeyUp}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    error={errorChecking.two || nameError || lastnameError}\n                    helperText={\n                      (errorChecking.two && errorChecking.two)\n                      || (nameError\n                        && \"This firstname and lastname already exists!\")\n                      || (lastnameError\n                        && \"Lastname can't be less then 0 or greater then 255 characters!\")\n                    }\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    label=\"Title\"\n                    name=\"title\"\n                    value={user.title ? String(user.title) : \"\"}\n                    onChange={handleOnChange}\n                    onKeyUp={handleKeyUp}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    required\n                    label=\"Email\"\n                    name=\"email\"\n                    value={user.email ? String(user.email) : \"\"}\n                    onChange={handleOnChange}\n                    onKeyUp={handleKeyUp}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    error={\n                      errorChecking.three || emailError || errorChecking.five\n                    }\n                    helperText={\n                      (errorChecking.three && errorChecking.three)\n                      || (emailError && \"This email already exists!\")\n                      || (errorChecking.five && errorChecking.five)\n                    }\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={user.phone ? String(user.phone) : \"\"}\n                    onChange={handleOnChange}\n                    onKeyUp={handleKeyUp}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"Timezone\"\n                    name=\"timezone\"\n                    value={user.timezone}\n                    onChange={handleOnChange}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option aria-label=\"None\" value=\"-10\">\n                      HST &#45; Hawaii Standard Time\n                    </option>\n                    <option aria-label=\"None\" value=\"-9\">\n                      AKST &#45; Alaska Standard Time\n                    </option>\n                    <option aria-label=\"None\" value=\"-8\">\n                      {/* eslint-disable-next-line no-tabs */}\n                      PST\t&#45; Pacific Standard Time\n                    </option>\n                    <option aria-label=\"None\" value=\"-7\">\n                      {/* eslint-disable-next-line no-tabs */}\n                      MST\t&#45; Mountain Standard Time\n                    </option>\n                    <option aria-label=\"None\" value=\"-6\">\n                      {/* eslint-disable-next-line no-tabs */}\n                      CST\t&#45; Central Standard Time\n                    </option>\n                    <option aria-label=\"None\" value=\"-5\">\n                      {/* eslint-disable-next-line no-tabs */}\n                      EST\t&#45; Eastern Standard Time\n                    </option>\n                  </TextField>\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    disabled\n                    label=\"Created\"\n                    value={\n                      user.created ? moment(user.created).format(\"lll\") : \"\"\n                    }\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    disabled\n                    label=\"Created By\"\n                    value={user.created_user}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={4} className={classes.gridMargin}>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"Status\"\n                    name=\"status\"\n                    value={user.status}\n                    onChange={handleOnChange}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                    error={statusError}\n                    helperText={\n                      statusError && \"You can't set yourself to deleted!\"\n                    }\n                  >\n                    <option aria-label=\"None\" value=\"A\">\n                      Active\n                    </option>\n                    <option aria-label=\"None\" value=\"I\">\n                      Inactive\n                    </option>\n                    <option aria-label=\"None\" value=\"D\">\n                      Deleted\n                    </option>\n                  </TextField>\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    required\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"Type\"\n                    name=\"type\"\n                    value={user.type}\n                    onChange={handleOnChange}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                    error={errorChecking.four}\n                    helperText={errorChecking.four && errorChecking.four}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option aria-label=\"None\" value=\"PP\">\n                      Primary Provider\n                    </option>\n                    <option aria-label=\"None\" value=\"SP\">\n                      Secondary Provider\n                    </option>\n                    <option aria-label=\"None\" value=\"A\">\n                      Administrative\n                    </option>\n                    <option aria-label=\"None\" value=\"L\">\n                      Limited\n                    </option>\n                  </TextField>\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"Schedule\"\n                    name=\"schedule\"\n                    value={user.schedule}\n                    onChange={handleOnChange}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                  >\n                    <option aria-label=\"None\" value=\"F\">\n                      Full\n                    </option>\n                    <option aria-label=\"None\" value=\"H\">\n                      Half\n                    </option>\n                    <option aria-label=\"None\" value=\"Q\">\n                      Quarter\n                    </option>\n                  </TextField>\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"Forward Email\"\n                    name=\"email_forward_user_id\"\n                    value={user.email_forward_user_id}\n                    onChange={handleOnChange}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    {forwardEmailList.map((list) => (\n                      <option key={list.id} value={list.id}>\n                        {list.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    disabled\n                    label=\"Last Login\"\n                    value={\n                      user.login_dt ? moment(user.login_dt).format(\"lll\") : \"\"\n                    }\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    disabled\n                    label=\"Updated\"\n                    value={\n                      user.updated ? moment(user.updated).format(\"lll\") : \"\"\n                    }\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n                <FormControl component=\"div\" className={classes.formControl}>\n                  <TextField\n                    fullWidth\n                    disabled\n                    label=\"Updated By\"\n                    value={user.updated_user}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <FormControlLabel\n                  className={classes.formLabel}\n                  control={(\n                    <Switch\n                      checked={Boolean(user.appointments)}\n                      size=\"small\"\n                      name=\"appointments\"\n                      color=\"primary\"\n                      onChange={handleOnChange}\n                    />\n                  )}\n                  label=\"Appointments\"\n                />\n                <FormControlLabel\n                  className={classes.formLabel}\n                  control={(\n                    <Switch\n                      checked={Boolean(user.admin)}\n                      size=\"small\"\n                      name=\"admin\"\n                      color=\"primary\"\n                      onChange={handleOnChange}\n                    />\n                  )}\n                  label=\"Administrator\"\n                />\n                {/* TODO {adminError() && (\n                  <FormHelperText\n                    style={{ textAlign: \"center\", marginTop: \"-3PX\" }}\n                    error={true}\n                  >\n                    You can't grant yourself administrator permissions!\n                  </FormHelperText>\n                )} */}\n              </Grid>\n            </Grid>\n\n            <FormControl component=\"div\" className={classes.formControl}>\n              <TextField\n                className={classes.noteMargin}\n                fullWidth\n                variant=\"outlined\"\n                multiline\n                name=\"note\"\n                label=\"Notes\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  rows: 6,\n                }}\n                value={user.note ? String(user.note) : \"\"}\n                onChange={handleOnChange}\n                onKeyUp={handleKeyUp}\n              />\n            </FormControl>\n          </div>\n        </DialogContent>\n        <DialogActions className={classes.modalAction}>\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={handleOnClose}\n            style={{\n              borderColor: colors.orange[600],\n              color: colors.orange[600],\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={handleCreateNewOrEditUser}\n            disabled={!validate()}\n          >\n            {isNewUser ? \"Save\" : \"Update\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nNewOrEditUserModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  handleOnClose: PropTypes.func.isRequired,\n  isNewUser: PropTypes.bool.isRequired,\n  forwardEmailList: PropTypes.arrayOf(\n    PropTypes.objectOf({\n      id: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n  allUsers: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  authUser: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  user: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  fetchAllUsers: PropTypes.func.isRequired,\n};\n\nexport default NewOrEditUserModal;\n","import React from \"react\";\n\nimport {\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  withStyles,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    minWidth: 450,\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      padding: \"6px 16px\",\n      fontSize: 12,\n      height: \"50px\",\n    },\n  },\n}))(TableRow);\n\nconst UsersTable = ({ users, handleOnEditClick }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table className={classes.table} aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Firstname</StyledTableCell>\n              <StyledTableCell>Lastname</StyledTableCell>\n              <StyledTableCell>Title</StyledTableCell>\n              <StyledTableCell>Email</StyledTableCell>\n              <StyledTableCell>Status</StyledTableCell>\n              <StyledTableCell>Type</StyledTableCell>\n              <StyledTableCell>Schedule</StyledTableCell>\n              <StyledTableCell>Appt</StyledTableCell>\n              <StyledTableCell>Admin</StyledTableCell>\n              <StyledTableCell>Note</StyledTableCell>\n              <StyledTableCell>Forward</StyledTableCell>\n              <StyledTableCell>Created</StyledTableCell>\n              <StyledTableCell>Created By</StyledTableCell>\n              <StyledTableCell>Updated</StyledTableCell>\n              <StyledTableCell>Updated By</StyledTableCell>\n              <StyledTableCell>Edit</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => (\n              <StyledTableRow key={user.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {user.firstname}\n                </TableCell>\n                <TableCell>{user.lastname}</TableCell>\n                <TableCell>{user.title}</TableCell>\n                <TableCell>{user.email}</TableCell>\n                <TableCell>\n                  {user.status === \"A\"\n                    ? \"Active\"\n                    : user.status === \"I\"\n                      ? \"Inactive\"\n                      : \"Deleted\"}\n                </TableCell>\n                <TableCell>\n                  {user.type === \"PP\"\n                    ? \"Primary Provider\"\n                    : user.type === \"SP\"\n                      ? \"Secondary Provider\"\n                      : user.type === \"A\"\n                        ? \"Administrative\"\n                        : user.type === \"L\"\n                          ? \"Limited\"\n                          : \"\"}\n                </TableCell>\n                <TableCell>\n                  {user.schedule === \"F\"\n                    ? \"Full\"\n                    : user.schedule === \"H\"\n                      ? \"Half\"\n                      : \"Quarter\"}\n                </TableCell>\n                <TableCell>{user.appointments ? \"Yes\" : \"No\"}</TableCell>\n                <TableCell>{user.admin ? \"Yes\" : \"No\"}</TableCell>\n                <TableCell>{user.note}</TableCell>\n                <TableCell>{user.forward_user}</TableCell>\n                <TableCell>\n                  {user.created ? moment(user.created).format(\"lll\") : \"\"}\n                </TableCell>\n                <TableCell>{user.created_user}</TableCell>\n                <TableCell>\n                  {user.updated ? moment(user.updated).format(\"lll\") : \"\"}\n                </TableCell>\n                <TableCell>{user.updated_user}</TableCell>\n                <TableCell>\n                  <IconButton\n                    aria-label=\"edit\"\n                    onClick={() => handleOnEditClick(user.id)}\n                  >\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                </TableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nUsersTable.propTypes = {\n  handleOnEditClick: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default UsersTable;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  FormControlLabel,\n  makeStyles,\n  Switch,\n} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport _ from \"lodash\";\n\nimport useAuth from \"../../../../hooks/useAuth\";\nimport UsersService from \"../../../../services/users.service\";\nimport NewOrEditUserModal from \"./component/modal/NewOrEditUserModal\";\nimport UsersTable from \"./component/UsersTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"40px 0px\",\n  },\n  uploadButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    maxWidth: \"550px\",\n    marginBottom: theme.spacing(1),\n    \"& h1\": {\n      [theme.breakpoints.up(\"md\")]: {\n        marginRight: theme.spacing(4),\n      },\n    },\n  },\n}));\n\nconst Users = () => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isNewUser, setIsNewUser] = useState(true);\n  const [allUsers, setAllUsers] = useState([]);\n  const [forwardEmailList, setForwardEmailList] = useState([]);\n  const [userValues, setUserValues] = useState(\"\");\n  const [isShowDeleted, setIsShowDeleted] = useState(false);\n\n  const fetchAllUsers = useCallback(() => {\n    UsersService.getAllUsers().then((res) => {\n      const users = res.data.data;\n      setAllUsers(users);\n      if (isShowDeleted === false) {\n        const tempUsers = users.filter((u) => u.status !== \"D\");\n        setAllUsers(tempUsers);\n      } else {\n        setAllUsers(users);\n      }\n    });\n  }, [isShowDeleted]);\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, [isShowDeleted, fetchAllUsers]);\n\n  const fetchForwardEmailList = () => {\n    UsersService.getForwardEmailList().then((res) => setForwardEmailList(res.data.data));\n  };\n\n  useEffect(() => {\n    fetchForwardEmailList();\n  }, []);\n\n  const handleOnNewClick = () => {\n    setIsOpen(true);\n    setIsNewUser(true);\n    setUserValues({\n      admin: false,\n      status: \"A\",\n      schedule: \"F\",\n      type: \"\",\n      appointments: true,\n    });\n  };\n\n  const handleOnEditClick = (id) => {\n    setIsOpen(true);\n    setIsNewUser(false);\n    const selectUserById = allUsers.filter((u) => u.id === id);\n    return selectUserById && setUserValues(_.head(selectUserById));\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth={false} className={classes.root}>\n        <div className={classes.uploadButtons}>\n          <Typography component=\"h1\" variant=\"h2\" color=\"textPrimary\">\n            Users\n          </Typography>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={isShowDeleted}\n                size=\"small\"\n                name=\"active\"\n                color=\"primary\"\n                onChange={() => setIsShowDeleted(!isShowDeleted)}\n              />\n            )}\n            label=\"Show deleted users\"\n            labelPlacement=\"start\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"span\"\n            onClick={() => handleOnNewClick()}\n          >\n            New\n          </Button>\n        </div>\n        <Grid container justify=\"center\" spacing={8}>\n          <Grid item md={12} xs={12}>\n            <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n              This page is used to manage users\n            </Typography>\n            <UsersTable\n              users={allUsers}\n              handleOnEditClick={handleOnEditClick}\n            />\n          </Grid>\n        </Grid>\n        <NewOrEditUserModal\n          isOpen={isOpen}\n          handleOnClose={() => setIsOpen(false)}\n          isNewUser={isNewUser}\n          forwardEmailList={forwardEmailList}\n          fetchAllUsers={fetchAllUsers}\n          authUser={user}\n          user={userValues}\n          allUsers={allUsers}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default Users;\n","import axios from \"axios\";\n\nimport authHeader from \"./auth-header\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}api/v1` || \"http://localhost:5000/api/v1\";\n\nclass Users {\n  getAllUsers() {\n    return axios.get(`${API_URL}/allusers`, { headers: authHeader() });\n  }\n\n  getForwardEmailList() {\n    return axios.get(`${API_URL}/forwardemail`, { headers: authHeader() });\n  }\n\n  createNewUser(data) {\n    return axios.post(`${API_URL}/user`, data, { headers: authHeader() });\n  }\n\n  updateUser(id, data) {\n    return axios.put(`${API_URL}/user/${id}`, data, {\n      headers: authHeader(),\n    });\n  }\n\n  getContractlists() {\n    return axios.get(`${API_URL}/auth/user/contracts`, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new Users();\n"],"sourceRoot":""}