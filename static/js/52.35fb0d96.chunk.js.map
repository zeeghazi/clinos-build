{"version":3,"sources":["screens/EmailConfirmation/components/VerificationMessage.js","screens/EmailConfirmation/components/VerificationSuccess.js","screens/EmailConfirmation/EmailConfirmation.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","services/email.service.js","components/common/Dimmer.js"],"names":["VerificationMessage","severity","message","Alert","defaultProps","useStyles","makeStyles","theme","root","margin","spacing","textAlign","fontSize","lineHeight","VerificationSuccess","isEmailVerified","classes","Card","className","variant","CardContent","Link","href","process","EmailConfirmation","props","enqueueSnackbar","useSnackbar","useState","isLoading","setIsLoading","success","setSuccess","setIsEmailVerified","setMessage","showError","setShowError","params","match","useEffect","EmailService","emailVerify","userId","token","then","response","data","isVerified","error","resMessage","toString","Dimmer","isOpen","React","ref","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","createSvgIcon","d","defaultIconMapping","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","action","children","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","Paper","square","elevation","IconButton","size","title","onClick","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","shape","display","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","user","axios","post","API_BASE","get","backdrop","zIndex","drawer","open"],"mappings":"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","file":"static/js/52.35fb0d96.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst VerificationMessage = ({ severity, message }) => (\n  <Alert severity={severity}>{message}</Alert>\n);\n\nVerificationMessage.defaultProps = {\n  severity: \"error\",\n};\n\nVerificationMessage.propTypes = {\n  severity: PropTypes.string,\n  message: PropTypes.string.isRequired,\n};\n\nexport default VerificationMessage;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    \"& p\": {\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n    },\n  },\n}));\n\nconst VerificationSuccess = ({ isEmailVerified }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        {isEmailVerified ? (\n          <p>\n            Your can login here:\n            {\" \"}\n            <Link href={`${process.env.REACT_APP_SITE_URL}login_client`}>\n              {`${process.env.REACT_APP_SITE_URL}login_client`}\n            </Link>\n          </p>\n        ) : (\n          <>\n            <p>Thank you for confirming your email address. </p>\n            <p>\n              Your login page would be\n              {\" \"}\n              <Link href={`${process.env.REACT_APP_SITE_URL}login_client`}>\n                {`${process.env.REACT_APP_SITE_URL}login_client`}\n              </Link>\n            </p>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nVerificationSuccess.propTypes = {\n  isEmailVerified: PropTypes.bool.isRequired,\n};\n\nexport default VerificationSuccess;\n","import React, { useEffect, useState } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport Dimmer from \"../../components/common/Dimmer\";\nimport EmailService from \"../../services/email.service\";\nimport { VerificationMessage, VerificationSuccess } from \"./components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    \"& p\": {\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n    },\n  },\n}));\n\nconst EmailConfirmation = ({ ...props }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isLoading, setIsLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n\n  const {\n    match: { params },\n  } = props;\n\n  useEffect(() => {\n    EmailService.emailVerify(params.userId, params.token).then(\n      (response) => {\n        enqueueSnackbar(`${response.data.message}`, {\n          variant: \"success\",\n        });\n\n        if (response.data.isVerified) {\n          setIsEmailVerified(true);\n          setIsLoading(false);\n          setMessage(response.data.message);\n        }\n        setIsLoading(false);\n        setSuccess(true);\n        setMessage(response.data.message);\n      },\n      (error) => {\n        const resMessage = (error.response\n              && error.response.data\n              && error.response.data.message)\n            || error.message\n            || error.toString();\n\n        setIsLoading(false);\n        setMessage(resMessage);\n        setSuccess(false);\n        setShowError(true);\n      },\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let severity = \"error\";\n  if (showError) {\n    severity = \"error\";\n  }\n  if (isEmailVerified) {\n    severity = \"info\";\n  }\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          {(showError || isEmailVerified) && (\n            <VerificationMessage severity={severity} message={message} />\n          )}\n          {success && <VerificationSuccess isEmailVerified={isEmailVerified} />}\n        </CardContent>\n      </Card>\n\n      <Dimmer isOpen={isLoading} />\n    </>\n  );\n};\n\nEmailConfirmation.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      token: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default EmailConfirmation;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\n\nclass EmailService {\n  sendEmailVerification(user) {\n    return axios.post(`${API_BASE}/email/send/verification/`, user);\n  }\n\n  resendEmailVerification(user) {\n    return axios.post(`${API_BASE}/email/resend/verification/`, user);\n  }\n\n  emailVerify(userId, token) {\n    return axios.get(`${API_BASE}/email/confirmation/${userId}/${token}`);\n  }\n}\n\nexport default new EmailService();\n","import React from \"react\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\n// TODO:: Add local fetching indicator https://www.basefactor.com/react-how-to-display-a-loading-indicator-on-fetch-calls\nconst Dimmer = ({ isOpen }) => {\n  const classes = useStyles();\n  const handleClose = () => {\n  };\n\n  return (\n    <Backdrop className={classes.backdrop} open={isOpen} onClick={handleClose}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nDimmer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Dimmer;\n"],"sourceRoot":""}