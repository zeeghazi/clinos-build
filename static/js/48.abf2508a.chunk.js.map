{"version":3,"sources":["screens/patient-portal/Labs/modal/PatientLabDocumentViewer.js","screens/patient-portal/Labs/Labs.js","components/Dialog/index.js","services/patient_portal/patient-portal.service.js","hooks/useDidMountEffect.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","useStyles","makeStyles","theme","appBar","textAlign","title","marginLeft","spacing","flex","justifyContent","PDFViewer","marginTop","marginBottom","display","gridTemplateColumns","alignContent","PaginationWrap","documentPage","background","PatientLabDocumentViewer","documentName","patientId","classes","enqueueSnackbar","useSnackbar","useState","file","setFile","totalPages","setTotalPages","pageNumber","setPageNumber","type","setType","initialWidth","setInitialWidth","pdfWrapper","useRef","useEffect","filePath","process","fileName","fileType","substring","lastIndexOf","setPdfSize","current","getBoundingClientRect","width","window","addEventListener","throttle","removeEventListener","className","ref","onLoadSuccess","numPages","Pagination","count","shape","onChange","event","value","onError","e","variant","console","error","Transition","React","forwardRef","props","Slide","direction","root","flexGrow","padding","paddingBottom","tab","margin","fontSize","cursor","tabSelected","borderBottom","palette","primary","main","newButton","StyledTableCell","withStyles","head","whiteSpace","fontWeight","body","TableCell","StyledTableRow","lineHeight","TableRow","Labs","useAuth","lastVisitedPatient","user","labDocuments","setLabDocuments","tabValue","setTabValue","tableData","setTableData","isLabModalOpen","setIsLabModalOpen","setDocumentName","fetchLabDocuments","useCallback","PatientPortalService","getLabDocuments","then","res","data","sortDocumentByStatus","selectedTab","allData","filter","x","status","labsData","imagingData","uncategorizedData","useDidMountEffect","handleTabChange","newValue","Grid","item","sm","xs","container","justify","Typography","component","color","Button","id","accept","hidden","files","target","length","fd","FormData","append","createLabDocuments","response","message","catch","resMessage","toString","handleLabsFile","onClick","Boolean","TableContainer","tableContainer","Table","size","table","TableHead","TableBody","map","filename","scope","moment","created","format","Dialog","open","cancelForm","client_id","hideActions","fullHeight","transitionComponent","createStyles","titleContainer","minHeight","content","maxHeight","fullScreenContent","buttonClose","position","right","top","save","success","minWidth","cancel","DialogForm","applyForm","applyButtonText","cancelButtonText","fullScreen","onClose","fullWidth","maxWidth","TransitionComponent","aria-label","disableTypography","clsx","align","defaultProps","undefined","axios","get","API_BASE","headers","authHeader","payload","put","patient","url","params","post","appointmentId","reqBody","pharmacyId","testId","a","delete","func","deps","didMount"],"mappings":"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","file":"static/js/48.abf2508a.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport throttle from \"lodash/throttle\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport FileViewer from \"react-file-viewer\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\n\npdfjs\n  .GlobalWorkerOptions\n  .workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    textAlign: \"right\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    justifyContent: \"space-between\",\n  },\n  PDFViewer: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    display: \"grid\",\n    gridTemplateColumns: \"max-content\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  PaginationWrap: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  documentPage: {\n    background: \"red\",\n    textAlign: \"center\",\n  },\n}));\n\nconst checkFileExtension = (fileName) => fileName.substring(fileName.lastIndexOf(\".\") + 1);\n\nconst PatientLabDocumentViewer = ({\n  documentName, patientId,\n}) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [file, setFile] = useState(\"\");\n  const [totalPages, setTotalPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [type, setType] = useState(\"\");\n  const [initialWidth, setInitialWidth] = useState(580);\n  const pdfWrapper = useRef(null);\n\n  useEffect(() => {\n    const filePath = `${process.env.REACT_APP_API_URL}static/patient/pid${patientId}_${documentName}`;\n    setFile(filePath);\n    const fileType = checkFileExtension(filePath);\n    setType(fileType);\n  }, [documentName, patientId]);\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setTotalPages(numPages);\n  };\n\n  const handleChange = (event, value) => {\n    setPageNumber(value);\n  };\n\n  const onError = (e) => {\n    enqueueSnackbar(e, { variant: \"error\" });\n    console.error(\"onError\", e);\n  };\n\n  const setPdfSize = () => {\n    if (pdfWrapper && pdfWrapper.current) {\n      setInitialWidth(pdfWrapper.current.getBoundingClientRect().width);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", throttle(setPdfSize, 3000));\n    setPdfSize();\n    return () => {\n      window.removeEventListener(\"resize\", throttle(setPdfSize, 3000));\n    };\n  }, []);\n\n\n  return (\n    <>\n      {type && (type === \"pdf\")\n        ? (\n          <div className={classes.PDFViewer} ref={pdfWrapper}>\n            <Document\n              file={(file)}\n              onLoadSuccess={onDocumentLoadSuccess}\n            >\n              <Page pageNumber={pageNumber} width={initialWidth} />\n            </Document>\n            {totalPages && (\n              <div className={classes.PaginationWrap}>\n                <Pagination count={totalPages} shape=\"rounded\" onChange={handleChange} />\n              </div>\n            )}\n          </div>\n        )\n        : (\n          <FileViewer\n            fileType={type}\n            filePath={file}\n            onError={onError}\n          />\n        )}\n    </>\n  );\n};\n\nPatientLabDocumentViewer.propTypes = {\n  patientId: PropTypes.string.isRequired,\n  documentName: PropTypes.string.isRequired,\n};\nexport default PatientLabDocumentViewer;\n","import React, { useCallback, useState, useEffect } from \"react\";\n\nimport {\n  makeStyles, withStyles, Typography, Grid, Button,\n} from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\n\nimport Dialog from \"../../../components/Dialog\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport useDidMountEffect from \"../../../hooks/useDidMountEffect\";\nimport PatientPortalService from \"../../../services/patient_portal/patient-portal.service\";\nimport PatientLabDocumentViewer from \"./modal/PatientLabDocumentViewer\";\n\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"40px 0px\",\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n  },\n  tab: {\n    paddingBottom: 5,\n    margin: \"5px 16px 5px 0\",\n    fontSize: 14,\n    cursor: \"pointer\",\n  },\n  tabSelected: {\n    paddingBottom: 0,\n    margin: \"5px 16px 6px 0\",\n    fontSize: 14,\n    cursor: \"pointer\",\n    borderBottom: `2px solid ${theme.palette.primary.main}`,\n  },\n  newButton: {\n    fontSize: \"14px\",\n    marginLeft: theme.spacing(4),\n  },\n}));\n\nconst StyledTableCell = withStyles(() => ({\n  head: {\n    whiteSpace: \"nowrap\",\n    fontSize: 16,\n    fontWeight: 700,\n    padding: \"6px 24px 6px 2px\",\n    borderBottom: \"unset\",\n  },\n  body: {\n    fontSize: 14,\n    borderBottom: \"unset\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(() => ({\n  root: {\n    fontSize: 14,\n    cursor: \"pointer\",\n    \"& th\": {\n      fontSize: 14,\n      whiteSpace: \"nowrap\",\n      padding: \"2px 16px 2px 2px\",\n      lineHeight: \"16px\",\n    },\n    \"& td\": {\n      fontSize: 14,\n      whiteSpace: \"nowrap\",\n      padding: \"2px 16px 2px 2px\",\n      lineHeight: \"16px\",\n    },\n  },\n}))(TableRow);\n\nconst Labs = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { lastVisitedPatient, user } = useAuth();\n  const [labDocuments, setLabDocuments] = useState([]);\n  const [tabValue, setTabValue] = useState(0);\n  const [tableData, setTableData] = useState([]);\n  const [isLabModalOpen, setIsLabModalOpen] = useState(false);\n  const [documentName, setDocumentName] = useState(\"\");\n\n  const fetchLabDocuments = useCallback(() => {\n    PatientPortalService.getLabDocuments(lastVisitedPatient).then((res) => {\n      setLabDocuments(res.data);\n    });\n  }, [lastVisitedPatient]);\n\n  const sortDocumentByStatus = useCallback((selectedTab) => {\n    if (selectedTab === 0) { // (All)\n      const allData = labDocuments.filter((x) => x.status !== \"D\");\n      setTableData([...allData]);\n    } else if (selectedTab === 1) { // (Labs)\n      const labsData = labDocuments.filter((x) => x.type === \"L\" && x.status !== \"D\");\n      setTableData([...labsData]);\n    } else if (selectedTab === 2) { // (Imaging)\n      const imagingData = labDocuments.filter((x) => x.type === \"I\" && x.status !== \"D\");\n      setTableData([...imagingData]);\n    } else if (selectedTab === 3) { // (Un-Categorized)\n      const uncategorizedData = labDocuments.filter((x) => (x.type !== \"L\" && x.type !== \"M\"\n        && x.type !== \"I\" && x.status !== \"D\"));\n      setTableData([...uncategorizedData]);\n    } else if (selectedTab === 4) { // (Misc)\n      const uncategorizedData = labDocuments.filter((x) => (x.type === \"M\" && x.status !== \"D\"));\n      setTableData([...uncategorizedData]);\n    }\n  }, [labDocuments]);\n\n  useEffect(() => {\n    fetchLabDocuments();\n  }, [fetchLabDocuments]);\n\n  useDidMountEffect(() => {\n    // This will only be called when 'labDocuments' changes, not on initial render\n    sortDocumentByStatus(tabValue);\n  }, [labDocuments]);\n\n  const handleTabChange = (newValue) => {\n    if (newValue !== tabValue) {\n      sortDocumentByStatus(newValue);\n    }\n    setTabValue(newValue);\n  };\n\n  const handleLabsFile = (e) => {\n    const { files } = e.target;\n    if (!!files && files.length) {\n      const fd = new FormData();\n      fd.append(\"file\", files[0]);\n\n      PatientPortalService.createLabDocuments(lastVisitedPatient, fd)\n        .then((response) => {\n          enqueueSnackbar(`${response.message}`, { variant: \"success\" });\n          fetchLabDocuments();\n        })\n        .catch((error) => {\n          const resMessage = (error.response\n            && error.response.data\n            && error.response.data.message)\n            || error.message\n            || error.toString();\n          enqueueSnackbar(`${resMessage}`, { variant: \"error\" });\n        });\n    }\n  };\n\n  const handleDocumentClick = (doc) => {\n    setDocumentName(doc.filename);\n    setIsLabModalOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n\n      <Grid\n        item\n        sm={6}\n        xs={12}\n      >\n        <Grid\n          container\n          justify=\"flex-start\"\n        >\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            Documents / Lab Results\n          </Typography>\n          <Button\n            component=\"label\"\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.newButton}\n          >\n            New\n            <input\n              type=\"file\"\n              id=\"file\"\n              accept=\".pdf, .txt, .doc, .docx, image/*\"\n              hidden\n              onChange={(e) => handleLabsFile(e)}\n            />\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        <Typography\n          className={tabValue === 0 ? classes.tabSelected : classes.tab}\n          onClick={() => handleTabChange(0)}\n          component=\"span\"\n        >\n          All\n        </Typography>\n        <Typography\n          className={tabValue === 1 ? classes.tabSelected : classes.tab}\n          onClick={() => handleTabChange(1)}\n          component=\"span\"\n        >\n          Labs\n        </Typography>\n        <Typography\n          className={tabValue === 2 ? classes.tabSelected : classes.tab}\n          onClick={() => handleTabChange(2)}\n          component=\"span\"\n        >\n          Imaging\n        </Typography>\n        <Typography\n          className={tabValue === 4 ? classes.tabSelected : classes.tab}\n          onClick={() => handleTabChange(4)}\n          component=\"span\"\n        >\n          Misc\n        </Typography>\n        <Typography\n          className={tabValue === 3 ? classes.tabSelected : classes.tab}\n          onClick={() => handleTabChange(3)}\n          component=\"span\"\n        >\n          Uncategorized\n        </Typography>\n      </Grid>\n\n      <Grid item sm={4} xs={12}>\n        {Boolean(tableData.length) && (\n          <TableContainer className={classes.tableContainer}>\n            <Table size=\"small\" className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Created</StyledTableCell>\n                  <StyledTableCell>Filename</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {tableData.map((item) => (\n                  <StyledTableRow\n                    key={`${item.created}_${item.filename}`}\n                    onClick={() => handleDocumentClick(item)}\n                  >\n                    <StyledTableCell component=\"th\" scope=\"item\">\n                      {moment(item.created).format(\"MMM D YYYY\")}\n                    </StyledTableCell>\n                    <StyledTableCell>\n                      {item.filename}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n\n      </Grid>\n      {isLabModalOpen\n        && (\n          <Dialog\n            open={isLabModalOpen}\n            cancelForm={() => setIsLabModalOpen(false)}\n            title=\"Lab Document\"\n            message={(\n              <PatientLabDocumentViewer\n                documentName={documentName}\n                patientId={user?.client_id}\n              />\n            )}\n            hideActions\n            size=\"sm\"\n            fullHeight\n            transitionComponent={Transition}\n          />\n\n        )}\n    </div>\n  );\n};\n\nexport default Labs;\n","import React from \"react\";\n\nimport { IconButton, Button, Typography } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n  titleContainer: {\n    textAlign: \"center\",\n    borderBottom: \"1px solid #ddd\",\n    minHeight: 53,\n  },\n  content: {\n    padding: \"1rem 2rem\",\n    maxHeight: \"86vh\",\n  },\n  fullScreenContent: {\n    maxHeight: \"unset\",\n  },\n  fullHeight: {\n    minHeight: \"86vh\",\n  },\n  buttonClose: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  save: {\n    background: theme.palette.success,\n    minWidth: 100,\n  },\n  cancel: {\n    background: theme.palette.error,\n    minWidth: 100,\n  },\n}));\n\nconst DialogForm = ({\n  title,\n  open,\n  message,\n  applyForm,\n  cancelForm,\n  hideActions,\n  applyButtonText,\n  cancelButtonText,\n  size,\n  fullScreen,\n  fullHeight,\n  transitionComponent,\n}) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Dialog\n        fullScreen={Boolean(fullScreen)}\n        open={open}\n        onClose={cancelForm}\n        fullWidth\n        maxWidth={size}\n        TransitionComponent={transitionComponent}\n      // disableBackdropClick //enable esc button close and backdrop click\n      >\n        {cancelForm && (\n          <IconButton\n            className={classes.buttonClose}\n            onClick={cancelForm}\n            aria-label=\"close\"\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        )}\n        <DialogTitle disableTypography className={classes.titleContainer} id=\"form-dialog-title\">\n          <Typography variant=\"h5\">{title}</Typography>\n        </DialogTitle>\n        <DialogContent\n          className={clsx({\n            [classes.content]: true, // always apply\n            [classes.fullHeight]: fullHeight, // only when fullHeight === true\n            [classes.fullScreenContent]: fullScreen, // only when fullScreen === true\n          })}\n        >\n          {message}\n        </DialogContent>\n        {hideActions ? null : (\n          <>\n            <DialogActions align=\"center\">\n              {applyForm && (\n                <Button\n                  className={classes.save}\n                  onClick={applyForm}\n                  color=\"primary\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  {applyButtonText}\n                </Button>\n              )}\n              {cancelForm && (\n                <Button\n                  className={classes.cancel}\n                  onClick={cancelForm}\n                  color=\"secondary\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  {cancelButtonText}\n                </Button>\n              )}\n            </DialogActions>\n          </>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nDialogForm.defaultProps = {\n  title: \"\",\n  message: null,\n  applyForm: () => { },\n  cancelForm: () => { },\n  hideActions: true,\n  applyButtonText: \"Continue\",\n  cancelButtonText: \"Cancel\",\n  size: \"lg\",\n  fullScreen: false,\n  fullHeight: false,\n  transitionComponent: undefined,\n};\n\nDialogForm.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.node,\n  applyForm: PropTypes.func,\n  cancelForm: PropTypes.func,\n  hideActions: PropTypes.bool,\n  applyButtonText: PropTypes.string,\n  cancelButtonText: PropTypes.string,\n  size: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  fullHeight: PropTypes.bool,\n  transitionComponent: PropTypes.node,\n};\n\nexport default DialogForm;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass PatientPortalService {\n  // patient profile\n  getProfile() {\n    return axios.get(`${API_BASE}/client-portal/patient`, { headers: authHeader() }).then((res) => res.data);\n  }\n\n  updateProfile(payload, patientId) {\n    return axios.put(`${API_BASE}/client-portal/patient/${patientId}`, payload, {\n      headers: authHeader(),\n    });\n  }\n\n  // appointments\n  getPractitioners(patient) {\n    let url = `${API_BASE}/client-portal/practitioners`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioners/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getPractitionerDates(patient) {\n    let url = `${API_BASE}/client-portal/practitioner-dates`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/practitioner-dates/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBookedAppointments(patient, params) {\n    let url = `${API_BASE}/client-portal/booked-appointments`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/booked-appointments?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n        params,\n      })\n      .then((res) => res.data);\n  }\n\n  getAppointmentTypesByPractitionerId(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment-types`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  bookAppointment(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/appointment`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updateAppointment(payload, appointmentId) {\n    return axios\n      .put(`${API_BASE}/client-portal/appointment/${appointmentId}`, payload, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // encounters\n  getEncounters(patient) {\n    let url = `${API_BASE}/client-portal/encounters`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/encounters/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // lab/documents\n  getLabDocuments(patient) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createLabDocuments(patient, reqBody) {\n    let url = `${API_BASE}/client-portal/labs`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/labs/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .post(url, reqBody, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Billings\n  getBillings(patient) {\n    let url = `${API_BASE}/client-portal/billings`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/billings/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createBilling(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/billings`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getBalance(patient) {\n    let url = `${API_BASE}/client-portal/balance`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/balance/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Payment Methods\n  getPaymentMethods(patient) {\n    let url = `${API_BASE}/patient-portal/payment-methods`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/patient-portal/payment-methods/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Pharmacies\n  getPharmacies() {\n    return axios\n      .get(`${API_BASE}/client-portal/pharmacy`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  searchPharmacies(data) {\n    return axios\n      .post(`${API_BASE}/client-portal/pharmacy/search`, data, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  updatePharmacy(pharmacyId, payload) {\n    return axios.put(`${API_BASE}/client-portal/pharmacy/${pharmacyId}`, payload, {\n      headers: authHeader(),\n    })\n      .then((res) => res.data);\n  }\n\n  // Requisitions\n  getRequisitions(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Lab billing\n  getLabBilling(patient) {\n    let url = `${API_BASE}/client-portal/lab_billing`;\n    if (patient) {\n        // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_billing/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n\n  // test list\n  getTestList(patient) {\n    let url = `${API_BASE}/client-portal/lab_requisitions/test-list`;\n    if (patient) {\n      // eslint-disable-next-line max-len\n      url = `${API_BASE}/client-portal/lab_requisitions/?patient_id=${patient.id}&client_id=${patient.client_id}`;\n    }\n    return axios\n      .get(url, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  async getTestProfileInfo(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/test-profile-info?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n    return res.data;\n  }\n\n  async getProfileTests(testId) {\n    const url = `${API_BASE}/client-portal/lab_requisitions/profile-tests?testId=${testId}`;\n\n    const res = await axios.get(url, {\n      headers: authHeader(),\n    });\n\n    return res.data;\n  }\n\n  // Handouts\n  getHandouts() {\n    return axios\n      .get(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  createHandouts() {\n    return axios\n      .post(`${API_BASE}/client-portal/handouts`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  deleteHandout(id) {\n    return axios\n      .delete(`${API_BASE}/client-portal/handouts/${id}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  // Prescriptions\n  getPrescriptions() {\n    return axios\n      .get(`${API_BASE}/client-portal/prescription`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n}\n\nexport default new PatientPortalService();\n","import { useEffect, useRef } from \"react\";\n\nconst useDidMountEffect = (func, deps) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) func();\n    else didMount.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidMountEffect;\n"],"sourceRoot":""}