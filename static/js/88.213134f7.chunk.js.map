{"version":3,"sources":["services/setup/forms.service.js","screens/Client/Setup/Forms/Forms.js","components/common/StyledTable.js"],"names":["axios","get","API_BASE","headers","authHeader","data","post","id","delete","useStyles","makeStyles","theme","root","flexGrow","padding","w100","minWidth","mb2","marginBottom","spacing","table","Forms","classes","useState","forms","setForms","fetchForms","useCallback","FormsService","getForms","then","res","useEffect","className","Grid","item","md","xs","container","justify","Typography","component","variant","color","title","Button","type","accept","hidden","gutterBottom","TableContainer","Table","size","TableHead","TableRow","StyledTable","TableBody","length","map","index","TableCell","notes","Switch","checked","active","onChange","formsClone","statusChangeHandler","name","created","moment","format","created_by","updated","updated_by","colSpan","align","StyledTableCellLg","withStyles","head","backgroundColor","palette","grey","fontSize","fontWeight","body","StyledTableCellSm","whiteSpace","borderBottom","background","StyledTableRowSm","lineHeight","action","hover","StyledTableRowLg","height"],"mappings":"+VAyBe,M,wFAnBb,WACE,OAAOA,IAAMC,IAAN,UAAaC,IAAb,WAAgC,CACrCC,QAASC,kB,wBAIb,SAAWC,GACT,OAAOL,IAAMM,KAAN,UAAcJ,IAAd,WAAiCG,EAAM,CAC5CF,QAASC,kB,wBAIb,SAAWG,GACT,OAAOP,IAAMQ,OAAN,UAAgBN,IAAhB,kBAAkCK,GAAM,CAC7CJ,QAASC,oB,aCCTK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,QAAS,YAEXC,KAAM,CACJC,SAAU,KAEZC,IAAK,CACHC,aAAcP,EAAMQ,QAAQ,IAE9BC,MAAO,CACL,WAAY,CACVN,QAAS,EACTE,SAAU,SAuIDK,EAlID,WACZ,IAAMC,EAAUb,IADE,EAEQc,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,KAIZC,EAAaC,uBAAY,WAC7BC,EAAaC,WAAWC,MAAK,SAACC,GAC5BN,EAASM,EAAI1B,WAEd,IAEH2B,qBAAU,WACRN,MACC,CAACA,IAQJ,OACE,sBAAKO,UAAWX,EAAQV,KAAxB,UACE,cAACsB,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,GACJJ,UAAWX,EAAQL,IAJrB,SAME,eAACiB,EAAA,EAAD,CACEI,WAAS,EACTC,QAAQ,gBAFV,UAIE,cAACC,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACRC,MAAM,cACNV,UAAWX,EAAQsB,MAJrB,mBAQA,eAACC,EAAA,EAAD,CACEH,QAAQ,WACRD,UAAU,QACVR,UAAWX,EAAQP,KAHrB,gBAME,uBACE+B,KAAK,OACLvC,GAAG,OACHwC,OAAO,mCACPC,QAAM,YAOd,cAACR,EAAA,EAAD,CACEE,QAAQ,KACRC,MAAM,cACNV,UAAWX,EAAQsB,MACnBK,cAAY,EAJd,gGASA,cAACf,EAAA,EAAD,CAAMI,WAAS,EAAf,SACE,cAACJ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAACa,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAQnB,UAAWX,EAAQF,MAAvC,UACE,cAACiC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,8BAGJ,cAACC,EAAA,EAAD,UACKhC,GAASA,EAAMiC,OACdjC,EAAMkC,KAAI,SAACvB,EAAMwB,GAAP,OACV,eAACJ,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UAAYzB,EAAKS,QACjB,cAACgB,EAAA,EAAD,UAAYzB,EAAK0B,QACjB,cAACD,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CACEV,KAAK,QACLW,QAAS5B,EAAK6B,SAAU,EACxBC,SAAU,kBA9EN,SAACN,GAC3B,IAAMO,EAAU,YAAO1C,GACvB0C,EAAWP,GAAOK,QAAUE,EAAWP,GAAOK,OAC9CvC,EAAS,YAAIyC,IA2EyBC,CAAoBR,IACpCS,KAAK,SACLzB,MAAM,cAGV,cAACiB,EAAA,EAAD,UACE,cAACf,EAAA,EAAD,CAAQH,QAAQ,OAAhB,oBAIF,cAACkB,EAAA,EAAD,UACGzB,EAAKkC,QAAUC,IAAOnC,EAAKkC,SAASE,OAAO,cAAgB,KAE9D,cAACX,EAAA,EAAD,UAAYzB,EAAKqC,aACjB,cAACZ,EAAA,EAAD,UACGzB,EAAKsC,QAAUH,IAAOnC,EAAKsC,SAASF,OAAO,cAAgB,KAE9D,cAACX,EAAA,EAAD,UAAYzB,EAAKuC,eAxBIvC,EAAKS,UA4B5B,cAACW,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CAAWe,QAAS,EAApB,SACE,cAACnC,EAAA,EAAD,CAAYoC,MAAM,SAASlC,QAAQ,QAAnC,qD,iCC3JxB,qKAMamC,EAAoBC,aAAW,SAACnE,GAAD,MAAY,CACtDoE,KAAM,CACJC,gBAAiBrE,EAAMsE,QAAQC,KAC/BvC,MAAOhC,EAAMsE,QAAQC,KACrBC,SAAU,OACVC,WAAY,KAEdC,KAAM,CACJF,SAAU,OARmBL,CAU7BlB,KAES0B,EAAoBR,aAAW,iBAAO,CACjDC,KAAM,CACJQ,WAAY,SACZJ,SAAU,OACVC,WAAY,IACZtE,QAAS,mBACT0E,aAAc,QACdC,WAAY,SAEdJ,KAAM,CACJF,SAAU,GACVK,aAAc,YAXeV,CAa7BlB,KAES8B,EAAmBZ,aAAW,SAACnE,GAAD,MAAY,CACrDC,KAAM,CACJ,MAAO,CACLuE,SAAU,GACVQ,WAAY,QAEdR,SAAU,GACV,qBAAsB,CACpBH,gBAAiBrE,EAAMsE,QAAQW,OAAOC,OAExC,OAAQ,CACNV,SAAU,GACVI,WAAY,SACZzE,QAAS,oBAEX,OAAQ,CACNqE,SAAU,GACVI,WAAY,SACZzE,QAAS,wBAlBiBgE,CAqB5BxB,KAESwC,EAAmBhB,aAAW,SAACnE,GAAD,MAAY,CACrDC,KAAM,CACJuE,SAAU,GACV,qBAAsB,CACpBH,gBAAiBrE,EAAMsE,QAAQW,OAAOC,OAExC,OAAQ,CACNV,SAAU,IAEZ,OAAQ,CACNA,SAAU,GACVY,OAAQ,YAXkBjB,CAc5BxB","file":"static/js/88.213134f7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass FormsService {\n  getForms() {\n    return axios.get(`${API_BASE}/forms/`, {\n      headers: authHeader(),\n    });\n  }\n\n  createForm(data) {\n    return axios.post(`${API_BASE}/forms/`, data, {\n      headers: authHeader(),\n    });\n  }\n\n  deleteForm(id) {\n    return axios.delete(`${API_BASE}/forms/${id}`, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new FormsService();\n","import React, { useState, useEffect, useCallback } from \"react\";\n\n\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Switch,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\n\nimport { StyledTableCellLg, StyledTableRowLg } from \"../../../../components/common/StyledTable\";\nimport FormsService from \"../../../../services/setup/forms.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  w100: {\n    minWidth: 100,\n  },\n  mb2: {\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    \"& button\": {\n      padding: 6,\n      minWidth: 40,\n    },\n  },\n}));\n\nconst Forms = () => {\n  const classes = useStyles();\n  const [forms, setForms] = useState([]);\n\n  const fetchForms = useCallback(() => {\n    FormsService.getForms().then((res) => {\n      setForms(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchForms();\n  }, [fetchForms]);\n\n  const statusChangeHandler = (index) => {\n    const formsClone = [...forms];\n    formsClone[index].active = !formsClone[index].active;\n    setForms([...formsClone]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        item\n        md={4}\n        xs={12}\n        className={classes.mb2}\n      >\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            Forms\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            component=\"label\"\n            className={classes.w100}\n          >\n            Add\n            <input\n              type=\"file\"\n              id=\"file\"\n              accept=\".pdf, .txt, .doc, .docx, image/*\"\n              hidden\n            // onChange={(e) => handleLabsFile(e)}\n            />\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Typography\n        variant=\"h5\"\n        color=\"textPrimary\"\n        className={classes.title}\n        gutterBottom\n      >\n        To have new patients fill out these forms after registration, turn Activate to On.\n      </Typography>\n\n      <Grid container>\n        <Grid item md={8} xs={12}>\n          <TableContainer>\n            <Table size=\"small\" className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <StyledTableCellLg>Name</StyledTableCellLg>\n                  <StyledTableCellLg>Notes</StyledTableCellLg>\n                  <StyledTableCellLg>Active</StyledTableCellLg>\n                  <StyledTableCellLg>Actions</StyledTableCellLg>\n                  <StyledTableCellLg>Created</StyledTableCellLg>\n                  <StyledTableCellLg>Created By</StyledTableCellLg>\n                  <StyledTableCellLg>Updated</StyledTableCellLg>\n                  <StyledTableCellLg>Updated By</StyledTableCellLg>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {!!forms && forms.length\n                  ? forms.map((item, index) => (\n                    <StyledTableRowLg key={item.title}>\n                      <TableCell>{item.title}</TableCell>\n                      <TableCell>{item.notes}</TableCell>\n                      <TableCell>\n                        <Switch\n                          size=\"small\"\n                          checked={item.active || false}\n                          onChange={() => statusChangeHandler(index)}\n                          name=\"active\"\n                          color=\"primary\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Button variant=\"text\">\n                          Edit\n                        </Button>\n                      </TableCell>\n                      <TableCell>\n                        {item.created ? moment(item.created).format(\"MMM D YYYY\") : \"\"}\n                      </TableCell>\n                      <TableCell>{item.created_by}</TableCell>\n                      <TableCell>\n                        {item.updated ? moment(item.updated).format(\"MMM D YYYY\") : \"\"}\n                      </TableCell>\n                      <TableCell>{item.updated_by}</TableCell>\n                    </StyledTableRowLg>\n                  ))\n                  : (\n                    <StyledTableRowLg>\n                      <TableCell colSpan={8}>\n                        <Typography align=\"center\" variant=\"body1\">\n                          No Records Found...\n                        </Typography>\n                      </TableCell>\n                    </StyledTableRowLg>\n                  )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Forms;\n","import {\n  TableRow,\n  TableCell,\n  withStyles,\n} from \"@material-ui/core\";\n\nexport const StyledTableCellLg = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport const StyledTableCellSm = withStyles(() => ({\n  head: {\n    whiteSpace: \"nowrap\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    padding: \"6px 24px 6px 2px\",\n    borderBottom: \"unset\",\n    background: \"white\",\n  },\n  body: {\n    fontSize: 12,\n    borderBottom: \"unset\",\n  },\n}))(TableCell);\n\nexport const StyledTableRowSm = withStyles((theme) => ({\n  root: {\n    \"& p\": {\n      fontSize: 12,\n      lineHeight: \"21px\",\n    },\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n      whiteSpace: \"nowrap\",\n      padding: \"2px 16px 2px 2px\",\n    },\n    \"& td\": {\n      fontSize: 12,\n      whiteSpace: \"nowrap\",\n      padding: \"2px 16px 2px 2px\",\n    },\n  },\n}))(TableRow);\n\nexport const StyledTableRowLg = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n      height: \"50px\",\n    },\n  },\n}))(TableRow);\n"],"sourceRoot":""}