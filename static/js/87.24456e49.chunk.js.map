{"version":3,"sources":["screens/corporate-portal/Auth/Login.js","components/common/Error.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","Logo","backgroundColor","avatar","margin","color","palette","text","secondary","lockIcon","fontSize","pageTitle","marginBottom","form","width","withErrors","opacity","submit","meta","forgotPass","textAlign","PatientLogin","classes","enqueueSnackbar","useSnackbar","corporateLogin","useAuth","React","useState","email","setEmail","password","setPassword","errors","setErrors","onFormSubmit","a","localStorage","username","trim","console","error","variant","msg","message","useEffect","component","maxWidth","className","clsx","noValidate","value","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","target","type","disabled","onClick","container","item","xs","href","Error","children","map","index","severity","defaultProps"],"mappings":"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","file":"static/js/87.24456e49.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport clsx from \"clsx\";\nimport { useSnackbar } from \"notistack\";\n\nimport Error from \"../../../components/common/Error\";\nimport useAuth from \"../../../hooks/useAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  Logo: {\n    backgroundColor: \"grey\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent\",\n    color: theme.palette.text.secondary,\n  },\n  lockIcon: {\n    fontSize: \"40px\",\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  withErrors: {\n    opacity: 0.9,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  meta: {\n    \"& a\": {\n      color: theme.palette.text.secondary,\n      fontSize: \"12px\",\n    },\n  },\n  forgotPass: {\n    textAlign: \"right\",\n  },\n}));\n\nconst PatientLogin = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { corporateLogin } = useAuth();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errors, setErrors] = React.useState([]);\n\n  const onFormSubmit = async () => {\n    if (email !== \"\") {\n      localStorage.username = email;\n      localStorage.password = password;\n    }\n\n    try {\n      await corporateLogin(email.trim(), password.trim()); // Call AuthProvider login\n      // enqueueSnackbar(\"Successfully logged in!\", {\n      //  variant: \"success\",\n      // });\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar(\"Unable to login\", {\n        variant: \"error\",\n      });\n      setErrors([\n        {\n          msg: error.message,\n        },\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.username !== \"\") {\n      setEmail(localStorage.username);\n      setPassword(localStorage.password);\n    }\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon className={classes.lockIcon} />\n        </Avatar>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          className={classes.pageTitle}\n        >\n          Corporate Sign in\n        </Typography>\n\n        <Error errors={errors} />\n\n        <form\n          className={clsx({\n            [classes.form]: true, // always apply\n          })}\n          noValidate\n        >\n          <TextField\n            value={email}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <TextField\n            value={password}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <Button\n            disabled={!email || !password}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={(event) => onFormSubmit(event)}\n          >\n            Sign In\n          </Button>\n        </form>\n        <Grid container className={classes.meta}>\n          <Grid item xs={6} />\n          <Grid item xs={6} className={classes.forgotPass}>\n            <Link href=\"/corp/forgot-password\" variant=\"body2\">\n              Forgot your password? Reset.\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default PatientLogin;\n","import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ errors, variant, children }) => (\n  <>\n    {errors\n      && errors.map((error, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Alert severity=\"error\" variant={variant} key={index}>\n          {error.msg}\n          {children}\n        </Alert>\n      ))}\n  </>\n);\n\nError.defaultProps = {\n  errors: null,\n  children: null,\n  variant: \"outlined\",\n};\n\nError.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Error;\n"],"sourceRoot":""}