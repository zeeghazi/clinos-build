{"version":3,"sources":["screens/Agreement.js","../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js"],"names":["useStyles","makeStyles","theme","root","paddingTop","spacing","minHeight","pageTitle","marginBottom","Agreement","classes","useState","agreement","setAgreement","useEffect","API","then","res","data","maxWidth","className","component","variant","color","contract","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","_extends","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","withStyles","fontWeight","fontWeightBold","margin","name","props","_props$children","children","React"],"mappings":"mLASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CAAEC,WAAYF,EAAMG,QAAQ,GAAIC,UAAW,KACjDC,UAAW,CACTC,aAAcN,EAAMG,QAAQ,QA+BjBI,UA5BG,WAChB,IAAMC,EAAUV,IADM,EAEYW,mBAAS,IAFrB,mBAEfC,EAFe,KAEJC,EAFI,KAUtB,OANAC,qBAAU,WACRC,MAA2BC,MAAK,SAACC,GAC/BJ,EAAaI,EAAIC,WAElB,IAGD,qCACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAWC,SAAS,KAAKC,UAAWV,EAAQP,KAA5C,UACE,cAAC,IAAD,CACEkB,UAAU,KACVC,QAAQ,KACRC,MAAM,cACNH,UAAWV,EAAQH,UAJrB,8BAQA,4BAAIK,EAAUY,mB,iCCrCtB,gCAKWC,EAAO,CAChBC,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,cAEFC,EAAO,SAAc3B,GAC9B,OAAO4B,YAAS,CACdP,MAAOrB,EAAM6B,QAAQC,KAAKC,SACzB/B,EAAMgC,WAAWC,MAAO,CACzBC,gBAAiBlC,EAAM6B,QAAQM,WAAWC,QAC1C,eAAgB,CAEdF,gBAAiBlC,EAAM6B,QAAQQ,OAAOC,UA+D7BC,iBA3DK,SAAgBvC,GAClC,MAAO,CACL,UAAW,CACTuB,KAAMA,EACN,yBAA0B,CACxBG,UAAW,WAEb,YAAa,CACXc,WAAYxC,EAAMgC,WAAWS,gBAE/Bd,KAAMC,YAAS,CACbc,OAAQ,GACPf,EAAK3B,GAAQ,CAGd,cAAe,CACbkC,gBAAiBlC,EAAM6B,QAAQM,WAAWC,eA2ClB,CAChCO,KAAM,kBADOJ,EAjCf,SAAqBK,GAEnB,IAAIC,EAAkBD,EAAME,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAInD,OAHcD,EAAMpC,QAGAuC,gBAAoBA,WAAgB,KAAMD","file":"static/js/90.ac2f9c4a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport * as API from \"../utils/API\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { paddingTop: theme.spacing(3), minHeight: 500 },\n  pageTitle: {\n    marginBottom: theme.spacing(1),\n  },\n}));\nconst Agreement = () => {\n  const classes = useStyles();\n  const [agreement, setAgreement] = useState(\"\");\n\n  useEffect(() => {\n    API.fetchClientAgreement().then((res) => {\n      setAgreement(res.data);\n    });\n  }, []);\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          color=\"textPrimary\"\n          className={classes.pageTitle}\n        >\n          Client Agreement\n        </Typography>\n        <p>{agreement.contract}</p>\n      </Container>\n    </>\n  );\n};\n\nexport default Agreement;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);"],"sourceRoot":""}