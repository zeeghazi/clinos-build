{"version":3,"sources":["screens/patient-portal/auth/ForgotPassword/ForgotPassword.js","../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","../node_modules/@material-ui/core/esm/Link/Link.js","components/common/Error.js","components/common/CountrySelect.js","components/common/RegionSelect.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","services/email.service.js","services/patient_portal/auth.service.js","static/expandForm.js","components/common/Dimmer.js","../../../src/DatePicker/DatePickerToolbar.tsx","../../../src/DatePicker/DatePicker.tsx","screens/patient-portal/auth/components/SignupForm.js","assets/img/NoClientLogo.png","screens/patient-portal/auth/components/Image.js","screens/patient-portal/auth/ForgotPassword/Success.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","color","palette","text","secondary","lockIcon","fontSize","pageTitle","marginBottom","Logo","textAlign","width","fontWeight","dateOfBirth","Error","form","withErrors","opacity","submit","meta","ForgotPassword","classes","enqueueSnackbar","useSnackbar","clientCode","useParams","React","useState","client","setClient","email","setEmail","lastname","setLastname","postal","setPostal","errors","setErrors","registrationLink","setRegistrationLink","isLoading","setIsLoading","Date","dob","handleDateChange","success","useSelector","state","common","shallowEqual","useEffect","AuthService","getClientCode","then","res","data","error","response","status","msg","message","Container","component","maxWidth","CssBaseline","className","lassName","src","process","client_id","alt","Avatar","Typography","variant","Link","href","Success","header","loginText","clsx","length","noValidate","onSubmit","e","preventDefault","passwordChangeRequest","patient","moment","format","user","sign_dt","email_confirm_dt","EmailService","resendEmailVerification","console","info","err","TextField","disabled","required","fullWidth","id","label","name","autoComplete","value","autoFocus","onChange","event","target","clearable","placeholder","date","inputVariant","Button","type","Grid","container","item","xs","Dimmer","isOpen","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","_extends","primary","typography","body2","background","default","white","withStyles","fontWeightBold","props","_props$children","children","ref","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","root","concat","capitalize","button","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","map","index","severity","defaultProps","CountryRegionMUISelectors","country","size","handleChange","outlined","select","CountryRegionData","option","getRegions","split","regionPair","RegionMUISelectors","region","createSvgIcon","d","defaultIconMapping","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","_ref","CloseIcon","Alert","action","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","Paper","square","elevation","IconButton","title","onClick","getColor","darken","lighten","getBackgroundColor","shape","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","marginLeft","paddingLeft","axios","post","API_BASE","userId","token","get","PatientAuthService","a","password","loginResponse","accessToken","localStorage","setItem","JSON","stringify","patientId","FormFields","basicInfo","baseType","options","addressDetails","contactInfo","emergencyInfo","insuranceInfo","medicalInfo","userNamePasswordDetails","backdrop","zIndex","drawer","open","toolbar","toolbarLandscape","dateLandscape","DatePickerToolbar","views","setOpenView","isLandscape","openView","utils","useUtils","isYearOnly","isYearOnlyView","isYearAndMonth","isYearAndMonthViews","React.createElement","selected","align","openTo","useOptions","getDefaultFormat","getFormatByViews","DatePicker","makePickerWithState","Input","DefaultToolbarComponent","KeyboardDatePicker","inputRow","sigCanvas","sigCanvasClear","top","sigCanvasSave","sigImage","backgroundSize","height","signupActions","SignupForm","onFormSubmit","BasicInfo","AddressDetails","ContactInfo","EmergencyInfo","InsuranceInfo","MedicalInfo","UserNamePasswordInfo","firstname","middlename","gender","address","address2","find","city","contactPreference","formFields","setFormFields","fieldErrors","setFieldErrors","handleInputChange","handleCountryRegion","identifier","patientErrors","filter","param","includes","getFieldError","fieldName","handleAjaxValidation","validate","updatedErrors","uniqueFieldErrors","_","uniqWith","isEqual","catch","formData","phone_home","phone_cell","phone_work","phone_other","phone_note","ssn","emergency_firstname","emergency_middlename","emergency_lastname","emergency_relationship","emergency_email","emergency_phone","insurance_name","insurance_group","insurance_member","insurance_phone","insurance_desc","primary_reason","admin_note","medical_note","referred_by","waist","weight","weigh","gutterBottom","md","MenuItem","i","Divider","lg","CountrySelect","helperText","RegionSelect","slice","multiline","rows","confirmPassword","validatePassword","justify","Image","onErrorImage","imageEl","useRef","onError","current","defaultErrorImage","lineHeight","code"],"mappings":"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","file":"static/js/37.5ba44eee.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport Dimmer from \"../../../../components/common/Dimmer\";\nimport Error from \"../../../../components/common/Error\";\nimport EmailService from \"../../../../services/email.service\";\nimport AuthService from \"../../../../services/patient_portal/auth.service\";\nimport { Image } from \"../components\";\nimport Success from \"./Success\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent\",\n    color: theme.palette.text.secondary,\n  },\n  lockIcon: {\n    fontSize: \"40px\",\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  Logo: {\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n    \"& img\": {\n      width: \"100%\",\n    },\n    \"& p\": {\n      fontSize: \"16px\",\n      \"& span\": {\n        fontWeight: 600,\n      },\n    },\n  },\n  dateOfBirth: {\n    width: \"100%\",\n  },\n  Error: {\n    marginTop: theme.spacing(2),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  withErrors: {\n    opacity: 0.9,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  meta: {\n    textAlign: \"right\",\n    \"& a\": {\n      color: theme.palette.text.secondary,\n    },\n  },\n}));\n\nconst ForgotPassword = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { clientCode } = useParams();\n  const [client, setClient] = React.useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [postal, setPostal] = useState(\"\");\n  const [errors, setErrors] = React.useState([]);\n  const [registrationLink, setRegistrationLink] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [dob, handleDateChange] = useState(new Date());\n  const success = useSelector((state) => state.common.success, shallowEqual);\n\n\n  useEffect(() => {\n    AuthService.getClientCode(clientCode).then(\n      (res) => {\n        setClient(res.data[0]);\n      },\n      (error) => {\n        if (!error.response) {\n          return;\n        }\n        const { data, status } = error.response;\n\n        if (status === 400) {\n          setErrors([\n            {\n              msg: data.message,\n            },\n          ]);\n        } else {\n          setErrors([]);\n        }\n      },\n    );\n  }, [clientCode]);\n\n\n  const sendPasswordResetEmail = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    AuthService.passwordChangeRequest(email, {\n      patient: {\n        dob: moment(dob).format(\"YYYY-MM-DD\"),\n        lastname,\n        postal,\n      },\n    }).then(\n      (response) => {\n        setIsLoading(false);\n        enqueueSnackbar(`${email} ${response.data.message}`, {\n          variant: \"success\",\n        });\n        setErrors([]);\n      },\n      (error) => {\n        setIsLoading(false);\n        if (error.response) {\n          const { data, status } = error.response;\n          if (status === 400) {\n            setErrors(data.message);\n          } else {\n            setErrors([]);\n          }\n          if (data && data.user && data.user.sign_dt === null) {\n            setRegistrationLink(true);\n          }\n\n          if (data && data.user && data.user.email_confirm_dt === null) {\n            setRegistrationLink(false);\n            // Send email verification link\n            EmailService.resendEmailVerification(error.response.data.user).then(\n              (response) => {\n                console.info(\n                  \"resendEmailVerification response\",\n                  response.response,\n                );\n              },\n              (err) => {\n                console.error(\n                  \"resendEmailVerification err.response\",\n                  err.response,\n                );\n              },\n            );\n          }\n        }\n      },\n    );\n    setEmail(\"\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <div className={classes.Logo}>\n          <Image\n            lassName=\"clientLogo\"\n            src={`${process.env.REACT_APP_API_URL}static/client/c${client?.client_id}_logo.png`}\n            alt=\"Client Logo\"\n          />\n        </div>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon className={classes.lockIcon} />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h2\" className={classes.pageTitle}>\n          Patient Forgot password\n        </Typography>\n        <Error errors={errors} variant=\"filled\">\n          {registrationLink && (\n            <Link href={`/signup/${clientCode}`}> Go to user registration</Link>\n          )}\n        </Error>\n        {success && (\n          <Success\n            header=\"If that account in our system then we have sent an email with instructions\n              to reset your password!\"\n            loginText=\"Sign back in\"\n            client={client}\n          />\n        )}\n        {!success && (\n          <>\n            <p>\n              It happens to the best of us. Enter your email and we&apos;ll send you\n              reset instructions.\n            </p>\n            <form\n              className={clsx({\n                [classes.form]: true, // always apply\n                [classes.withErrors]: errors.length > 0, // only when isLoading === true\n              })}\n              noValidate\n              onSubmit={sendPasswordResetEmail}\n            >\n              <TextField\n                disabled={errors.length > 0}\n                variant=\"outlined\"\n                margin=\"dense\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                autoFocus\n                onChange={(event) => setEmail(event.target.value)}\n              />\n              <KeyboardDatePicker\n                disabled={errors.length > 0}\n                className={classes.dateOfBirth}\n                margin=\"dense\"\n                clearable\n                value={dob}\n                placeholder=\"2018/10/10\"\n                onChange={(date) => handleDateChange(date)}\n                format=\"yyyy-MM-dd\"\n                inputVariant=\"outlined\"\n              />\n              <TextField\n                disabled={errors.length > 0}\n                variant=\"outlined\"\n                margin=\"dense\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last name\"\n                name=\"lastname\"\n                autoComplete=\"lastname\"\n                value={lastname}\n                autoFocus\n                onChange={(event) => setLastname(event.target.value)}\n              />\n              <TextField\n                disabled={errors.length > 0}\n                variant=\"outlined\"\n                margin=\"dense\"\n                required\n                fullWidth\n                id=\"zipcode\"\n                label=\"Zipcode\"\n                name=\"zipcode\"\n                autoComplete=\"zipcode\"\n                value={postal}\n                autoFocus\n                onChange={(event) => setPostal(event.target.value)}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                disabled={!email}\n              >\n                Reset\n              </Button>\n              <Grid container className={classes.meta}>\n                <Grid item xs>\n                  <Link href={`/login/${clientCode}`} variant=\"body2\">\n                    Already have an account? Sign in.\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </>\n        )}\n      </div>\n      <Dimmer isOpen={isLoading} />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ errors, variant, children }) => (\n  <>\n    {errors\n      && errors.map((error, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Alert severity=\"error\" variant={variant} key={index}>\n          {error.msg}\n          {children}\n        </Alert>\n      ))}\n  </>\n);\n\nError.defaultProps = {\n  errors: null,\n  children: null,\n  variant: \"outlined\",\n};\n\nError.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Error;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n\nfunction CountryRegionMUISelectors(props) {\n  const {\n    country, size, handleChange, outlined, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"country\"\n      label=\"Country\"\n      value={country}\n      select\n      onChange={(e) => handleChange(\"country\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {CountryRegionData.map((option) => (\n        <MenuItem key={option[0]} value={option}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nCountryRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  country: null,\n  outlined: true,\n  margin: \"none\",\n};\n\nCountryRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  handleChange: PropTypes.func.isRequired,\n  outlined: PropTypes.bool,\n  margin: PropTypes.string,\n};\n\nexport default CountryRegionMUISelectors;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst getRegions = (country) => {\n  if (!country) {\n    return [];\n  }\n  return country[2].split(\"|\").map((regionPair) => {\n    const [regionName = null, regionInShort] = regionPair.split(\"~\");\n    return [regionName, regionInShort];\n  });\n};\n\nfunction RegionMUISelectors(props) {\n  const {\n    size, label, region, handleChange, outlined, country, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"state\"\n      label={label}\n      value={region}\n      select\n      onChange={(e) => handleChange(\"region\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {getRegions(country).map((option) => (\n        <MenuItem key={option[0]} value={option[1]}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  outlined: true,\n  margin: \"none\",\n};\n\nRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  outlined: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  region: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]).isRequired,\n  margin: PropTypes.string,\n};\n\nexport default RegionMUISelectors;\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\n\nclass EmailService {\n  sendEmailVerification(user) {\n    return axios.post(`${API_BASE}/email/send/verification/`, user);\n  }\n\n  resendEmailVerification(user) {\n    return axios.post(`${API_BASE}/email/resend/verification/`, user);\n  }\n\n  emailVerify(userId, token) {\n    return axios.get(`${API_BASE}/email/confirmation/${userId}/${token}`);\n  }\n}\n\nexport default new EmailService();\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\n\nclass PatientAuthService {\n  async login(user) {\n    const loginResponse = await axios.post(`${API_BASE}/auth/patient/login`, {\n      client_id: user.client_id,\n      email: user.email,\n      password: user.password,\n    });\n    if (loginResponse.data) {\n      if (loginResponse.data.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.data));\n      }\n      return loginResponse.data;\n    }\n    return false;\n  }\n\n  getClientCode(clientCode) {\n    return axios\n      .get(`${API_BASE}/auth/patient/client/?c=${clientCode}`)\n      .then((res) => res.data);\n  }\n\n  validate(data) {\n    return axios.post(`${API_BASE}/auth/field/validate`, data);\n  }\n\n  register(patient) {\n    return axios.post(`${API_BASE}/auth/patient/signup`, patient);\n  }\n\n  passwordChangeRequest(email, data) {\n    return axios.post(`${API_BASE}/auth/patient/reset_password/${email}`, data);\n  }\n\n  resetPassword(patientId, token, password) {\n    return axios.post(`${API_BASE}/auth/patient/reset/${patientId}/${token}`, {\n      password,\n    });\n  }\n}\n\nexport default new PatientAuthService();\n","export const FormFields = {\n  basicInfo: [\n    {\n      name: \"firstname\",\n      id: \"firstname\",\n      label: \"First Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"middlename\",\n      id: \"middlename\",\n      label: \"Middle Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"lastname\",\n      id: \"lastname\",\n      label: \"Last Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"dob\",\n      id: \"dob\",\n      label: \"\",\n      baseType: \"input\",\n      type: \"date\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"ssn\",\n      id: \"ssn\",\n      label: \"Social Security\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"nickName\",\n      id: \"nickName\",\n      label: \"Nick Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"aboutUs\",\n      id: \"aboutUs\",\n      label: \"How did you hear about us?\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"gender\",\n      id: \"gender\",\n      label: \"Gender\",\n      baseType: \"select\",\n      type: null,\n      required: true,\n      options: [\n        {\n          label: \"\",\n          value: \"\",\n        },\n        {\n          label: \"Male\",\n          value: \"M\",\n        },\n        {\n          label: \"Female\",\n          value: \"F\",\n        },\n      ],\n    },\n  ],\n  addressDetails: [\n    {\n      name: \"address\",\n      id: \"address\",\n      label: \"Address\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"address2\",\n      id: \"address2\",\n      label: \"Address 2\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"city\",\n      id: \"city\",\n      label: \"City\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"postal\",\n      id: \"postal\",\n      label: \"Zip/Postal\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n  ],\n  contactInfo: [\n    {\n      name: \"phone_home\",\n      id: \"phone_home\",\n      label: \"Home Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"phone_cell\",\n      id: \"phone_cell\",\n      label: \"Cell Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"phone_work\",\n      id: \"phone_work\",\n      label: \"Work Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"email\",\n      id: \"email\",\n      label: \"Email\",\n      baseType: \"input\",\n      type: \"email\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"contactPreference\",\n      id: \"contactPreference\",\n      label: \"Contact Preference\",\n      baseType: \"select\",\n      type: null,\n      required: false,\n      options: [\n        {\n          label: \"Mobile Phone\",\n          value: \"mobile\",\n        },\n        {\n          label: \"Home Phone\",\n          value: \"home\",\n        },\n        {\n          label: \"Work Phone\",\n          value: \"work\",\n        },\n      ],\n    },\n  ],\n  emergencyInfo: [\n    {\n      name: \"emergency_firstname\",\n      id: \"emergency_firstname\",\n      label: \"First Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_middlename\",\n      id: \"emergency_middlename\",\n      label: \"Middle Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_lastname\",\n      id: \"emergency_lastname\",\n      label: \"Last Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_relationship\",\n      id: \"emergency_relationship\",\n      label: \"Relationship\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_email\",\n      id: \"emergencyemail\",\n      label: \"Email\",\n      baseType: \"input\",\n      type: \"email\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_phone\",\n      id: \"emergency_phone\",\n      label: \"Contact Number\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: false,\n    },\n  ],\n  insuranceInfo: [\n    {\n      name: \"insurance_name\",\n      id: \"insurance_name\",\n      label: \"Plan Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insurance_group\",\n      id: \"insurance_group\",\n      label: \"Group Number\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insurance_member\",\n      id: \"insurance_member\",\n      label: \"Member Id\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insuranceType\",\n      id: \"insuranceType\",\n      label: \"Insurance Type\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n  ],\n  medicalInfo: [\n    {\n      name: \"height\",\n      id: \"height\",\n      label: \"Height in (INCHES)\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"weight\",\n      id: \"weight\",\n      label: \"Weight in (POUNDS)\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"medical_note\",\n      id: \"medical_note\",\n      label: \"Reason For Consult\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n  ],\n  userNamePasswordDetails: [\n    {\n      name: \"password\",\n      id: \"password\",\n      label: \"Password\",\n      baseType: \"input\",\n      type: \"password\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"confirmPassword\",\n      id: \"confirmPassword\",\n      label: \"Confirm Password\",\n      baseType: \"input\",\n      type: \"password\",\n      options: [],\n      required: true,\n    },\n  ],\n};\n","import React from \"react\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\n// TODO:: Add local fetching indicator https://www.basefactor.com/react-how-to-display-a-loading-indicator-on-fetch-calls\nconst Dimmer = ({ isOpen }) => {\n  const classes = useStyles();\n  const handleClose = () => {\n  };\n\n  return (\n    <Backdrop className={classes.backdrop} open={isOpen} onClick={handleClose}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nDimmer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Dimmer;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport ToolbarButton from '../_shared/ToolbarButton';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ToolbarComponentProps } from '../Picker/Picker';\nimport { isYearAndMonthViews, isYearOnlyView } from '../_helpers/date-utils';\n\nexport const useStyles = makeStyles(\n  {\n    toolbar: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n    },\n    toolbarLandscape: {\n      padding: 16,\n    },\n    dateLandscape: {\n      marginRight: 16,\n    },\n  },\n  { name: 'MuiPickersDatePickerRoot' }\n);\n\nexport const DatePickerToolbar: React.FC<ToolbarComponentProps> = ({\n  date,\n  views,\n  setOpenView,\n  isLandscape,\n  openView,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const isYearOnly = React.useMemo(() => isYearOnlyView(views as any), [views]);\n  const isYearAndMonth = React.useMemo(() => isYearAndMonthViews(views as any), [views]);\n\n  return (\n    <PickerToolbar\n      isLandscape={isLandscape}\n      className={clsx({\n        [classes.toolbar]: !isYearOnly,\n        [classes.toolbarLandscape]: isLandscape,\n      })}\n    >\n      <ToolbarButton\n        variant={isYearOnly ? 'h3' : 'subtitle1'}\n        onClick={() => setOpenView('year')}\n        selected={openView === 'year'}\n        label={utils.getYearText(date)}\n      />\n\n      {!isYearOnly && !isYearAndMonth && (\n        <ToolbarButton\n          variant=\"h4\"\n          selected={openView === 'date'}\n          onClick={() => setOpenView('date')}\n          align={isLandscape ? 'left' : 'center'}\n          label={utils.getDatePickerHeaderText(date)}\n          className={clsx({ [classes.dateLandscape]: isLandscape })}\n        />\n      )}\n\n      {isYearAndMonth && (\n        <ToolbarButton\n          variant=\"h4\"\n          onClick={() => setOpenView('month')}\n          selected={openView === 'month'}\n          label={utils.getMonthText(date)}\n        />\n      )}\n    </PickerToolbar>\n  );\n};\n","import { useUtils } from '../_shared/hooks/useUtils';\nimport { MaterialUiPickersDate } from '../typings/date';\nimport { DatePickerToolbar } from './DatePickerToolbar';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { getFormatByViews } from '../_helpers/date-utils';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { OutterCalendarProps } from '../views/Calendar/Calendar';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { datePickerDefaultProps, ParsableDate } from '../constants/prop-types';\nimport { useKeyboardPickerState } from '../_shared/hooks/useKeyboardPickerState';\nimport {\n  WithKeyboardInputProps,\n  WithPureInputProps,\n  makePickerWithState,\n} from '../Picker/makePickerWithState';\n\nexport type DatePickerView = 'year' | 'date' | 'month';\n\nexport interface BaseDatePickerProps extends OutterCalendarProps {\n  /**\n   * Min selectable date\n   * @default Date(1900-01-01)\n   */\n  minDate?: ParsableDate;\n  /**\n   * Max selectable date\n   * @default Date(2100-01-01)\n   */\n  maxDate?: ParsableDate;\n\n  /**\n   * Compare dates by the exact timestamp, instead of start/end of date\n   * @default false\n   */\n  strictCompareDates?: boolean;\n\n  /**\n   * Disable past dates\n   * @default false\n   */\n  disablePast?: boolean;\n  /**\n   * Disable future dates\n   * @default false\n   */\n  disableFuture?: boolean;\n  /**\n   * To animate scrolling to current year (using scrollIntoView)\n   * @default false\n   */\n  animateYearScrolling?: boolean;\n  /** Callback firing on year change @DateIOType */\n  onYearChange?: (date: MaterialUiPickersDate) => void;\n}\n\nexport interface DatePickerViewsProps extends BaseDatePickerProps {\n  /**\n   * Array of views to show\n   * @type {Array<\"year\" | \"date\" | \"month\">}\n   */\n  views?: DatePickerView[];\n  /** First view to show in DatePicker */\n  openTo?: DatePickerView;\n}\n\nexport type DatePickerProps = WithPureInputProps & DatePickerViewsProps;\n\nexport type KeyboardDatePickerProps = WithKeyboardInputProps & DatePickerViewsProps;\n\nconst defaultProps = {\n  ...datePickerDefaultProps,\n  openTo: 'date' as DatePickerView,\n  views: ['year', 'date'] as DatePickerView[],\n};\n\nfunction useOptions(props: DatePickerViewsProps) {\n  const utils = useUtils();\n\n  return {\n    getDefaultFormat: () => getFormatByViews(props.views!, utils),\n  };\n}\n\nexport const DatePicker = makePickerWithState<DatePickerProps>({\n  useOptions,\n  Input: PureDateInput,\n  useState: usePickerState,\n  DefaultToolbarComponent: DatePickerToolbar,\n});\n\nexport const KeyboardDatePicker = makePickerWithState<KeyboardDatePickerProps>({\n  useOptions,\n  Input: KeyboardDateInput,\n  useState: useKeyboardPickerState,\n  DefaultToolbarComponent: DatePickerToolbar,\n});\n\nDatePicker.defaultProps = defaultProps;\n\nKeyboardDatePicker.defaultProps = defaultProps;\n","import React, { useState } from \"react\";\n\nimport {\n  TextField,\n  Button,\n  Grid,\n  Typography,\n  MenuItem,\n  // Checkbox,\n  // FormControlLabel,\n  Divider,\n} from \"@material-ui/core\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import CheckIcon from \"@material-ui/icons/CheckOutlined\";\n// import RotateLeftTwoToneIcon from \"@material-ui/icons/RotateLeftTwoTone\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n// import SignatureCanvas from \"react-signature-canvas\";\n\nimport CountrySelect from \"../../../../components/common/CountrySelect\";\nimport Error from \"../../../../components/common/Error\";\nimport RegionSelect from \"../../../../components/common/RegionSelect\";\nimport PatientAuthService from \"../../../../services/patient_portal/auth.service\";\nimport { FormFields } from \"../../../../static/expandForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRow: {\n    margin: theme.spacing(3, 0),\n  },\n  sigCanvas: {\n    border: \"1px solid grey\",\n  },\n  sigCanvasClear: {\n    position: \"absolute\",\n    background: \"#f3f3f3\",\n    top: \"-20px\",\n  },\n  sigCanvasSave: {\n    position: \"absolute\",\n    background: \"#f3f3f3\",\n    top: \"30px\",\n  },\n  sigImage: {\n    backgroundSize: \"200px 50px\",\n    width: \"200px\",\n    height: \"50px\",\n    backgroundColor: \"white\",\n  },\n  signupActions: {\n    marginTop: theme.spacing(1),\n    // maxWidth: \"506px\",\n    // marginLeft: \"auto\",\n    // marginRight: \"auto\",\n    // textAlign: \"right\",\n    // display: \"block\",\n  },\n}));\n\nconst SignupForm = (props) => {\n  const classes = useStyles();\n  const { errors, onFormSubmit } = props;\n\n  const BasicInfo = FormFields.basicInfo;\n  const AddressDetails = FormFields.addressDetails;\n  const ContactInfo = FormFields.contactInfo;\n  const EmergencyInfo = FormFields.emergencyInfo;\n  const InsuranceInfo = FormFields.insuranceInfo;\n  const MedicalInfo = FormFields.medicalInfo;\n  const UserNamePasswordInfo = FormFields.userNamePasswordDetails;\n\n  // const [termsChecked, setTermsChecked] = useState(true);\n  // const [signatureRef, setSignatureRef] = useState(null);\n  // const [signature, setSignature] = useState(null);\n\n  const [formFields, setFormFields] = useState({\n    firstname: \"\",\n    middlename: \"\",\n    lastname: \"\",\n    gender: \"\",\n    address: \"\",\n    address2: \"\",\n    country: CountryRegionData.find((item) => item?.[1] === \"US\"),\n    state: \"\",\n    city: \"\",\n    postal: \"\",\n    contactPreference: \"\",\n  });\n  const [fieldErrors, setFieldErrors] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { value, name } = e.target;\n    setFormFields({\n      ...formFields,\n      [name]: value,\n    });\n  };\n\n  const handleCountryRegion = (identifier, value) => {\n    if (identifier === \"country\") {\n      setFormFields({\n        ...formFields,\n        [identifier]: value,\n      });\n    } else if (identifier === \"region\") {\n      const ident = \"state\";\n      setFormFields({\n        ...formFields,\n        [ident]: value,\n      });\n    }\n  };\n\n  // const handleCheckboxChange = (event) => {\n  //   setTermsChecked(event.target.checked);\n  // };\n\n  // const clearSignaturePad = () => {\n  //   signatureRef.clear();\n  // };\n\n  // const saveSignaturePad = () => {\n  //   setSignature(signatureRef.getTrimmedCanvas().toDataURL(\"image/png\"));\n  // };\n\n  const patientErrors = errors && errors.filter((err) => err.param.includes(\"patient\"));\n\n  const getFieldError = (target, fieldName) => {\n    let value = `client.${fieldName}`;\n    if (target) {\n      value = `${target}.${fieldName}`;\n    }\n    return fieldErrors && fieldErrors.filter((err) => err.param === value);\n  };\n\n  const handleAjaxValidation = (event, target) => {\n    if (!event.target) {\n      return;\n    }\n\n    PatientAuthService.validate({\n      fieldName: event.target.name,\n      value: event.target.value,\n      target: target || \"patient\",\n    })\n      .then(\n        (response) => {\n          // Remove errors record with param\n          const updatedErrors = fieldErrors.filter(\n            (error) => error.param !== response.data.message.param,\n          );\n          setFieldErrors(updatedErrors);\n        },\n        (error) => {\n          if (!error.response) {\n            // network error\n            console.error(error);\n          } else {\n            const uniqueFieldErrors = _.uniqWith(\n              [...fieldErrors, error.response.data.message],\n              _.isEqual,\n            );\n            setFieldErrors(uniqueFieldErrors);\n          }\n        },\n      )\n      .catch((err) => {\n        console.error(\"catch err\", err);\n      });\n  };\n\n  const validatePassword = (event) => {\n    if (event.target.value.length < 8) {\n      setFieldErrors([\n        ...fieldErrors,\n        {\n          value: event.target.value,\n          msg: \"Too Weak. Must be atleast 8 Characters\",\n          param: `patient.${event.target.name}`,\n        },\n      ]);\n    } else {\n      const updatedErrors = fieldErrors.filter(\n        (error) => error.param !== `patient.${event.target.name}`,\n      );\n      setFieldErrors(updatedErrors);\n    }\n\n    if (event.target.name === \"confirmPassword\") {\n      if (formFields.password !== formFields.confirmPassword) {\n        setFieldErrors([\n          ...fieldErrors,\n          {\n            value: event.target.value,\n            msg: \"Passwords must be same\",\n            param: `patient.${event.target.name}`,\n          },\n        ]);\n      } else {\n        const updatedErrors = fieldErrors.filter(\n          (error) => error.param !== `patient.${event.target.name}`,\n        );\n        setFieldErrors(updatedErrors);\n      }\n    }\n  };\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    const formData = {\n      patient: {\n        status: \"A\",\n        firstname: formFields.firstname,\n        middlename: formFields.middlename,\n        lastname: formFields.lastname,\n        // preferred_name: formFields.preferred_name.trim(),\n        address: formFields.address,\n        address2: formFields.address2,\n        city: formFields.city,\n        state: formFields.state,\n        postal: formFields.postal,\n        country: formFields.country[0],\n        phone_home: formFields.phone_home,\n        phone_cell: formFields.phone_cell,\n        phone_work: formFields.phone_work,\n        phone_other: formFields.phone_other,\n        phone_note: formFields.phone_note,\n        email: formFields.email,\n        password: formFields.password,\n        dob: formFields.dob,\n        ssn: formFields.ssn,\n        gender: formFields.gender,\n        emergency_firstname: formFields.emergency_firstname,\n        emergency_middlename: formFields.emergency_middlename,\n        emergency_lastname: formFields.lastname,\n        emergency_relationship: formFields.emergency_relationship,\n        emergency_email: formFields.emergency_email,\n        emergency_phone: formFields.emergency_phone,\n        insurance_name: formFields.insurance_name,\n        insurance_group: formFields.insurance_group,\n        insurance_member: formFields.insurance_member,\n        insurance_phone: formFields.insurance_phone,\n        insurance_desc: formFields.insurance_desc,\n        primary_reason: formFields.primary_reason,\n        admin_note: formFields.admin_note,\n        medical_note: formFields.medical_note,\n        referred_by: formFields.referred_by,\n        height: formFields.height,\n        waist: formFields.waist,\n        weight: formFields.weigh,\n        // imgBase64: signatureRef.getTrimmedCanvas().toDataURL(\"image/png\"),\n      },\n    };\n    onFormSubmit(formData);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmission}>\n        <Grid className={classes.inputRow}>\n          {patientErrors\n            && patientErrors.map((error, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Alert severity=\"error\" variant=\"filled\" key={index}>\n                {error.msg}\n              </Alert>\n            ))}\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Basic Information\n          </Typography>\n          <Grid container spacing={1}>\n            {BasicInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                {item.baseType === \"input\" ? (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    label={item.label}\n                    name={item.name}\n                    id={item.id}\n                    type={item.type}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  />\n                ) : (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    select\n                    placeholder={item.label}\n                    label={item.label}\n                    id={item.id}\n                    name={item.name}\n                    value={formFields[item.name]}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  >\n                    <MenuItem key={-1} value=\"\" />\n                    {item.options.map((option, i) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={i} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Address Information\n          </Typography>\n          <Grid container spacing={1}>\n            {AddressDetails.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n            <Grid item lg={4}>\n              <CountrySelect\n                size=\"small\"\n                id=\"country-select\"\n                error={null}\n                name=\"country-select\"\n                helperText=\"\"\n                label=\"Country\"\n                outlined\n                handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                country={formFields.country}\n              />\n            </Grid>\n            <Grid item lg={4}>\n              <RegionSelect\n                size=\"small\"\n                id=\"state-select\"\n                error={null}\n                name=\"state-select\"\n                helperText=\"\"\n                label=\"State\"\n                outlined\n                handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                country={formFields.country}\n                region={formFields.state}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Contact Information\n          </Typography>\n          <Grid container spacing={1} alignItems=\"flex-end\">\n            {ContactInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                {item.baseType === \"input\" ? (\n                  <>\n                    <TextField\n                      required={item.required}\n                      size=\"small\"\n                      variant=\"outlined\"\n                      label={item.label}\n                      name={item.name}\n                      id={item.id}\n                      type={item.type}\n                      fullWidth\n                      onChange={(e) => handleInputChange(e)}\n                      onBlur={(event) => (item.name === \"email\" || item.name === \"ssn\")\n                        && handleAjaxValidation(event)}\n                    />\n                    <Error errors={getFieldError(\"patient\", item.name)} />\n                  </>\n                ) : (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    // className={classes.select}\n                    select\n                    placeholder={item.label}\n                    label={item.label}\n                    id={item.id}\n                    name={item.name}\n                    value={formFields[item.name]}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  >\n                    {item.options.map((option, i) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={i} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Emergency Information\n          </Typography>\n          <Grid container spacing={1}>\n            {EmergencyInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  onBlur={(event) => item.name === \"emergency_email\"\n                    && handleAjaxValidation(event)}\n                />\n                <Error errors={getFieldError(\"patient\", item.name)} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Insurance Information\n          </Typography>\n          <Grid container spacing={1}>\n            {InsuranceInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Medical Information\n          </Typography>\n          <Grid container spacing={1}>\n            {MedicalInfo.slice(0, 2).map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={6}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n            {MedicalInfo.slice(2, 3).map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={12}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  multiline\n                  rows={5}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Set Password for Patient Portal\n          </Typography>\n          <Grid container spacing={1}>\n            {UserNamePasswordInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  onBlur={(event) => (item.name === \"password\"\n                    || item.name === \"confirmPassword\")\n                    && validatePassword(event)}\n                />\n                <Error errors={getFieldError(\"patient\", item.name)} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        {/* <Divider />\n\n        <FormControlLabel\n          value=\"end\"\n          control={(\n            <Checkbox\n              checked={termsChecked}\n              onChange={(e) => handleCheckboxChange(e)}\n              color=\"primary\"\n            />\n          )}\n          label=\"I have read and accept the terms of the privacy policy below.\"\n          labelPlacement=\"end\"\n        />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Signature\n          </Typography>\n          <Grid container justify=\"center\" style={{ position: \"relative\" }}>\n            <Grid item>\n              <SignatureCanvas\n                ref={(ref) => setSignatureRef(ref)}\n                on\n                penColor=\"black\"\n                canvasProps={{\n                  width: 500,\n                  height: 200,\n                  className: classes.sigCanvas,\n                }}\n              />\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => clearSignaturePad()}\n                className={classes.sigCanvasClear}\n              >\n                <RotateLeftTwoToneIcon />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => saveSignaturePad()}\n                className={classes.sigCanvasSave}\n              >\n                <CheckIcon />\n              </IconButton>\n            </Grid>\n            {signature ? (\n              <img\n                alt=\"signature\"\n                className={classes.sigImage}\n                src={signature}\n              />\n            ) : null}\n          </Grid>\n        </Grid> */}\n        <Grid container justify=\"center\" className={classes.signupActions}>\n          <Button\n            disabled={!formFields.email || fieldErrors.length > 0 || !formFields.password}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nSignupForm.defaultProps = {\n  errors: null,\n  onFormSubmit: () => { },\n};\n\nSignupForm.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  onFormSubmit: PropTypes.func,\n};\n\nexport default SignupForm;\n","export default __webpack_public_path__ + \"static/media/NoClientLogo.4083c1ce.png\";","import React, { useRef } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport defaultErrorImage from \"../../../../assets/img/NoClientLogo.png\";\n\nconst Image = ({\n  src, alt, className, onErrorImage,\n}) => {\n  const imageEl = useRef(null);\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      onError={() => {\n        imageEl.current.src = onErrorImage;\n      }}\n      ref={imageEl}\n    />\n  );\n};\n\nImage.defaultProps = {\n  onErrorImage: defaultErrorImage,\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  onErrorImage: PropTypes.string,\n};\n\nexport default Image;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    fontSize: \"15px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst Success = ({ header, loginText, client }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <p>\n          {header}\n          {\" \"}\n          <Link href={`/login/${client.code}`}>{loginText}</Link>\n        </p>\n      </CardContent>\n    </Card>\n  );\n};\n\nSuccess.defaultProps = {\n  client: null,\n};\n\nSuccess.propTypes = {\n  loginText: PropTypes.string.isRequired,\n  header: PropTypes.string.isRequired,\n  client: PropTypes.arrayOf(\n    PropTypes.shape({\n      client_id: PropTypes.string,\n      name: PropTypes.string,\n      code: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Success;\n"],"sourceRoot":""}