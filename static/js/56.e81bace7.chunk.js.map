{"version":3,"sources":["screens/patient-portal/auth/Signup.js","components/common/Error.js","components/common/CountrySelect.js","components/common/RegionSelect.js","services/patient_portal/auth.service.js","static/expandForm.js","screens/patient-portal/auth/components/SignupForm.js","assets/img/NoClientLogo.png","screens/patient-portal/auth/components/Image.js"],"names":["useStyles","makeStyles","theme","pageTitle","marginBottom","spacing","paper","marginTop","display","flexDirection","alignItems","ErrorSection","minHeight","avatar","margin","backgroundColor","color","palette","text","secondary","lockIcon","fontSize","link","cursor","textDecoration","PatientSignUp","classes","history","useHistory","enqueueSnackbar","useSnackbar","clientCode","useParams","React","useState","client","setClient","clientError","setClientError","errors","setErrors","signUpSuccess","setSignUpSuccess","useEffect","AuthService","getClientCode","then","res","data","error","response","status","msg","message","RegistrationSuccess","className","component","variant","name","gutterBottom","aria-hidden","onClick","push","maxWidth","length","icon","severity","to","onFormSubmit","formData","patient","client_id","register","Error","children","map","index","defaultProps","CountryRegionMUISelectors","props","country","size","handleChange","outlined","id","label","value","select","onChange","e","target","fullWidth","CountryRegionData","option","getRegions","split","regionPair","RegionMUISelectors","region","PatientAuthService","user","a","axios","post","API_BASE","email","password","loginResponse","accessToken","localStorage","setItem","JSON","stringify","get","patientId","token","FormFields","basicInfo","baseType","type","options","required","addressDetails","contactInfo","emergencyInfo","insuranceInfo","medicalInfo","userNamePasswordDetails","inputRow","sigCanvas","border","sigCanvasClear","position","background","top","sigCanvasSave","sigImage","backgroundSize","width","height","signupActions","SignupForm","BasicInfo","AddressDetails","ContactInfo","EmergencyInfo","InsuranceInfo","MedicalInfo","UserNamePasswordInfo","firstname","middlename","lastname","gender","address","address2","find","item","state","city","postal","contactPreference","formFields","setFormFields","fieldErrors","setFieldErrors","handleInputChange","handleCountryRegion","identifier","patientErrors","filter","err","param","includes","getFieldError","fieldName","handleAjaxValidation","event","validate","updatedErrors","uniqueFieldErrors","_","uniqWith","isEqual","console","catch","onSubmit","preventDefault","phone_home","phone_cell","phone_work","phone_other","phone_note","dob","ssn","emergency_firstname","emergency_middlename","emergency_lastname","emergency_relationship","emergency_email","emergency_phone","insurance_name","insurance_group","insurance_member","insurance_phone","insurance_desc","primary_reason","admin_note","medical_note","referred_by","waist","weight","weigh","Grid","Alert","Typography","container","md","TextField","placeholder","MenuItem","i","Divider","lg","CountrySelect","helperText","RegionSelect","onBlur","slice","multiline","rows","confirmPassword","validatePassword","justify","Button","disabled","Image","src","alt","onErrorImage","imageEl","useRef","onError","current","ref","defaultErrorImage"],"mappings":"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","file":"static/js/56.e81bace7.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useSnackbar } from \"notistack\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\n\nimport Error from \"../../../components/common/Error\";\nimport AuthService from \"../../../services/patient_portal/auth.service\";\nimport { SignupForm } from \"./components\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  ErrorSection: {\n    minHeight: \"300px\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent\",\n    color: theme.palette.text.secondary,\n  },\n  lockIcon: {\n    fontSize: \"40px\",\n  },\n  link: {\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n  },\n}));\n\nconst PatientSignUp = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const { clientCode } = useParams();\n  const [client, setClient] = React.useState(null);\n  const [clientError, setClientError] = React.useState([]);\n  const [errors, setErrors] = React.useState([]);\n  const [signUpSuccess, setSignUpSuccess] = React.useState(false);\n\n  useEffect(() => {\n    AuthService.getClientCode(clientCode).then(\n      (res) => {\n        setClient(res.data[0]);\n      },\n      (error) => {\n        if (!error.response) {\n          return;\n        }\n        const { data, status } = error.response;\n\n        if (status === 400) {\n          setClientError([\n            {\n              msg: data.message,\n            },\n          ]);\n        } else {\n          setErrors([]);\n        }\n      },\n    );\n  }, [clientCode]);\n\n  const handleFormSubmit = (data) => {\n    const formData = data;\n    formData.patient = {\n      ...formData.patient,\n      client_id: client?.client_id,\n    };\n    AuthService.register(formData).then(\n      (response) => {\n        enqueueSnackbar(`${response.data.message}`, {\n          variant: \"success\",\n        });\n        setSignUpSuccess(true);\n      },\n      (error) => {\n        if (error.response) {\n          setErrors(error.response.data.message);\n        }\n      },\n    );\n  };\n\n  const navigateToLogin = () => {\n    history.push(`/login/${clientCode}`);\n  };\n\n  const RegistrationSuccess = () => (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <LockOutlinedIcon className={classes.lockIcon} />\n      </Avatar>\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        className={classes.pageTitle}\n      >\n        {`${client && client.name} Registration Confirmation`}\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        The registration was successful. Please login to the portal\n        {\" \"}\n        <span aria-hidden=\"true\" className={classes.link} onClick={() => navigateToLogin()}>\n          here\n        </span>\n        .\n      </Typography>\n    </div>\n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <CssBaseline />\n      {signUpSuccess && (\n        <RegistrationSuccess />\n      )}\n      {!signUpSuccess && (\n        clientError.length > 0 ? (\n          <div className={`${classes.paper} ${classes.ErrorSection}`}>\n            <Error errors={clientError} variant=\"filled\" />\n            <Alert icon={false} severity=\"info\">\n              Go back to\n              {\" \"}\n              <Link to=\"/\">Home page</Link>\n            </Alert>\n          </div>\n        ) : (\n          <>\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon className={classes.lockIcon} />\n              </Avatar>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                className={classes.pageTitle}\n              >\n                Register with\n                {\" \"}\n                {client && client.name}\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                To register as a new patient, please enter your infromation\n                in the fields below. Please do not use this form if you are\n                already patient.\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                If you would like to amend your information, please send a\n                Secure Message or call our office.\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                If you are already a registered patient with online access,\n                you can log in\n                {\" \"}\n                <Link to={`/login/${clientCode}`}>here</Link>\n              </Typography>\n            </div>\n            <SignupForm\n              onFormSubmit={handleFormSubmit}\n              errors={errors}\n            />\n          </>\n        ))}\n    </Container>\n  );\n};\n\nexport default PatientSignUp;\n","import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ errors, variant, children }) => (\n  <>\n    {errors\n      && errors.map((error, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Alert severity=\"error\" variant={variant} key={index}>\n          {error.msg}\n          {children}\n        </Alert>\n      ))}\n  </>\n);\n\nError.defaultProps = {\n  errors: null,\n  children: null,\n  variant: \"outlined\",\n};\n\nError.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Error;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n\nfunction CountryRegionMUISelectors(props) {\n  const {\n    country, size, handleChange, outlined, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"country\"\n      label=\"Country\"\n      value={country}\n      select\n      onChange={(e) => handleChange(\"country\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {CountryRegionData.map((option) => (\n        <MenuItem key={option[0]} value={option}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nCountryRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  country: null,\n  outlined: true,\n  margin: \"none\",\n};\n\nCountryRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  handleChange: PropTypes.func.isRequired,\n  outlined: PropTypes.bool,\n  margin: PropTypes.string,\n};\n\nexport default CountryRegionMUISelectors;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst getRegions = (country) => {\n  if (!country) {\n    return [];\n  }\n  return country[2].split(\"|\").map((regionPair) => {\n    const [regionName = null, regionInShort] = regionPair.split(\"~\");\n    return [regionName, regionInShort];\n  });\n};\n\nfunction RegionMUISelectors(props) {\n  const {\n    size, label, region, handleChange, outlined, country, margin,\n  } = props;\n  return (\n    <TextField\n      size={size}\n      id=\"state\"\n      label={label}\n      value={region}\n      select\n      onChange={(e) => handleChange(\"region\", e.target.value)}\n      fullWidth\n      variant={outlined ? \"outlined\" : \"standard\"}\n      margin={margin || \"none\"}\n    >\n      {getRegions(country).map((option) => (\n        <MenuItem key={option[0]} value={option[1]}>\n          {option[0]}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n}\n\nRegionMUISelectors.defaultProps = {\n  size: \"medium\",\n  outlined: true,\n  margin: \"none\",\n};\n\nRegionMUISelectors.propTypes = {\n  size: PropTypes.string,\n  outlined: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  region: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  country: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n  ]).isRequired,\n  margin: PropTypes.string,\n};\n\nexport default RegionMUISelectors;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\n\nclass PatientAuthService {\n  async login(user) {\n    const loginResponse = await axios.post(`${API_BASE}/auth/patient/login`, {\n      client_id: user.client_id,\n      email: user.email,\n      password: user.password,\n    });\n    if (loginResponse.data) {\n      if (loginResponse.data.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.data));\n      }\n      return loginResponse.data;\n    }\n    return false;\n  }\n\n  getClientCode(clientCode) {\n    return axios\n      .get(`${API_BASE}/auth/patient/client/?c=${clientCode}`)\n      .then((res) => res.data);\n  }\n\n  validate(data) {\n    return axios.post(`${API_BASE}/auth/field/validate`, data);\n  }\n\n  register(patient) {\n    return axios.post(`${API_BASE}/auth/patient/signup`, patient);\n  }\n\n  passwordChangeRequest(email, data) {\n    return axios.post(`${API_BASE}/auth/patient/reset_password/${email}`, data);\n  }\n\n  resetPassword(patientId, token, password) {\n    return axios.post(`${API_BASE}/auth/patient/reset/${patientId}/${token}`, {\n      password,\n    });\n  }\n}\n\nexport default new PatientAuthService();\n","export const FormFields = {\n  basicInfo: [\n    {\n      name: \"firstname\",\n      id: \"firstname\",\n      label: \"First Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"middlename\",\n      id: \"middlename\",\n      label: \"Middle Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"lastname\",\n      id: \"lastname\",\n      label: \"Last Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"dob\",\n      id: \"dob\",\n      label: \"\",\n      baseType: \"input\",\n      type: \"date\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"ssn\",\n      id: \"ssn\",\n      label: \"Social Security\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"nickName\",\n      id: \"nickName\",\n      label: \"Nick Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"aboutUs\",\n      id: \"aboutUs\",\n      label: \"How did you hear about us?\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"gender\",\n      id: \"gender\",\n      label: \"Gender\",\n      baseType: \"select\",\n      type: null,\n      required: true,\n      options: [\n        {\n          label: \"\",\n          value: \"\",\n        },\n        {\n          label: \"Male\",\n          value: \"M\",\n        },\n        {\n          label: \"Female\",\n          value: \"F\",\n        },\n      ],\n    },\n  ],\n  addressDetails: [\n    {\n      name: \"address\",\n      id: \"address\",\n      label: \"Address\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"address2\",\n      id: \"address2\",\n      label: \"Address 2\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"city\",\n      id: \"city\",\n      label: \"City\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"postal\",\n      id: \"postal\",\n      label: \"Zip/Postal\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n  ],\n  contactInfo: [\n    {\n      name: \"phone_home\",\n      id: \"phone_home\",\n      label: \"Home Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"phone_cell\",\n      id: \"phone_cell\",\n      label: \"Cell Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"phone_work\",\n      id: \"phone_work\",\n      label: \"Work Phone\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"email\",\n      id: \"email\",\n      label: \"Email\",\n      baseType: \"input\",\n      type: \"email\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"contactPreference\",\n      id: \"contactPreference\",\n      label: \"Contact Preference\",\n      baseType: \"select\",\n      type: null,\n      required: false,\n      options: [\n        {\n          label: \"Mobile Phone\",\n          value: \"mobile\",\n        },\n        {\n          label: \"Home Phone\",\n          value: \"home\",\n        },\n        {\n          label: \"Work Phone\",\n          value: \"work\",\n        },\n      ],\n    },\n  ],\n  emergencyInfo: [\n    {\n      name: \"emergency_firstname\",\n      id: \"emergency_firstname\",\n      label: \"First Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_middlename\",\n      id: \"emergency_middlename\",\n      label: \"Middle Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_lastname\",\n      id: \"emergency_lastname\",\n      label: \"Last Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_relationship\",\n      id: \"emergency_relationship\",\n      label: \"Relationship\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_email\",\n      id: \"emergencyemail\",\n      label: \"Email\",\n      baseType: \"input\",\n      type: \"email\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"emergency_phone\",\n      id: \"emergency_phone\",\n      label: \"Contact Number\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: false,\n    },\n  ],\n  insuranceInfo: [\n    {\n      name: \"insurance_name\",\n      id: \"insurance_name\",\n      label: \"Plan Name\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insurance_group\",\n      id: \"insurance_group\",\n      label: \"Group Number\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insurance_member\",\n      id: \"insurance_member\",\n      label: \"Member Id\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n    {\n      name: \"insuranceType\",\n      id: \"insuranceType\",\n      label: \"Insurance Type\",\n      baseType: \"input\",\n      type: \"text\",\n      options: [],\n      required: false,\n    },\n  ],\n  medicalInfo: [\n    {\n      name: \"height\",\n      id: \"height\",\n      label: \"Height in (INCHES)\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"weight\",\n      id: \"weight\",\n      label: \"Weight in (POUNDS)\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"medical_note\",\n      id: \"medical_note\",\n      label: \"Reason For Consult\",\n      baseType: \"input\",\n      type: \"number\",\n      options: [],\n      required: true,\n    },\n  ],\n  userNamePasswordDetails: [\n    {\n      name: \"password\",\n      id: \"password\",\n      label: \"Password\",\n      baseType: \"input\",\n      type: \"password\",\n      options: [],\n      required: true,\n    },\n    {\n      name: \"confirmPassword\",\n      id: \"confirmPassword\",\n      label: \"Confirm Password\",\n      baseType: \"input\",\n      type: \"password\",\n      options: [],\n      required: true,\n    },\n  ],\n};\n","import React, { useState } from \"react\";\n\nimport {\n  TextField,\n  Button,\n  Grid,\n  Typography,\n  MenuItem,\n  // Checkbox,\n  // FormControlLabel,\n  Divider,\n} from \"@material-ui/core\";\n// import IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import CheckIcon from \"@material-ui/icons/CheckOutlined\";\n// import RotateLeftTwoToneIcon from \"@material-ui/icons/RotateLeftTwoTone\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n// import SignatureCanvas from \"react-signature-canvas\";\n\nimport CountrySelect from \"../../../../components/common/CountrySelect\";\nimport Error from \"../../../../components/common/Error\";\nimport RegionSelect from \"../../../../components/common/RegionSelect\";\nimport PatientAuthService from \"../../../../services/patient_portal/auth.service\";\nimport { FormFields } from \"../../../../static/expandForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputRow: {\n    margin: theme.spacing(3, 0),\n  },\n  sigCanvas: {\n    border: \"1px solid grey\",\n  },\n  sigCanvasClear: {\n    position: \"absolute\",\n    background: \"#f3f3f3\",\n    top: \"-20px\",\n  },\n  sigCanvasSave: {\n    position: \"absolute\",\n    background: \"#f3f3f3\",\n    top: \"30px\",\n  },\n  sigImage: {\n    backgroundSize: \"200px 50px\",\n    width: \"200px\",\n    height: \"50px\",\n    backgroundColor: \"white\",\n  },\n  signupActions: {\n    marginTop: theme.spacing(1),\n    // maxWidth: \"506px\",\n    // marginLeft: \"auto\",\n    // marginRight: \"auto\",\n    // textAlign: \"right\",\n    // display: \"block\",\n  },\n}));\n\nconst SignupForm = (props) => {\n  const classes = useStyles();\n  const { errors, onFormSubmit } = props;\n\n  const BasicInfo = FormFields.basicInfo;\n  const AddressDetails = FormFields.addressDetails;\n  const ContactInfo = FormFields.contactInfo;\n  const EmergencyInfo = FormFields.emergencyInfo;\n  const InsuranceInfo = FormFields.insuranceInfo;\n  const MedicalInfo = FormFields.medicalInfo;\n  const UserNamePasswordInfo = FormFields.userNamePasswordDetails;\n\n  // const [termsChecked, setTermsChecked] = useState(true);\n  // const [signatureRef, setSignatureRef] = useState(null);\n  // const [signature, setSignature] = useState(null);\n\n  const [formFields, setFormFields] = useState({\n    firstname: \"\",\n    middlename: \"\",\n    lastname: \"\",\n    gender: \"\",\n    address: \"\",\n    address2: \"\",\n    country: CountryRegionData.find((item) => item?.[1] === \"US\"),\n    state: \"\",\n    city: \"\",\n    postal: \"\",\n    contactPreference: \"\",\n  });\n  const [fieldErrors, setFieldErrors] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { value, name } = e.target;\n    setFormFields({\n      ...formFields,\n      [name]: value,\n    });\n  };\n\n  const handleCountryRegion = (identifier, value) => {\n    if (identifier === \"country\") {\n      setFormFields({\n        ...formFields,\n        [identifier]: value,\n      });\n    } else if (identifier === \"region\") {\n      const ident = \"state\";\n      setFormFields({\n        ...formFields,\n        [ident]: value,\n      });\n    }\n  };\n\n  // const handleCheckboxChange = (event) => {\n  //   setTermsChecked(event.target.checked);\n  // };\n\n  // const clearSignaturePad = () => {\n  //   signatureRef.clear();\n  // };\n\n  // const saveSignaturePad = () => {\n  //   setSignature(signatureRef.getTrimmedCanvas().toDataURL(\"image/png\"));\n  // };\n\n  const patientErrors = errors && errors.filter((err) => err.param.includes(\"patient\"));\n\n  const getFieldError = (target, fieldName) => {\n    let value = `client.${fieldName}`;\n    if (target) {\n      value = `${target}.${fieldName}`;\n    }\n    return fieldErrors && fieldErrors.filter((err) => err.param === value);\n  };\n\n  const handleAjaxValidation = (event, target) => {\n    if (!event.target) {\n      return;\n    }\n\n    PatientAuthService.validate({\n      fieldName: event.target.name,\n      value: event.target.value,\n      target: target || \"patient\",\n    })\n      .then(\n        (response) => {\n          // Remove errors record with param\n          const updatedErrors = fieldErrors.filter(\n            (error) => error.param !== response.data.message.param,\n          );\n          setFieldErrors(updatedErrors);\n        },\n        (error) => {\n          if (!error.response) {\n            // network error\n            console.error(error);\n          } else {\n            const uniqueFieldErrors = _.uniqWith(\n              [...fieldErrors, error.response.data.message],\n              _.isEqual,\n            );\n            setFieldErrors(uniqueFieldErrors);\n          }\n        },\n      )\n      .catch((err) => {\n        console.error(\"catch err\", err);\n      });\n  };\n\n  const validatePassword = (event) => {\n    if (event.target.value.length < 8) {\n      setFieldErrors([\n        ...fieldErrors,\n        {\n          value: event.target.value,\n          msg: \"Too Weak. Must be atleast 8 Characters\",\n          param: `patient.${event.target.name}`,\n        },\n      ]);\n    } else {\n      const updatedErrors = fieldErrors.filter(\n        (error) => error.param !== `patient.${event.target.name}`,\n      );\n      setFieldErrors(updatedErrors);\n    }\n\n    if (event.target.name === \"confirmPassword\") {\n      if (formFields.password !== formFields.confirmPassword) {\n        setFieldErrors([\n          ...fieldErrors,\n          {\n            value: event.target.value,\n            msg: \"Passwords must be same\",\n            param: `patient.${event.target.name}`,\n          },\n        ]);\n      } else {\n        const updatedErrors = fieldErrors.filter(\n          (error) => error.param !== `patient.${event.target.name}`,\n        );\n        setFieldErrors(updatedErrors);\n      }\n    }\n  };\n\n  const handleFormSubmission = (e) => {\n    e.preventDefault();\n    const formData = {\n      patient: {\n        status: \"A\",\n        firstname: formFields.firstname,\n        middlename: formFields.middlename,\n        lastname: formFields.lastname,\n        // preferred_name: formFields.preferred_name.trim(),\n        address: formFields.address,\n        address2: formFields.address2,\n        city: formFields.city,\n        state: formFields.state,\n        postal: formFields.postal,\n        country: formFields.country[0],\n        phone_home: formFields.phone_home,\n        phone_cell: formFields.phone_cell,\n        phone_work: formFields.phone_work,\n        phone_other: formFields.phone_other,\n        phone_note: formFields.phone_note,\n        email: formFields.email,\n        password: formFields.password,\n        dob: formFields.dob,\n        ssn: formFields.ssn,\n        gender: formFields.gender,\n        emergency_firstname: formFields.emergency_firstname,\n        emergency_middlename: formFields.emergency_middlename,\n        emergency_lastname: formFields.lastname,\n        emergency_relationship: formFields.emergency_relationship,\n        emergency_email: formFields.emergency_email,\n        emergency_phone: formFields.emergency_phone,\n        insurance_name: formFields.insurance_name,\n        insurance_group: formFields.insurance_group,\n        insurance_member: formFields.insurance_member,\n        insurance_phone: formFields.insurance_phone,\n        insurance_desc: formFields.insurance_desc,\n        primary_reason: formFields.primary_reason,\n        admin_note: formFields.admin_note,\n        medical_note: formFields.medical_note,\n        referred_by: formFields.referred_by,\n        height: formFields.height,\n        waist: formFields.waist,\n        weight: formFields.weigh,\n        // imgBase64: signatureRef.getTrimmedCanvas().toDataURL(\"image/png\"),\n      },\n    };\n    onFormSubmit(formData);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmission}>\n        <Grid className={classes.inputRow}>\n          {patientErrors\n            && patientErrors.map((error, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Alert severity=\"error\" variant=\"filled\" key={index}>\n                {error.msg}\n              </Alert>\n            ))}\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Basic Information\n          </Typography>\n          <Grid container spacing={1}>\n            {BasicInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                {item.baseType === \"input\" ? (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    label={item.label}\n                    name={item.name}\n                    id={item.id}\n                    type={item.type}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  />\n                ) : (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    select\n                    placeholder={item.label}\n                    label={item.label}\n                    id={item.id}\n                    name={item.name}\n                    value={formFields[item.name]}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  >\n                    <MenuItem key={-1} value=\"\" />\n                    {item.options.map((option, i) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={i} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Address Information\n          </Typography>\n          <Grid container spacing={1}>\n            {AddressDetails.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n            <Grid item lg={4}>\n              <CountrySelect\n                size=\"small\"\n                id=\"country-select\"\n                error={null}\n                name=\"country-select\"\n                helperText=\"\"\n                label=\"Country\"\n                outlined\n                handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                country={formFields.country}\n              />\n            </Grid>\n            <Grid item lg={4}>\n              <RegionSelect\n                size=\"small\"\n                id=\"state-select\"\n                error={null}\n                name=\"state-select\"\n                helperText=\"\"\n                label=\"State\"\n                outlined\n                handleChange={(identifier, value) => handleCountryRegion(identifier, value)}\n                country={formFields.country}\n                region={formFields.state}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Contact Information\n          </Typography>\n          <Grid container spacing={1} alignItems=\"flex-end\">\n            {ContactInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                {item.baseType === \"input\" ? (\n                  <>\n                    <TextField\n                      required={item.required}\n                      size=\"small\"\n                      variant=\"outlined\"\n                      label={item.label}\n                      name={item.name}\n                      id={item.id}\n                      type={item.type}\n                      fullWidth\n                      onChange={(e) => handleInputChange(e)}\n                      onBlur={(event) => (item.name === \"email\" || item.name === \"ssn\")\n                        && handleAjaxValidation(event)}\n                    />\n                    <Error errors={getFieldError(\"patient\", item.name)} />\n                  </>\n                ) : (\n                  <TextField\n                    required={item.required}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    // className={classes.select}\n                    select\n                    placeholder={item.label}\n                    label={item.label}\n                    id={item.id}\n                    name={item.name}\n                    value={formFields[item.name]}\n                    fullWidth\n                    onChange={(e) => handleInputChange(e)}\n                  >\n                    {item.options.map((option, i) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={i} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Emergency Information\n          </Typography>\n          <Grid container spacing={1}>\n            {EmergencyInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  onBlur={(event) => item.name === \"emergency_email\"\n                    && handleAjaxValidation(event)}\n                />\n                <Error errors={getFieldError(\"patient\", item.name)} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Insurance Information\n          </Typography>\n          <Grid container spacing={1}>\n            {InsuranceInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Medical Information\n          </Typography>\n          <Grid container spacing={1}>\n            {MedicalInfo.slice(0, 2).map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={6}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                />\n              </Grid>\n            ))}\n            {MedicalInfo.slice(2, 3).map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={12}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  multiline\n                  rows={5}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Set Password for Patient Portal\n          </Typography>\n          <Grid container spacing={1}>\n            {UserNamePasswordInfo.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Grid key={index} item md={4}>\n                <TextField\n                  required={item.required}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={item.label}\n                  name={item.name}\n                  id={item.id}\n                  type={item.type}\n                  fullWidth\n                  onChange={(e) => handleInputChange(e)}\n                  onBlur={(event) => (item.name === \"password\"\n                    || item.name === \"confirmPassword\")\n                    && validatePassword(event)}\n                />\n                <Error errors={getFieldError(\"patient\", item.name)} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        {/* <Divider />\n\n        <FormControlLabel\n          value=\"end\"\n          control={(\n            <Checkbox\n              checked={termsChecked}\n              onChange={(e) => handleCheckboxChange(e)}\n              color=\"primary\"\n            />\n          )}\n          label=\"I have read and accept the terms of the privacy policy below.\"\n          labelPlacement=\"end\"\n        />\n\n        <Grid className={classes.inputRow}>\n          <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n            Signature\n          </Typography>\n          <Grid container justify=\"center\" style={{ position: \"relative\" }}>\n            <Grid item>\n              <SignatureCanvas\n                ref={(ref) => setSignatureRef(ref)}\n                on\n                penColor=\"black\"\n                canvasProps={{\n                  width: 500,\n                  height: 200,\n                  className: classes.sigCanvas,\n                }}\n              />\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => clearSignaturePad()}\n                className={classes.sigCanvasClear}\n              >\n                <RotateLeftTwoToneIcon />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => saveSignaturePad()}\n                className={classes.sigCanvasSave}\n              >\n                <CheckIcon />\n              </IconButton>\n            </Grid>\n            {signature ? (\n              <img\n                alt=\"signature\"\n                className={classes.sigImage}\n                src={signature}\n              />\n            ) : null}\n          </Grid>\n        </Grid> */}\n        <Grid container justify=\"center\" className={classes.signupActions}>\n          <Button\n            disabled={!formFields.email || fieldErrors.length > 0 || !formFields.password}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nSignupForm.defaultProps = {\n  errors: null,\n  onFormSubmit: () => { },\n};\n\nSignupForm.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  onFormSubmit: PropTypes.func,\n};\n\nexport default SignupForm;\n","export default __webpack_public_path__ + \"static/media/NoClientLogo.4083c1ce.png\";","import React, { useRef } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport defaultErrorImage from \"../../../../assets/img/NoClientLogo.png\";\n\nconst Image = ({\n  src, alt, className, onErrorImage,\n}) => {\n  const imageEl = useRef(null);\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      onError={() => {\n        imageEl.current.src = onErrorImage;\n      }}\n      ref={imageEl}\n    />\n  );\n};\n\nImage.defaultProps = {\n  onErrorImage: defaultErrorImage,\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  onErrorImage: PropTypes.string,\n};\n\nexport default Image;\n"],"sourceRoot":""}