{"version":3,"sources":["screens/Client/Myself/components/MyActivityHistory.js","screens/Client/Myself/components/MyLogins.js","screens/Client/Myself/components/MyProfile.js","screens/Client/Myself/Myself.js","services/myself.service.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","paddingBottom","spacing","tableContainer","width","marginTop","patientLink","color","palette","text","link","cursor","placeholderText","textAlign","padding","fontWeight","fontSize","opacity","overFlowControl","maxWidth","textOverflow","overflow","whiteSpace","StyledTableCell","withStyles","head","backgroundColor","grey","body","TableCell","StyledTableRow","action","hover","TableRow","MyActivityHistory","classes","enqueueSnackbar","useSnackbar","history","useHistory","user","useAuth","useState","activityHistory","setActivityHistory","useEffect","MySelfService","getActivityHistory","id","then","res","data","variant","className","paper","Grid","container","direction","justify","Typography","component","TableContainer","Paper","Table","table","aria-label","TableHead","TableBody","map","row","index","scope","moment","dt","format","onClick","push","patient_id","patient","logins","setLogins","getLogins","ip","formControl","margin","minWidth","form","display","flexDirection","formElment","submit","MyProfile","name","setName","email","setEmail","setTitle","created","setCreated","forwardEmails","setForwardEmails","selectedForwardEmail","setSelectedForwardEmail","phone","setPhone","password","setPassword","fetchForwardEmail","useCallback","getForwardEmail","fetchProfile","getProfile","profile","firstname","lastname","email_forward_user_id","noValidate","onSubmit","e","preventDefault","split","payload","length","updateProfile","message","saveProfile","TextField","autoFocus","label","value","onChange","event","target","size","disabled","InputProps","readOnly","type","FormControl","InputLabel","htmlFor","Select","native","inputProps","item","slice","Button","ButtonWraps","marginBottom","active","primary","main","borderBottom","Myself","React","activeView","setActiveView","md","xs","userId","axios","get","API_BASE","headers","authHeader","put"],"mappings":"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","file":"static/js/92.132f63d0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\n\nimport useAuth from \"../../../../hooks/useAuth\";\nimport MySelfService from \"../../../../services/myself.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n  },\n  tableContainer: {\n    width: 500,\n    marginTop: theme.spacing(1),\n  },\n  patientLink: {\n    color: theme.palette.text.link,\n    cursor: \"pointer\",\n  },\n  placeholderText: {\n    textAlign: \"center\",\n    padding: \"100px\",\n    fontWeight: \"500\",\n    fontSize: \"30px\",\n    opacity: \"20%\",\n  },\n  overFlowControl: {\n    maxWidth: \"130px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n    },\n  },\n}))(TableRow);\n\nexport default function MyActivityHistory() {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n  const { user } = useAuth();\n  const [activityHistory, setActivityHistory] = useState([]);\n\n  useEffect(() => {\n    MySelfService.getActivityHistory(user.id).then(\n      (res) => {\n        setActivityHistory(res.data);\n      },\n      () => {\n        enqueueSnackbar(\"Unable to fetch Activity history.\", {\n          variant: \"error\",\n        });\n      },\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.paper}>\n        <Grid container direction=\"column\" justify=\"center\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            My Activity History\n          </Typography>\n          <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n            This page shows a user&apos;s activity history\n          </Typography>\n          <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table className={classes.table} aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Time</StyledTableCell>\n                  <StyledTableCell>Patient ID</StyledTableCell>\n                  <StyledTableCell>Patient Name</StyledTableCell>\n                  <StyledTableCell>Action</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {activityHistory.map((row, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <StyledTableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {moment(row.dt).format(\"lll\")}\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      scope=\"row\"\n                      className={classes.patientLink}\n                      onClick={() => history.push(`/patients/${row.patient_id}`)}\n                    >\n                      {row.patient_id}\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      scope=\"row\"\n                      className={classes.patientLink}\n                      onClick={() => history.push(`/patients/${row.patient_id}`)}\n                    >\n                      {row.patient}\n                    </TableCell>\n                    <TableCell>{row.action}</TableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\n\nimport useAuth from \"../../../../hooks/useAuth\";\nimport MySelfService from \"../../../../services/myself.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n  },\n  tableContainer: {\n    width: 500,\n    marginTop: theme.spacing(1),\n  },\n  patientLink: {\n    color: \"#2979FF\",\n    cursor: \"pointer\",\n  },\n  placeholderText: {\n    textAlign: \"center\",\n    padding: \"100px\",\n    fontWeight: \"500\",\n    fontSize: \"30px\",\n    opacity: \"20%\",\n  },\n  overFlowControl: {\n    maxWidth: \"130px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n    },\n  },\n}))(TableRow);\n\nexport default function MyActivityHistory() {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const [logins, setLogins] = useState([]);\n\n  useEffect(() => {\n    MySelfService.getLogins(user.id).then(\n      (res) => {\n        setLogins(res.data);\n      },\n      () => {\n        enqueueSnackbar(\"Unable to fetch data.\", {\n          variant: \"error\",\n        });\n      },\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.paper}>\n        <Grid container direction=\"column\" justify=\"center\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            My Login History\n          </Typography>\n          <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n            This page shows a user&apos;s logins\n          </Typography>\n          <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table className={classes.table} aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Time</StyledTableCell>\n                  <StyledTableCell>IP Address</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {logins.map((row, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <StyledTableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {moment(row.dt).format(\"lll\")}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.ip}\n                    </TableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport NumberFormat from \"react-number-format\";\n\nimport useAuth from \"../../../../hooks/useAuth\";\nimport MySelfService from \"../../../../services/myself.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    paddingBottom: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: theme.spacing(1),\n  },\n  formElment: {\n    marginTop: theme.spacing(2),\n    width: \"250px\",\n  },\n  submit: {\n    width: \"100px\",\n    marginTop: theme.spacing(4),\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function MyProfile() {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [created, setCreated] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [forwardEmails, setForwardEmails] = useState([]);\n  const [selectedForwardEmail, setSelectedForwardEmail] = useState(null);\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const saveProfile = (e) => {\n    e.preventDefault();\n\n    const [firstname, lastname] = name.split(\" \");\n\n    const payload = {\n      data: {\n        firstname,\n        lastname,\n        email,\n        title,\n        created,\n        ...(selectedForwardEmail > 0 && {\n          email_forward_user_id: selectedForwardEmail,\n        }),\n        phone,\n        ...(password.length && { password }),\n      },\n    };\n\n    MySelfService.updateProfile(payload, user.id).then(\n      (res) => {\n        enqueueSnackbar(res.data.message, {\n          variant: \"success\",\n        });\n      },\n      () => {\n        enqueueSnackbar(\"Unable to update profile\", {\n          variant: \"error\",\n        });\n      },\n    );\n  };\n\n  const fetchForwardEmail = useCallback(() => {\n    MySelfService.getForwardEmail(user.id).then((res) => {\n      setForwardEmails(res.data);\n    });\n  }, [user]);\n\n  const fetchProfile = useCallback(() => {\n    MySelfService.getProfile(user.id).then((res) => {\n      const profile = res.data;\n      setName(`${profile.firstname} ${profile.lastname}`);\n      setEmail(profile.email);\n      setTitle(profile.title);\n      setCreated(moment(profile.created).format(\"YYYY-MM-DD\"));\n      setSelectedForwardEmail(profile.email_forward_user_id);\n      setPhone(profile.phone);\n    });\n  }, [user]);\n\n  useEffect(() => {\n    fetchForwardEmail();\n    fetchProfile();\n  }, [fetchProfile, fetchForwardEmail]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.paper}>\n        <Grid container direction=\"column\" justify=\"center\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            color=\"textPrimary\"\n            className={classes.title}\n          >\n            My Profile\n          </Typography>\n          <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n            This page is used to manage a user&apos;s basic information\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(e) => saveProfile(e)}\n          >\n            <TextField\n              autoFocus\n              variant=\"outlined\"\n              label=\"Name\"\n              value={name}\n              className={classes.formElment}\n              onChange={(event) => setName(event.target.value)}\n              size=\"small\"\n              disabled\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Title\"\n              value={title}\n              className={classes.formElment}\n              onChange={(event) => setTitle(event.target.value)}\n              size=\"small\"\n              disabled\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Email\"\n              value={email}\n              className={classes.formElment}\n              onChange={(event) => setEmail(event.target.value)}\n              size=\"small\"\n              disabled\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              id=\"date\"\n              label=\"Created\"\n              value={created}\n              className={classes.formElment}\n              onChange={(event) => setCreated(event.target.value)}\n              type=\"date\"\n              size=\"small\"\n              disabled\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formElment}\n              size=\"small\"\n            >\n              <InputLabel htmlFor=\"age-native-simple\">Forward Email</InputLabel>\n              <Select\n                native\n                value={selectedForwardEmail}\n                onChange={(event) => {\n                  setSelectedForwardEmail(event.target.value);\n                }}\n                inputProps={{\n                  name: \"Forward Email\",\n                  id: \"age-native-simple\",\n                }}\n                label=\"Forward Email\"\n              >\n                <option value={-1}>Select User</option>\n                {forwardEmails.map((item) => (\n                  <option key={item.id} value={item.id}>\n                    {item.name}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n\n            <TextField\n              variant=\"outlined\"\n              label=\"Phone\"\n              value={phone}\n              className={classes.formElment}\n              onChange={(event) => {\n                setPhone(event.target.value.slice(0, 25));\n              }}\n              size=\"small\"\n            />\n            <TextField\n              variant=\"outlined\"\n              label=\"Password\"\n              value={password}\n              type=\"password\"\n              className={classes.formElment}\n              onChange={(event) => setPassword(event.target.value)}\n              size=\"small\"\n            />\n\n            <Button\n              size=\"medium\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Save\n            </Button>\n          </form>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { MyActivityHistory, MyLogins, MyProfile } from \"./components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"10px 0px\",\n  },\n  ButtonWraps: {\n    marginBottom: \"40px\",\n  },\n  active: {\n    color: theme.palette.primary.main,\n    borderBottom: \"1px solid #2979ff\",\n  },\n}));\n\nconst Myself = () => {\n  const classes = useStyles();\n  const [activeView, setActiveView] = React.useState(\"history\");\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\" spacing={0}>\n        <Grid item md={12} xs={12}>\n          <Grid item md={6} xs={12}>\n            <div className={classes.ButtonWraps}>\n              <Button\n                onClick={() => setActiveView(\"history\")}\n                className={(activeView === \"history\") ? classes.active : \"\"}\n              >\n                My Activity History\n              </Button>\n              <Button\n                onClick={() => setActiveView(\"profile\")}\n                className={(activeView === \"profile\") ? classes.active : \"\"}\n              >\n                My Profile\n              </Button>\n              <Button\n                onClick={() => setActiveView(\"login\")}\n                className={(activeView === \"login\") ? classes.active : \"\"}\n              >\n                My Logins\n              </Button>\n            </div>\n            {(activeView === \"history\") && <MyActivityHistory />}\n            {(activeView === \"login\") && <MyLogins />}\n            {(activeView === \"profile\") && <MyProfile />}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Myself;\n","import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\nimport authHeader from \"./auth-header\";\n\nclass MySelfService {\n  getProfile(userId) {\n    return axios\n      .get(`${API_BASE}/myself/profile/${userId}`, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n\n  updateProfile(payload, userId) {\n    return axios.put(`${API_BASE}/myself/profile/${userId}`, payload, {\n      headers: authHeader(),\n    });\n  }\n\n  getForwardEmail(userId) {\n    return axios\n      .get(`${API_BASE}/myself/forward-email/${userId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getLogins(userId) {\n    return axios\n      .get(`${API_BASE}/myself/logins/${userId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n\n  getActivityHistory(userId) {\n    return axios\n      .get(`${API_BASE}/myself/activity-history/${userId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => res.data);\n  }\n}\n\nexport default new MySelfService();\n"],"sourceRoot":""}