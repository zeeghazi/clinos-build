{"version":3,"sources":["screens/Auth/Login.js","components/common/Error.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","boxShadow","padding","avatar","margin","backgroundColor","color","palette","text","secondary","lockIcon","fontSize","pageTitle","marginBottom","form","width","submit","Logo","maxWidth","Login","classes","enqueueSnackbar","useSnackbar","login","useAuth","React","useState","email","setEmail","password","setPassword","isChecked","setIsChecked","errors","setErrors","onFormSubmit","event","a","preventDefault","localStorage","username","rememberme","trim","variant","message","useEffect","component","className","src","alt","noValidate","onSubmit","value","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","inputProps","maxLength","helperText","length","type","control","checked","disabled","container","item","xs","href","Error","children","map","error","index","severity","msg","defaultProps"],"mappings":"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","file":"static/js/86.214da0d5.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { useSnackbar } from \"notistack\";\n\nimport Logo from \"../../assets/img/Logo.png\";\nimport Error from \"../../components/common/Error\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    boxShadow: \"0 15px 35px 0 rgb(60 66 87 / 8%), 0 5px 15px 0 rgb(0 0 0 / 12%)\",\n    padding: theme.spacing(2),\n  },\n  marginTop: {\n    marginTop: theme.spacing(16),\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"transparent\",\n    color: theme.palette.text.secondary,\n  },\n  lockIcon: {\n    fontSize: \"40px\",\n  },\n  pageTitle: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  Logo: {\n    maxWidth: \"180px\",\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { login } = useAuth();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [isChecked, setIsChecked] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n\n  const onFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (isChecked && email !== \"\") {\n      localStorage.username = email;\n      localStorage.password = password;\n      localStorage.rememberme = isChecked;\n    }\n\n    try {\n      await login(email.trim(), password.trim()); // Call AuthProvider login\n      // enqueueSnackbar(\"Successfully logged in!\", {\n      //  variant: \"success\",\n      // });\n    } catch (error) {\n      enqueueSnackbar(\"Unable to login\", {\n        variant: \"error\",\n      });\n      setErrors(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.rememberme && localStorage.username !== \"\") {\n      setIsChecked(true);\n      setEmail(localStorage.username);\n      setPassword(localStorage.password);\n    }\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Grid className={classes.marginTop}>\n        <img src={Logo} alt=\"AvonHealth\" className={classes.Logo} />\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon className={classes.lockIcon} />\n          </Avatar>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            className={classes.pageTitle}\n          >\n            Physician Login\n          </Typography>\n          <Error errors={errors} />\n\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(event) => onFormSubmit(event)}\n          >\n            <TextField\n              value={email}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(event) => setEmail(event.target.value)}\n              inputProps={{ maxLength: 255 }}\n              helperText={`${email.length >= 255\n                ? \"Enter an email between 255 charecter\"\n                : \"\"\n              }`}\n            />\n            <TextField\n              value={password}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(event) => setPassword(event.target.value)}\n              inputProps={{ maxLength: 128 }}\n              helperText={`${password.length >= 128\n                ? \"Enter a password between 128 charecter\"\n                : \"\"\n              }`}\n            />\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  value=\"remember\"\n                  color=\"primary\"\n                  checked={isChecked}\n                  onChange={(event) => setIsChecked(event.target.checked)}\n                />\n              )}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              disabled={!email || !password}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/forgot-password\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup_client\" variant=\"body2\">\n                  Don&apos;t have an account? Sign Up\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ errors, variant, children }) => (\n  <>\n    {errors\n      && errors.map((error, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Alert severity=\"error\" variant={variant} key={index}>\n          {error.msg}\n          {children}\n        </Alert>\n      ))}\n  </>\n);\n\nError.defaultProps = {\n  errors: null,\n  children: null,\n  variant: \"outlined\",\n};\n\nError.propTypes = {\n  errors: PropTypes.arrayOf(\n    PropTypes.shape({\n      msg: PropTypes.string.isRequired,\n    }),\n  ),\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Error;\n"],"sourceRoot":""}