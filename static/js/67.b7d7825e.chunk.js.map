{"version":3,"sources":["services/setup/labrange.service.js","static/setup/labRange.js","screens/Client/Setup/MarkerRanges/components/NewLabRange/index.js","screens/Client/Setup/MarkerRanges/MarkerRanges.js","components/Alert/index.js","components/common/StyledTable.js","components/Dialog/index.js","hooks/useDidMountEffect.js"],"names":["axios","get","API_BASE","headers","authHeader","then","res","data","text","post","id","put","reqBody","delete","CompareItemOptions","label","value","GenderCompareOperatorOptions","AgeCompareOperatorOptions","CompareToOptions","useStyles","makeStyles","theme","relativePosition","position","inputRow","margin","spacing","gutterBottom","marginBottom","buttonsContainer","w100","width","ml2","marginLeft","resultsContainer","zIndex","background","palette","common","white","maxHeight","overflow","menuOption","minHeight","NewLabRange","props","classes","enqueueSnackbar","useSnackbar","isOpen","onClose","reloadData","selectedItem","userName","isNewDialog","useMemo","isEmpty","useState","selectedTest","setSelectedTest","searchText","setSearchText","searchTestResults","setSearchTestResults","sequence","compareItem","compareOperator","compareTo","rangeLow","rangeHigh","created","moment","format","updated","formFields","setFormFields","useEffect","createdDate","updatedDate","seq","compare_item","compare_operator","compare_to","range_low","range_high","created_user","updated_user","marker_name","updateFields","handleInputChnage","e","target","name","substring","searchTests","useCallback","preventDefault","LabRangeService","useDidMountEffect","length","populateDecimalValue","Number","toFixed","Dialog","open","title","message","Grid","item","lg","onSubmit","container","alignItems","className","xs","TextField","fullWidth","autoFocus","size","variant","onChange","inputProps","readOnly","Paper","List","map","option","ListItem","button","onClick","ListItemText","primary","Button","type","marker_id","createLabRange","response","editItemId","updateLabRange","required","parsedInt","parseInt","onSequenceInputChange","select","MenuItem","onBlur","justify","cancelForm","hideActions","root","flexGrow","padding","minWidth","mb2","labelContainer","pointerEvents","pointerEnable","fontSize","lineHeight","iconButton","switchLabel","marginRight","fontWeight","borderRadius","letterSpacing","textTransform","MarkerRanges","useAuth","user","client_id","firstname","lastname","selectedRange","setSelectedRange","showNewRangeDialog","setShowNewRangeDialog","showResetDialog","setShowResetDialog","useFuncRange","setUseFuncRange","labRanges","setLabRanges","showDeleteDialog","setShowDeleteDialog","isLoading","setIsLoading","closeDeleteDialog","prevstate","closeResetDialog","resetButtonHandler","fetchLabRanges","getLabRanges","catch","Alert","applyButtonText","cancelButtonText","applyForm","resetLabRanges","deleteItemId","deleteLabRange","deleteItemHandler","Typography","component","color","FormControlLabel","control","Switch","checked","prevState","functional_range","updateLabRangeUse","labelPlacement","disabled","TableContainer","Table","table","TableHead","TableRow","StyledTable","align","TableBody","TableCell","labRangeTableTranslation","IconButton","editItemHandler","openDeleteDialog","colSpan","createStyles","titleContainer","backgroundColor","main","content","actionsContainer","justifyContent","DialogForm","maxWidth","disableBackdropClick","disableTypography","disableElevation","defaultProps","StyledTableCellLg","withStyles","head","grey","body","StyledTableCellSm","whiteSpace","borderBottom","StyledTableRowSm","action","hover","StyledTableRowLg","height","textAlign","fullScreenContent","fullHeight","buttonClose","right","top","save","success","cancel","error","fullScreen","transitionComponent","Boolean","TransitionComponent","aria-label","clsx","undefined","func","deps","didMount","useRef","current"],"mappings":"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","file":"static/js/67.b7d7825e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass LabRangeService {\n  getLabRanges() {\n    return axios.get(`${API_BASE}/client-ranges`, {\n      headers: authHeader(),\n    }).then((res) => res.data);\n  }\n\n  searchTests(text) {\n    return axios.get(`${API_BASE}/client-range/test/search?query=${text}`, {\n      headers: authHeader(),\n    }).then((res) => res.data);\n  }\n\n  createLabRange(data) {\n    return axios.post(`${API_BASE}/client-range`, data, {\n      headers: authHeader(),\n    }).then((res) => res.data);\n  }\n\n  updateLabRange(data, id) {\n    return axios.put(`${API_BASE}/client-range/${id}`, data, {\n      headers: authHeader(),\n    }).then((res) => res.data);\n  }\n\n  deleteLabRange(reqBody, id) {\n    return axios.delete(`${API_BASE}/client-range/${id}`, {\n      headers: authHeader(),\n      data: reqBody,\n    }).then((res) => res.data);\n  }\n\n  resetLabRanges() {\n    return axios.post(`${API_BASE}/client-range/reset`, null, {\n      headers: authHeader(),\n    }).then((res) => res.data);\n  }\n\n  updateLabRangeUse(data) {\n    return axios.put(`${API_BASE}/auth/client/functional-range`, data, {\n      headers: authHeader(),\n    }).then((res) => res.data);\n  }\n}\n\nexport default new LabRangeService();\n","export const GenderOptions = [\n  {\n    label: \"Male\",\n    value: \"M\",\n  },\n  {\n    label: \"Female\",\n    value: \"F\",\n  },\n];\n\nexport const AgeOptions = [\n  {\n    label: \"Child 0-10\",\n    value: \"0-10\",\n  },\n  {\n    label: \"Teen 10-18\",\n    value: \"10-18\",\n  },\n  {\n    label: \"Adult > 18\",\n    value: \">18\",\n  },\n  {\n    label: \"Old > 40\",\n    value: \">40\",\n  },\n];\n\nexport const CompareItemOptions = [\n  {\n    label: \"\",\n    value: \"\",\n  },\n  {\n    label: \"Age\",\n    value: \"A\",\n  },\n  {\n    label: \"Gender\",\n    value: \"G\",\n  },\n];\n\nexport const GenderCompareOperatorOptions = [\n  {\n    label: \"\",\n    value: \"\",\n  },\n  {\n    label: \"=\",\n    value: \"=\",\n  },\n];\n\nexport const AgeCompareOperatorOptions = [\n  {\n    label: \"\",\n    value: \"\",\n  },\n  {\n    label: \">\",\n    value: \">\",\n  },\n  {\n    label: \"<\",\n    value: \"<\",\n  },\n  {\n    label: \"=\",\n    value: \"=\",\n  },\n  {\n    label: \"<=\",\n    value: \"<=\",\n  },\n  {\n    label: \">=\",\n    value: \">=\",\n  },\n];\n\nexport const CompareToOptions = [\n  {\n    label: \"\",\n    value: \"\",\n  },\n  {\n    label: \"Male\",\n    value: \"M\",\n  },\n  {\n    label: \"Female\",\n    value: \"F\",\n  },\n];\n","import React, {\n  useState, useEffect, useCallback, useMemo,\n} from \"react\";\n\nimport {\n  TextField, Button, Grid, Paper, List, ListItem, ListItemText, MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { isEmpty } from \"lodash\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"../../../../../../components/Dialog\";\nimport useDidMountEffect from \"../../../../../../hooks/useDidMountEffect\";\nimport LabRangeService from \"../../../../../../services/setup/labrange.service\";\nimport {\n  CompareItemOptions,\n  AgeCompareOperatorOptions,\n  GenderCompareOperatorOptions,\n  CompareToOptions,\n} from \"../../../../../../static/setup/labRange\";\n\nconst useStyles = makeStyles((theme) => ({\n  relativePosition: {\n    position: \"relative\",\n  },\n  inputRow: {\n    margin: theme.spacing(3, 0),\n  },\n  gutterBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  buttonsContainer: {\n    margin: theme.spacing(0, 0, 3, 0),\n  },\n  w100: {\n    width: 100,\n  },\n  ml2: {\n    marginLeft: theme.spacing(2),\n  },\n  resultsContainer: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"100%\",\n    background: theme.palette.common.white,\n    maxHeight: 150,\n    overflow: \"scroll\",\n  },\n  menuOption: {\n    minHeight: 26,\n  },\n}));\n\nconst NewLabRange = (props) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const {\n    isOpen, onClose, reloadData, selectedItem, userName,\n  } = props;\n\n  const isNewDialog = useMemo(() => isEmpty(selectedItem), [selectedItem]);\n\n  const [selectedTest, setSelectedTest] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTestResults, setSearchTestResults] = useState([]);\n  const [formFields, setFormFields] = useState({\n    sequence: 1,\n    compareItem: \"\",\n    compareOperator: \"\",\n    compareTo: \"\",\n    rangeLow: \"\",\n    rangeHigh: \"\",\n    created: `${moment().format(\"MMM DD YYYY\")} ${userName}`,\n    updated: `${moment().format(\"MMM DD YYYY\")} ${userName}`,\n  });\n\n  const updateFields = () => {\n    const createdDate = moment(selectedItem.created).format(\"MMM DD YYYY\");\n    const updatedDate = moment(selectedItem.updated).format(\"MMM DD YYYY\");\n    // populate form fields\n    formFields.sequence = selectedItem.seq;\n    formFields.compareItem = selectedItem.compare_item;\n    formFields.compareOperator = selectedItem.compare_operator;\n    formFields.compareTo = selectedItem.compare_to;\n    formFields.rangeLow = selectedItem.range_low;\n    formFields.rangeHigh = selectedItem.range_high;\n    formFields.created = `${createdDate} ${selectedItem.created_user || \"\"}`;\n    formFields.updated = `${updatedDate} ${selectedItem.updated_user || \"\"}`;\n    setFormFields({ ...formFields });\n    setSearchText(selectedItem.marker_name);\n  };\n\n  useEffect(() => {\n    if (!isNewDialog) { /* edit scenario */\n      updateFields();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isNewDialog, selectedItem]);\n\n  const handleInputChnage = (e) => {\n    const { value, name } = e.target;\n    setFormFields({\n      ...formFields,\n      [name]: name === \"compareTo\" ? value.substring(0, 2) : value,\n    });\n  };\n\n  const onSequenceInputChange = (e) => {\n    const { value, name } = e.target;\n    // eslint-disable-next-line\n    const parsedInt = parseInt(value);\n\n    if (parsedInt) {\n      setFormFields({\n        ...formFields,\n        [name]: parsedInt,\n      });\n    } else if (value === \"\") {\n      setFormFields({\n        ...formFields,\n        [name]: value,\n      });\n    }\n\n    return null;\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    const reqBody = {\n      data: {\n        marker_id: isNewDialog ? selectedTest?.id : selectedItem?.marker_id,\n        seq: Number(formFields.sequence),\n        compare_item: formFields.compareItem,\n        compare_operator: formFields.compareOperator,\n        compare_to: formFields.compareTo,\n        range_low: formFields.rangeLow,\n        range_high: formFields.rangeHigh,\n      },\n    };\n    if (isNewDialog) {\n      if (selectedTest) {\n        LabRangeService.createLabRange(reqBody).then((response) => {\n          enqueueSnackbar(`${response.message}`, { variant: \"success\" });\n          reloadData();\n          onClose();\n        });\n      } else {\n        enqueueSnackbar(`Please select marker`, { variant: \"error\" });\n      }\n    } else { /* edit scenario */\n      const editItemId = selectedItem.id;\n      LabRangeService.updateLabRange(reqBody, editItemId).then((response) => {\n        enqueueSnackbar(`${response.message}`, { variant: \"success\" });\n        reloadData();\n        onClose();\n      });\n    }\n  };\n\n  const searchTests = useCallback((e, text) => {\n    e.preventDefault();\n    LabRangeService.searchTests(text).then((res) => {\n      setSearchTestResults(res.data);\n    });\n  }, []);\n\n  const testSelectHandler = (value) => {\n    setSelectedTest(value);\n    setSearchText(value.name);\n    setSearchTestResults([]);\n  };\n\n  useDidMountEffect(() => {\n    if (!searchText.length) {\n      setSearchTestResults([]);\n    }\n  }, [searchText]);\n\n  const populateDecimalValue = (value) => {\n    if (formFields[value].length) {\n      setFormFields({\n        ...formFields,\n        [value]: Number(formFields[value]).toFixed(2),\n      });\n    }\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      title={`${isNewDialog ? \"New\" : \"Edit\"} Marker Range`}\n      message={(\n        <>\n          <Grid item lg={8}>\n            <form onSubmit={(e) => searchTests(e, searchText)}>\n              <Grid container alignItems=\"center\" className={classes.gutterBottom}>\n                <Grid item xs={8} className={classes.relativePosition}>\n                  <TextField\n                    fullWidth\n                    autoFocus={!!isNewDialog}\n                    label=\"Marker\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    value={searchText}\n                    onChange={(e) => setSearchText(e.target.value)}\n                    inputProps={{\n                      readOnly: !isNewDialog,\n                    }}\n                  />\n                  {\n                    searchTestResults.length ? (\n                      <Paper className={classes.resultsContainer}>\n                        <List>\n                          {searchTestResults.map((option) => (\n                            <ListItem\n                              button\n                              onClick={() => testSelectHandler(option)}\n                              key={option.id}\n                            >\n                              <ListItemText primary={option.name} />\n                            </ListItem>\n                          ))}\n                        </List>\n                      </Paper>\n                    )\n                      : null\n                  }\n                </Grid>\n                {isNewDialog && (\n                  <Button\n                    variant=\"outlined\"\n                    type=\"submit\"\n                    className={classes.ml2}\n                  >\n                    Search\n                  </Button>\n                )}\n              </Grid>\n            </form>\n\n            <form onSubmit={onFormSubmit}>\n              <Grid item lg={8}>\n                <TextField\n                  variant=\"outlined\"\n                  name=\"sequence\"\n                  id=\"sequence\"\n                  type=\"number\"\n                  label=\"Sequence\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.sequence}\n                  onChange={(e) => onSequenceInputChange(e)}\n                />\n\n                <TextField\n                  select\n                  variant=\"outlined\"\n                  name=\"compareItem\"\n                  id=\"compareItem\"\n                  type=\"number\"\n                  label=\"Compare Item\"\n                  size=\"small\"\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.compareItem}\n                  onChange={(e) => handleInputChnage(e)}\n                >\n                  {CompareItemOptions.map((option) => (\n                    <MenuItem key={option.value} value={option.value} className={classes.menuOption}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  select\n                  variant=\"outlined\"\n                  name=\"compareOperator\"\n                  id=\"compareOperator\"\n                  type=\"number\"\n                  label=\"Compare Operator\"\n                  size=\"small\"\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.compareOperator}\n                  onChange={(e) => handleInputChnage(e)}\n                >\n                  {formFields.compareItem === \"A\"\n                    ? AgeCompareOperatorOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.value} className={classes.menuOption}>\n                        {option.label}\n                      </MenuItem>\n                    ))\n                    : GenderCompareOperatorOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.value} className={classes.menuOption}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                </TextField>\n\n                <TextField\n                  select={formFields.compareItem === \"G\"}\n                  variant=\"outlined\"\n                  name=\"compareTo\"\n                  id=\"compareTo\"\n                  type=\"number\"\n                  label=\"Compare To\"\n                  size=\"small\"\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.compareTo}\n                  onChange={(e) => handleInputChnage(e)}\n                >\n                  {CompareToOptions.map((option) => (\n                    <MenuItem key={option.value} value={option.value} className={classes.menuOption}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  variant=\"outlined\"\n                  name=\"rangeLow\"\n                  id=\"rangeLow\"\n                  type=\"number\"\n                  label=\"Range Low\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.rangeLow}\n                  onChange={(e) => handleInputChnage(e)}\n                  onBlur={() => populateDecimalValue(\"rangeLow\")}\n                />\n\n                <TextField\n                  variant=\"outlined\"\n                  name=\"rangeHigh\"\n                  id=\"rangeHigh\"\n                  type=\"number\"\n                  label=\"Range High\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.rangeHigh}\n                  onChange={(e) => handleInputChnage(e)}\n                  onBlur={() => populateDecimalValue(\"rangeHigh\")}\n                />\n\n                <TextField\n                  variant=\"outlined\"\n                  name=\"created\"\n                  id=\"created\"\n                  type=\"text\"\n                  label=\"Created\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.created}\n                  onChange={(e) => handleInputChnage(e)}\n                  inputProps={{ readOnly: true }}\n                />\n\n                <TextField\n                  variant=\"outlined\"\n                  name=\"updated\"\n                  id=\"updated\"\n                  type=\"text\"\n                  label=\"Updated\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  className={classes.gutterBottom}\n                  value={formFields.updated}\n                  onChange={(e) => handleInputChnage(e)}\n                  inputProps={{ readOnly: true }}\n                />\n              </Grid>\n\n              <Grid container className={classes.buttonsContainer} justify=\"space-between\">\n                <Button variant=\"outlined\" type=\"submit\" className={classes.w100}>\n                  Save\n                </Button>\n              </Grid>\n            </form>\n          </Grid>\n        </>\n      )}\n      cancelForm={() => onClose()}\n      hideActions\n      size=\"sm\"\n    />\n  );\n};\n\nNewLabRange.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  reloadData: PropTypes.func.isRequired,\n  userName: PropTypes.string.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    marker_id: PropTypes.string,\n    marker_name: PropTypes.string,\n    seq: PropTypes.number,\n    compare_item: PropTypes.string,\n    compare_operator: PropTypes.string,\n    compare_to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    range_low: PropTypes.number,\n    range_high: PropTypes.number,\n    created: PropTypes.string,\n    updated: PropTypes.string,\n    created_user: PropTypes.string,\n    updated_user: PropTypes.string,\n  }).isRequired,\n};\n\nexport default NewLabRange;\n","import React, {\n  useState, useEffect, useCallback,\n} from \"react\";\n\nimport {\n  makeStyles,\n  Grid,\n  Button,\n  Switch,\n  Typography,\n  IconButton,\n  FormControlLabel,\n  TableContainer,\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport { isEmpty } from \"lodash\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\n\nimport Alert from \"../../../../components/Alert\";\nimport { StyledTableCellSm, StyledTableRowSm } from \"../../../../components/common/StyledTable\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport LabRangeService from \"../../../../services/setup/labrange.service\";\nimport { labRangeTableTranslation } from \"../../../../utils/helpers\";\nimport NewLabRange from \"./components/NewLabRange\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  w100: {\n    minWidth: 100,\n  },\n  mb2: {\n    marginBottom: theme.spacing(2),\n  },\n  labelContainer: {\n    pointerEvents: \"none\",\n  },\n  pointerEnable: {\n    pointerEvents: \"auto\",\n  },\n  title: {\n    fontSize: \"1.7em\",\n  },\n  text: {\n    lineHeight: \"22px\",\n    fontSize: 12,\n  },\n  iconButton: {\n    padding: theme.spacing(0.25),\n    \"& svg\": {\n      fontSize: \"1rem\",\n    },\n  },\n  switchLabel: {\n    marginRight: theme.spacing(1),\n    fontSize: 14,\n    fontWeight: 500,\n    lineHeight: 1.75,\n    borderRadius: 4,\n    letterSpacing: \"0.02857em\",\n    textTransform: \"capitalize\",\n  },\n}));\n\nconst MarkerRanges = () => {\n  const classes = useStyles();\n  const { user: { client_id, firstname, lastname } } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [selectedRange, setSelectedRange] = useState({});\n  const [showNewRangeDialog, setShowNewRangeDialog] = useState(false);\n  const [showResetDialog, setShowResetDialog] = useState(false);\n  const [useFuncRange, setUseFuncRange] = useState(true);\n  const [labRanges, setLabRanges] = useState([]);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const openDeleteDialog = (item) => {\n    setSelectedRange(item);\n    setShowDeleteDialog((prevstate) => !prevstate);\n  };\n\n  const closeDeleteDialog = () => {\n    setSelectedRange({});\n    setShowDeleteDialog((prevstate) => !prevstate);\n  };\n\n  const openResetDialog = () => {\n    setShowResetDialog((prevstate) => !prevstate);\n  };\n\n  const closeResetDialog = () => {\n    setShowResetDialog((prevstate) => !prevstate);\n  };\n\n  const resetButtonHandler = () => {\n    if (client_id === 1) {\n      enqueueSnackbar(`This function is not available for client #1`, { variant: \"error\" });\n    } else {\n      openResetDialog();\n    }\n  };\n\n  const fetchLabRanges = useCallback(() => {\n    LabRangeService.getLabRanges().then((res) => {\n      setLabRanges(res.data);\n      setIsLoading(false);\n    })\n      .catch(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchLabRanges();\n  }, [fetchLabRanges]);\n\n  const handleChangeFuncRange = (e, value) => {\n    setUseFuncRange((prevState) => !prevState);\n    const reqBody = {\n      data: {\n        functional_range: value ? 1 : 0,\n      },\n    };\n    LabRangeService.updateLabRangeUse(reqBody).then((res) => {\n      enqueueSnackbar(res.message, { variant: \"success\" });\n    });\n  };\n\n  const deleteItemHandler = (item) => {\n    const deleteItemId = item.id;\n    const reqBody = {\n      data: {\n        marker_id: item.marker_id,\n        seq: item.seq,\n        compare_item: item.compare_item,\n        compare_operator: item.compare_operator,\n        compare_to: item.compare_to,\n      },\n    };\n    LabRangeService.deleteLabRange(reqBody, deleteItemId).then((res) => {\n      enqueueSnackbar(`${res.message}`, { variant: \"success\" });\n      closeDeleteDialog();\n      fetchLabRanges();\n    });\n  };\n\n  const editItemHandler = (item) => {\n    setSelectedRange(item);\n    setShowNewRangeDialog(true);\n  };\n\n  const applyResetHandler = () => {\n    LabRangeService.resetLabRanges().then((res) => {\n      enqueueSnackbar(`${res.message}`, { variant: \"success\" });\n      closeResetDialog();\n    });\n  };\n\n  return (\n    <>\n      <Alert\n        open={showResetDialog}\n        title=\"Confirm Reset\"\n        message=\"Are you sure you want to reset all custom marker ranges to the original values?\"\n        applyButtonText=\"Reset\"\n        cancelButtonText=\"Cancel\"\n        applyForm={applyResetHandler}\n        cancelForm={closeResetDialog}\n      />\n      <Alert\n        open={showDeleteDialog}\n        title=\"Confirm Delete\"\n        message=\"Are you sure you want to delete this custom marker range?\"\n        applyButtonText=\"Delete\"\n        cancelButtonText=\"Cancel\"\n        applyForm={() => deleteItemHandler(selectedRange)}\n        cancelForm={closeDeleteDialog}\n      />\n      {!!showNewRangeDialog && (\n        <NewLabRange\n          isOpen={showNewRangeDialog}\n          onClose={() => {\n            if (!isEmpty(selectedRange)) {\n              setSelectedRange({});\n            }\n            setShowNewRangeDialog(false);\n          }}\n          reloadData={fetchLabRanges}\n          selectedItem={selectedRange}\n          userName={`${firstname} ${lastname}`}\n        />\n      )}\n      <div className={classes.root}>\n        <Grid\n          container\n          justify=\"space-between\"\n          className={classes.mb2}\n        >\n          <Grid item lg={6}>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                color=\"textPrimary\"\n                className={classes.title}\n              >\n                Marker Ranges\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                className={classes.w100}\n                onClick={() => setShowNewRangeDialog(true)}\n              >\n                New\n              </Button>\n              <FormControlLabel\n                control={(\n                  <Switch\n                    checked={useFuncRange}\n                    color=\"primary\"\n                    size=\"medium\"\n                    name=\"switchBox\"\n                    onChange={handleChangeFuncRange}\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                    className={classes.pointerEnable} // enable clicking on switch only\n                  />\n                )}\n                label=\"Use Custom Marker Ranges\"\n                labelPlacement=\"start\"\n                classes={{\n                  label: classes.switchLabel,\n                  root: classes.labelContainer, // to disable clicking of label\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              component=\"label\"\n              className={classes.w100}\n              onClick={() => resetButtonHandler()}\n              disabled={!labRanges.length}\n            >\n              Reset Values\n            </Button>\n          </Grid>\n        </Grid>\n\n        <TableContainer className={classes.mb2}>\n          <Table size=\"small\" className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCellSm>Marker</StyledTableCellSm>\n                <StyledTableCellSm>Sequence</StyledTableCellSm>\n                <StyledTableCellSm>Compare Item</StyledTableCellSm>\n                <StyledTableCellSm>Operator</StyledTableCellSm>\n                <StyledTableCellSm>Compare To</StyledTableCellSm>\n                <StyledTableCellSm>Low</StyledTableCellSm>\n                <StyledTableCellSm>High</StyledTableCellSm>\n                <StyledTableCellSm>Created</StyledTableCellSm>\n                <StyledTableCellSm>Updated</StyledTableCellSm>\n                <StyledTableCellSm align=\"center\">Actions</StyledTableCellSm>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {labRanges && labRanges.length\n                ? labRanges.map((item) => (\n                  <StyledTableRowSm key={`${item.marker_id}_${item.marker_name}_${item.seq}`}>\n                    <TableCell>{item.marker_name}</TableCell>\n                    <TableCell>{item.seq}</TableCell>\n                    <TableCell>{labRangeTableTranslation(item.compare_item)}</TableCell>\n                    <TableCell>{item.compare_operator}</TableCell>\n                    <TableCell>\n                      {item.compare_item === \"G\"\n                        ? labRangeTableTranslation(item.compare_to) : item.compare_to}\n                    </TableCell>\n                    <TableCell>{item.range_low}</TableCell>\n                    <TableCell>{item.range_high}</TableCell>\n                    <TableCell>\n                      {item.created ? moment(item.created).format(\"MMM D YYYY\") : \"\"}\n                    </TableCell>\n                    <TableCell>\n                      {item.updated ? moment(item.updated).format(\"MMM D YYYY\") : \"\"}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <IconButton className={classes.iconButton} onClick={() => editItemHandler(item)}>\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton className={classes.iconButton} onClick={() => openDeleteDialog(item)}>\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </StyledTableRowSm>\n                ))\n                : (\n                  <StyledTableRowSm>\n                    <TableCell colSpan={10}>\n                      <Typography className={classes.text} align=\"center\" variant=\"body1\">\n                        {isLoading ? \"Fetching marker ranges...\" : \"No Records Found...\"}\n                      </Typography>\n                    </TableCell>\n                  </StyledTableRowSm>\n                )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n};\n\nexport default MarkerRanges;\n","import React from \"react\";\n\nimport { Button, Typography } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n  titleContainer: {\n    minHeight: 50,\n    backgroundColor: theme.palette.primary.main,\n    \"& h5\": {\n      color: theme.palette.common.white,\n    },\n  },\n  content: {\n    padding: \"1rem 1.5rem\",\n  },\n  actionsContainer: {\n    padding: \"1rem 1.5rem\",\n    justifyContent: \"space-between\",\n  },\n  w100: {\n    minWidth: 100,\n  },\n}));\n\nconst DialogForm = ({\n  title,\n  open,\n  message,\n  applyForm,\n  cancelForm,\n  applyButtonText,\n  cancelButtonText,\n  size,\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={open}\n      onClose={cancelForm}\n      fullWidth\n      maxWidth={size}\n      disableBackdropClick\n    >\n      <DialogTitle disableTypography className={classes.titleContainer} id=\"form-dialog-title\">\n        <Typography variant=\"h5\">{title}</Typography>\n      </DialogTitle>\n      <DialogContent className={classes.content}>\n        <Typography variant=\"h5\">{message}</Typography>\n      </DialogContent>\n      <DialogActions classes={{ root: classes.actionsContainer }}>\n        <Button\n          className={classes.w100}\n          onClick={cancelForm}\n          type=\"submit\"\n          variant=\"outlined\"\n          disableElevation\n        >\n          {cancelButtonText}\n        </Button>\n        <Button\n          className={classes.w100}\n          onClick={applyForm}\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          disableElevation\n        >\n          {applyButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDialogForm.defaultProps = {\n  title: \"\",\n  message: \"\",\n  applyForm: () => { },\n  cancelForm: () => { },\n  applyButtonText: \"Continue\",\n  cancelButtonText: \"Cancel\",\n  size: \"xs\",\n};\n\nDialogForm.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.string,\n  applyForm: PropTypes.func,\n  cancelForm: PropTypes.func,\n  applyButtonText: PropTypes.string,\n  cancelButtonText: PropTypes.string,\n  size: PropTypes.string,\n};\n\nexport default DialogForm;\n","import {\n  TableRow,\n  TableCell,\n  withStyles,\n} from \"@material-ui/core\";\n\nexport const StyledTableCellLg = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport const StyledTableCellSm = withStyles(() => ({\n  head: {\n    whiteSpace: \"nowrap\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    padding: \"6px 24px 6px 2px\",\n    borderBottom: \"unset\",\n    background: \"white\",\n  },\n  body: {\n    fontSize: 12,\n    borderBottom: \"unset\",\n  },\n}))(TableCell);\n\nexport const StyledTableRowSm = withStyles((theme) => ({\n  root: {\n    \"& p\": {\n      fontSize: 12,\n      lineHeight: \"21px\",\n    },\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n      whiteSpace: \"nowrap\",\n      padding: \"2px 16px 2px 2px\",\n    },\n    \"& td\": {\n      fontSize: 12,\n      whiteSpace: \"nowrap\",\n      padding: \"2px 16px 2px 2px\",\n    },\n  },\n}))(TableRow);\n\nexport const StyledTableRowLg = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n      height: \"50px\",\n    },\n  },\n}))(TableRow);\n","import React from \"react\";\n\nimport { IconButton, Button, Typography } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n  titleContainer: {\n    textAlign: \"center\",\n    borderBottom: \"1px solid #ddd\",\n    minHeight: 53,\n  },\n  content: {\n    padding: \"1rem 2rem\",\n    maxHeight: \"86vh\",\n  },\n  fullScreenContent: {\n    maxHeight: \"unset\",\n  },\n  fullHeight: {\n    minHeight: \"86vh\",\n  },\n  buttonClose: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  save: {\n    background: theme.palette.success,\n    minWidth: 100,\n  },\n  cancel: {\n    background: theme.palette.error,\n    minWidth: 100,\n  },\n}));\n\nconst DialogForm = ({\n  title,\n  open,\n  message,\n  applyForm,\n  cancelForm,\n  hideActions,\n  applyButtonText,\n  cancelButtonText,\n  size,\n  fullScreen,\n  fullHeight,\n  transitionComponent,\n}) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Dialog\n        fullScreen={Boolean(fullScreen)}\n        open={open}\n        onClose={cancelForm}\n        fullWidth\n        maxWidth={size}\n        TransitionComponent={transitionComponent}\n      // disableBackdropClick //enable esc button close and backdrop click\n      >\n        {cancelForm && (\n          <IconButton\n            className={classes.buttonClose}\n            onClick={cancelForm}\n            aria-label=\"close\"\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        )}\n        <DialogTitle disableTypography className={classes.titleContainer} id=\"form-dialog-title\">\n          <Typography variant=\"h5\">{title}</Typography>\n        </DialogTitle>\n        <DialogContent\n          className={clsx({\n            [classes.content]: true, // always apply\n            [classes.fullHeight]: fullHeight, // only when fullHeight === true\n            [classes.fullScreenContent]: fullScreen, // only when fullScreen === true\n          })}\n        >\n          {message}\n        </DialogContent>\n        {hideActions ? null : (\n          <>\n            <DialogActions align=\"center\">\n              {applyForm && (\n                <Button\n                  className={classes.save}\n                  onClick={applyForm}\n                  color=\"primary\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  {applyButtonText}\n                </Button>\n              )}\n              {cancelForm && (\n                <Button\n                  className={classes.cancel}\n                  onClick={cancelForm}\n                  color=\"secondary\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  {cancelButtonText}\n                </Button>\n              )}\n            </DialogActions>\n          </>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nDialogForm.defaultProps = {\n  title: \"\",\n  message: null,\n  applyForm: () => { },\n  cancelForm: () => { },\n  hideActions: true,\n  applyButtonText: \"Continue\",\n  cancelButtonText: \"Cancel\",\n  size: \"lg\",\n  fullScreen: false,\n  fullHeight: false,\n  transitionComponent: undefined,\n};\n\nDialogForm.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.node,\n  applyForm: PropTypes.func,\n  cancelForm: PropTypes.func,\n  hideActions: PropTypes.bool,\n  applyButtonText: PropTypes.string,\n  cancelButtonText: PropTypes.string,\n  size: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  fullHeight: PropTypes.bool,\n  transitionComponent: PropTypes.node,\n};\n\nexport default DialogForm;\n","import { useEffect, useRef } from \"react\";\n\nconst useDidMountEffect = (func, deps) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) func();\n    else didMount.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidMountEffect;\n"],"sourceRoot":""}