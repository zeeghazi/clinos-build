{"version":3,"sources":["services/manage/mergePatient.service.js","screens/Client/Manage/MergePatient/MergePatient.js","../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"],"names":["data","axios","post","API_BASE","headers","authHeader","useStyles","makeStyles","theme","root","flexGrow","padding","title","paddingBottom","spacing","mergeItems","maxWidth","display","flexDirection","submit","MergePatient","classes","enqueueSnackbar","useSnackbar","useState","patientIdKeep","setPatientIdKeep","patientIdDelete","setPatientIdDelete","className","Typography","component","variant","color","TextField","value","margin","id","label","name","autoComplete","autoFocus","onChange","event","target","size","Button","disabled","onClick","formData","patient_id_to_keep","patient_id_to_delete","mergePatientService","mergePatient","then","response","message","onFormSubmit","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","React","props","ref","_props$autoFocus","children","_props$color","defaultValue","_props$disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","InputLabelProps","inputProps","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","required","rows","rowsMax","_props$select","select","SelectProps","type","_props$variant","other","_objectWithoutProperties","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","_props$component","Component","focused","muiFormControl","useFormControl","fcs","formControlState","states","contained","marginDense","dangerouslySetInnerHTML","__html","palette","text","secondary","typography","caption","textAlign","marginTop","main","marginLeft","marginRight","_classCallCheck","instance","Constructor","TypeError","_defineProperties","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype"],"mappings":"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","file":"static/js/61.d7cd801a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../../utils/API_BASE\";\nimport authHeader from \"../auth-header\";\n\nclass MergePatient {\n  mergePatient(data) {\n    return axios.post(\n      `${API_BASE}/patient-merge`, data,\n      {\n        headers: authHeader(),\n      },\n    );\n  }\n}\n\nexport default new MergePatient();\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\n\nimport mergePatientService from \"../../../../services/manage/mergePatient.service\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  title: {\n    paddingBottom: theme.spacing(0.5),\n  },\n  mergeItems: {\n    maxWidth: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  submit: {\n    maxWidth: \"100px\",\n  },\n}));\n\nexport default function MergePatient() {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [patientIdKeep, setPatientIdKeep] = useState(\"\");\n  const [patientIdDelete, setPatientIdDelete] = useState(\"\");\n\n  const onFormSubmit = () => {\n    const formData = {\n      data: {\n        patient_id_to_keep: patientIdKeep,\n        patient_id_to_delete: patientIdDelete,\n      },\n    };\n    mergePatientService.mergePatient(formData).then((response) => {\n      enqueueSnackbar(`${response.data.message}`, {\n        variant: \"success\",\n      });\n      setPatientIdKeep(\"\");\n      setPatientIdDelete(\"\");\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        color=\"textPrimary\"\n        className={classes.title}\n      >\n        Merge Patient\n      </Typography>\n      <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n        This page is used to merge patient account together\n      </Typography>\n      <div className={classes.mergeItems}>\n        <TextField\n          value={patientIdKeep}\n          variant=\"outlined\"\n          margin=\"normal\"\n          id=\"patientId\"\n          label=\"Patient Id to keep\"\n          name=\"patientId\"\n          autoComplete=\"patientId\"\n          autoFocus\n          onChange={(event) => setPatientIdKeep(event.target.value)}\n          size=\"small\"\n        />\n        <TextField\n          value={patientIdDelete}\n          variant=\"outlined\"\n          margin=\"normal\"\n          id=\"patientIdDelete\"\n          label=\"Patient Id to Delete\"\n          name=\"patientIdDelete\"\n          autoComplete=\"patientIdDelete\"\n          onChange={(event) => setPatientIdDelete(event.target.value)}\n          size=\"small\"\n        />\n\n        <Button\n          disabled={!patientIdKeep || !patientIdDelete}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => onFormSubmit()}\n          size=\"small\"\n        >\n          Merge\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}"],"sourceRoot":""}