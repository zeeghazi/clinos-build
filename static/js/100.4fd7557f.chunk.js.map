{"version":3,"sources":["services/appointmentType.service.js","screens/Client/Setup/AppointmentTypes/components/AppointmentType.js","screens/Client/Setup/AppointmentTypes/components/modal/DeleteAppointmentType.js","screens/Client/Setup/AppointmentTypes/components/modal/NewOrEditAppointmentType.js","screens/Client/Setup/AppointmentTypes/hooks/useKeyboardShortcuts.js","screens/Client/Setup/AppointmentTypes/AppointmentTypes.js"],"names":["axios","get","API_BASE","headers","authHeader","then","res","data","post","appointmentId","put","id","delete","useStyles","makeStyles","theme","tableContainer","minWidth","marginTop","spacing","actions","textAlign","display","border","fontSize","overflowControl","maxWidth","textOverflow","overflow","whiteSpace","LightTooltip","withStyles","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSizw","Tooltip","StyledTableCell","head","grey","fontWeight","body","TableCell","StyledTableRow","root","action","hover","height","TableRow","Appointments","appointments","onEdit","onDelete","classes","TableContainer","component","Paper","className","Table","size","table","aria-label","TableHead","padding","align","TableBody","map","appointment","scope","appointment_type","descr","length","title","fee","toFixed","allow_patients_schedule","note","active","moment","created","format","created_user","updated","updated_user","IconButton","margin","onClick","error","light","content","paddingTop","paddingBottom","modalAction","borderTop","background","default","DeleteAppointment","isOpen","onClose","enqueueSnackbar","useSnackbar","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","AppointmentService","deleteById","response","message","variant","autoFocus","primary","width","shiftRootContent","formControl","flexDirection","alignItems","text","secondary","switchControl","marginBottom","formLabel","formHelperText","paddingLeft","formField","flex","justifyContent","paddingRight","largeFormField","smallFormField","textArea","cancelButton","borderColor","colors","orange","NewOrEditAppointment","isNewAppointment","props","useTheme","isMobile","useMediaQuery","breakpoints","up","defaultMatches","user","useAuth","savedAppointments","useState","setAppointment","errors","setErrors","typeError","setTypeError","useEffect","appt","sort_order","checkIfDuplicateType","state","x","includes","filter","handleFormSubmission","formedData","removeEmpty","created_user_id","client_id","create","update","handleOnChange","event","target","name","value","index","Alert","severity","msg","clsx","FormControl","TextField","label","fullWidth","autoComplete","onChange","helperText","multiline","rows","rowsMax","type","Switch","checked","inputProps","blacklistedTargets","disabledEventPropagation","e","stopPropagation","window","cancelBubble","keysReducer","key","useKeyboardShortcut","shortcutKeys","callback","options","Array","isArray","Error","overrideSystem","initalKeyMapping","reduce","currentKeys","localVariableForCurrentKey","toLowerCase","useReducer","keys","setKeys","keydownListener","useCallback","assignedKey","keydownEvent","loweredKey","repeat","tagName","undefined","preventDefault","keyupListener","keyupEvent","raisedKey","Object","values","forEach","k","addEventListener","removeEventListener","flexGrow","uploadButtons","marginRight","card","minHeight","AppointmentTypes","selectedAppointmentId","setSelectedAppointmentId","selectedappointment","setSelectedAppointment","isEditModalOpen","setIsEditModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","setAppointments","setIsNewAppointment","fetchAppointmentTypes","getAll","handleOnNewClick","useKeyboardShortcuts","CssBaseline","Container","Typography","Grid","container","justify","item","md","xs","appointmentById","_"],"mappings":"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","file":"static/js/100.4fd7557f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { API_BASE } from \"../utils/API_BASE\";\nimport authHeader from \"./auth-header\";\n\nclass AppointmentService {\n  getAll() {\n    return axios\n      .get(`${API_BASE}/appointment-types`, { headers: authHeader() })\n      .then((res) => res.data);\n  }\n\n  create(data) {\n    return axios.post(`${API_BASE}/appointment-types`, data, {\n      headers: authHeader(),\n    });\n  }\n\n  update(data, appointmentId) {\n    return axios.put(\n      `${API_BASE}/appointment-types/${appointmentId}`,\n      data,\n      {\n        headers: authHeader(),\n      },\n    );\n  }\n\n  deleteById(id) {\n    return axios.delete(`${API_BASE}/appointment-types/${id}`, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new AppointmentService();\n","import React from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    minWidth: 650,\n    marginTop: theme.spacing(2),\n  },\n  actions: {\n    textAlign: \"center\",\n    display: \"flex\",\n    border: \"none\",\n    \"& button\": {\n      fontSize: \"12px\",\n    },\n  },\n  overflowControl: {\n    maxWidth: \"130px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n}));\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0,0,0,0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSizw: 13,\n  },\n}))(Tooltip);\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.grey,\n    color: theme.palette.grey,\n    fontSize: \"12px\",\n    fontWeight: 700,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    fontSize: 14,\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"& th\": {\n      fontSize: 12,\n    },\n    \"& td\": {\n      fontSize: 12,\n      height: \"50px\",\n    },\n  },\n}))(TableRow);\n\nconst Appointments = ({ appointments, onEdit, onDelete }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table size=\"small\" className={classes.table} aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell padding=\"checkbox\">Appointment Type</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\" align=\"center\">Description</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Minutes</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Fee</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Patient Schedule</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\" align=\"center\">\n              Note\n            </StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Status</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Created</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Created By</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Updated</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Updated By</StyledTableCell>\n            <StyledTableCell padding=\"checkbox\">Actions</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {appointments.map((appointment) => (\n            <StyledTableRow key={appointment.id}>\n              <TableCell padding=\"checkbox\" component=\"th\" scope=\"row\">\n                {appointment.appointment_type}\n              </TableCell>\n              {appointment.descr && appointment.descr.length > 0 ? (\n                <LightTooltip title={appointment.descr}>\n                  <TableCell padding=\"checkbox\" className={classes.overflowControl} align=\"center\">\n                    {appointment.descr}\n                  </TableCell>\n                </LightTooltip>\n              ) : (\n                <TableCell padding=\"checkbox\" className={classes.overflowControl} align=\"center\">\n                  {appointment.descr || \"\"}\n                </TableCell>\n              )}\n              <TableCell padding=\"checkbox\">{appointment.length}</TableCell>\n              <TableCell padding=\"checkbox\">{`$${appointment.fee?.toFixed(2)}`}</TableCell>\n              <TableCell padding=\"checkbox\">{appointment.allow_patients_schedule ? \"Yes\" : \"No\"}</TableCell>\n              {appointment.note && appointment.note.length > 0 ? (\n                <LightTooltip title={appointment.note}>\n                  <TableCell padding=\"checkbox\" className={classes.overflowControl} align=\"center\">\n                    {appointment.note}\n                  </TableCell>\n                </LightTooltip>\n              ) : (\n                <TableCell padding=\"checkbox\" className={classes.overflowControl} align=\"center\">\n                  {appointment.note || \"\"}\n                </TableCell>\n              )}\n              <TableCell padding=\"checkbox\">{appointment.active ? \"Active\" : \"-\"}</TableCell>\n              <TableCell padding=\"checkbox\">{moment(appointment.created).format(\"lll\")}</TableCell>\n              <TableCell padding=\"checkbox\">{appointment.created_user}</TableCell>\n              <TableCell padding=\"checkbox\">\n                {appointment.updated ? moment(appointment.updated).format(\"lll\") : \"-\"}\n              </TableCell>\n              <TableCell padding=\"checkbox\">{appointment.updated_user || \"-\"}</TableCell>\n              <TableCell padding=\"checkbox\" className={classes.actions}>\n                <IconButton\n                  aria-label=\"edit\"\n                  className={classes.margin}\n                  onClick={() => onEdit(appointment.id)}\n                >\n                  <EditIcon fontSize=\"default\" />\n                </IconButton>\n                <IconButton\n                  aria-label=\"delete\"\n                  className={classes.margin}\n                  onClick={() => onDelete(appointment.id)}\n                >\n                  <DeleteIcon fontSize=\"default\" />\n                </IconButton>\n              </TableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nAppointments.propTypes = {\n  appointments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      appointment_type: PropTypes.string,\n      appointment_name_portal: PropTypes.string,\n      length: PropTypes.number,\n      allow_patients_schedule: PropTypes.number,\n      sort_order: PropTypes.number,\n      note: PropTypes.string,\n      created: PropTypes.string,\n      created_user: PropTypes.string,\n      updated: PropTypes.string,\n      updated_user: PropTypes.string,\n    }),\n  ).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Appointments;\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport AppointmentService from \"../../../../../../services/appointmentType.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    backgroundColor: theme.palette.error.light,\n    \"& h2\": {\n      color: \"#fff\",\n    },\n  },\n  content: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    fontSize: \"18px\",\n  },\n  modalAction: {\n    borderTop: `1px solid ${theme.palette.background.default}`,\n  },\n}));\n\nconst DeleteAppointment = ({ isOpen, onClose, id }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const handleDeleteAppointment = () => {\n    AppointmentService.deleteById(id).then((response) => {\n      enqueueSnackbar(`${response.data.message}`, {\n        variant: \"success\",\n      });\n      onClose();\n    });\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\" className={classes.title}>\n          Are you sure about deleting this appointment type?\n        </DialogTitle>\n        <DialogContent className={classes.content}>\n          <DialogContentText id=\"alert-dialog-description\">\n            Your appointment type will be deleted forever from our system and\n            you won&apos;t be able to access it anymore.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions className={classes.modalAction}>\n          <Button onClick={() => onClose(\"no\")} color=\"primary\">\n            No\n          </Button>\n          <Button\n            onClick={() => handleDeleteAppointment()}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nDeleteAppointment.propTypes = {\n  id: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default DeleteAppointment;\n","import React, { useEffect, useState } from \"react\";\n\nimport { colors, useMediaQuery } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport clsx from \"clsx\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nimport useAuth from \"../../../../../../hooks/useAuth\";\nimport AppointmentService from \"../../../../../../services/appointmentType.service\";\nimport { removeEmpty } from \"../../../../../../utils/helpers\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    backgroundColor: theme.palette.primary.light,\n    \"& h2\": {\n      color: \"#fff\",\n    },\n  },\n  root: {\n    width: \"500px\",\n  },\n  shiftRootContent: {\n    width: \"500px\",\n    minWidth: 0,\n  },\n  content: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    fontSize: \"18px\",\n  },\n  formControl: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    color: theme.palette.text.secondary,\n    \"& .MuiSelect-select\": {\n      minWidth: 120,\n    },\n  },\n  switchControl: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1.5),\n    marginTop: theme.spacing(1.5),\n    \"& .MuiSelect-select\": {\n      minWidth: 120,\n    },\n  },\n  formLabel: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    width: \"220px\",\n  },\n  formHelperText: {\n    fontSize: \"12px\",\n    paddingLeft: \"16px\",\n  },\n  formField: {\n    flex: 1,\n  },\n  modalAction: {\n    borderTop: `1px solid ${theme.palette.background.default}`,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  largeFormField: {\n    flex: 1,\n  },\n  smallFormField: {\n    maxWidth: \"100px\",\n    flex: 1,\n  },\n  textArea: {\n    marginTop: \"12px\",\n  },\n  cancelButton: {\n    borderColor: colors.orange[600],\n    color: colors.orange[600],\n  },\n}));\n\nconst NewOrEditAppointment = ({\n  isOpen,\n  onClose,\n  isNewAppointment,\n  ...props\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.up(\"sm\"), {\n    defaultMatches: true,\n  });\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  const { savedAppointments } = props;\n  const [appointment, setAppointment] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [typeError, setTypeError] = useState(false);\n  const rowsMaxForTextArea = 50;\n\n  useEffect(() => {\n    const appt = {\n      ...props.appointment,\n      length: props.appointment.length || 30,\n      sort_order: 1,\n      allow_patients_schedule: true,\n      active: true,\n      note: props.appointment.note || \"\",\n    };\n    setAppointment(appt);\n    // eslint-disable-next-line react/destructuring-assignment\n  }, [props.appointment]);\n\n  const createNewAppointment = (data) => {\n    AppointmentService.create(data).then(\n      (response) => {\n        enqueueSnackbar(`${response.data.message}`, {\n          variant: \"success\",\n        });\n        onClose();\n      },\n      (error) => {\n        setErrors(error.response.data.message);\n      },\n    );\n  };\n\n\n  const checkIfDuplicateType = (state = \"new\") => {\n    if (state === \"new\") {\n      return savedAppointments\n        ?.map((x) => appointment.appointment_type === x.appointment_type)\n        ?.includes(true);\n    }\n    return savedAppointments\n      ?.filter((x) => x.id !== appointment.id)\n      ?.map((x) => appointment.appointment_type === x.appointment_type)\n      ?.includes(true);\n  };\n\n  const handleFormSubmission = () => {\n    // intializing the form data with selected appointment_type info\n    const formedData = {\n      data: removeEmpty({\n        appointment_type: appointment.appointment_type,\n        descr: appointment.descr,\n        length: appointment.length,\n        fee: appointment.fee,\n        sort_order: appointment.sort_order,\n        allow_patients_schedule: appointment.allow_patients_schedule ? 1 : 0,\n        note: appointment.note,\n        active: appointment.active ? 1 : 0,\n        created_user_id: user.id,\n        client_id: user.client_id,\n      }),\n    };\n\n    if (isNewAppointment) {\n      if (checkIfDuplicateType(\"new\")) {\n        setTypeError(true);\n      } else {\n        createNewAppointment(formedData);\n      }\n    } else if (checkIfDuplicateType(\"update\")) {\n      setTypeError(true);\n    } else {\n      delete formedData.data.created_user_id;\n\n      AppointmentService.update(\n        formedData,\n        props.appointment.id,\n      ).then((response) => {\n        enqueueSnackbar(`${response.data.message}`, {\n          variant: \"success\",\n        });\n        onClose();\n      });\n    }\n  };\n\n  const handleOnChange = (event) => {\n    setAppointment({\n      ...appointment,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const clearExistingStatesOfModal = () => {\n    setTypeError();\n    setErrors([]);\n    setAppointment([]);\n  };\n\n  const handleOnModalClose = () => {\n    clearExistingStatesOfModal();\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={handleOnModalClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\" className={classes.title}>\n        {isNewAppointment ? \"New Appointment Type\" : \"Edit Appointment Type\"}\n      </DialogTitle>\n      <DialogContent className={classes.content}>\n        <DialogContentText id=\"alert-dialog-description\">\n          {isNewAppointment\n            ? \"This page is used to create a new appointment type\"\n            : \"This page is used to update an appointment type\"}\n        </DialogContentText>\n        {errors\n          && errors.map((error, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Alert severity=\"error\" key={index}>\n              {error.msg}\n            </Alert>\n          ))}\n        <div className={clsx({\n          [classes.root]: true,\n          [classes.shiftRootContent]: isMobile,\n        })}\n        >\n          <FormControl component=\"div\" className={classes.formControl}>\n            <TextField\n              autoFocus\n              className={classes.largeFormField}\n              variant=\"outlined\"\n              label=\"Appointment Type\"\n              margin=\"normal\"\n              fullWidth\n              name=\"appointment_type\"\n              id=\"appointment_type\"\n              autoComplete=\"appointment_type\"\n              onChange={(event) => handleOnChange(event)}\n              value={appointment.appointment_type}\n              size=\"small\"\n              error={typeError}\n              helperText={typeError ? \"You entered a duplicate type\" : \"\"}\n            />\n          </FormControl>\n          <FormControl\n            component=\"div\"\n            className={`${classes.formControl} ${classes.textArea}`}\n          >\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Description\"\n              multiline\n              name=\"descr\"\n              rows={8}\n              rowsMax={rowsMaxForTextArea}\n              value={appointment.descr}\n              onChange={(event) => handleOnChange(event)}\n            />\n          </FormControl>\n          <FormControl component=\"div\" className={classes.formControl}>\n            <TextField\n              className={classes.smallFormField}\n              variant=\"outlined\"\n              label=\"Minutes\"\n              margin=\"normal\"\n              name=\"length\"\n              id=\"length\"\n              type=\"number\"\n              autoComplete=\"length\"\n              onChange={(event) => handleOnChange(event)}\n              value={appointment.length}\n              size=\"small\"\n            />\n            <p className={classes.formHelperText}>\n              Number of minutes for the appointment\n            </p>\n          </FormControl>\n          <FormControl component=\"div\" className={classes.formControl}>\n            <TextField\n              className={classes.smallFormField}\n              variant=\"outlined\"\n              label=\"Fee\"\n              margin=\"normal\"\n              name=\"fee\"\n              id=\"fee\"\n              type=\"number\"\n              autoComplete=\"fee\"\n              onChange={(event) => handleOnChange(event)}\n              value={appointment.fee}\n              size=\"small\"\n            />\n            <p className={classes.formHelperText}>\n              The fee for the appointment\n            </p>\n          </FormControl>\n          <FormControl component=\"div\" className={classes.formControl}>\n            <TextField\n              className={classes.smallFormField}\n              variant=\"outlined\"\n              label=\"Sort Order\"\n              margin=\"normal\"\n              name=\"sort_order\"\n              id=\"sort_order\"\n              autoComplete=\"sort_order\"\n              onChange={(event) => handleOnChange(event)}\n              value={appointment.sort_order}\n              size=\"small\"\n              type=\"number\"\n            />\n            <p className={classes.formHelperText}>\n              The order in which this is shown\n            </p>\n          </FormControl>\n          <FormControl component=\"div\" className={classes.switchControl}>\n            <Switch\n              size=\"small\"\n              checked={appointment.allow_patients_schedule}\n              onChange={(event) => setAppointment({\n                ...appointment,\n                [event.target.name]: !appointment.allow_patients_schedule,\n              })}\n              name=\"allow_patients_schedule\"\n              color=\"primary\"\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n            <p className={classes.formHelperText}>\n              Allow patient to select this in the patient portal\n            </p>\n          </FormControl>\n          <FormControl component=\"div\" className={classes.switchControl}>\n            <Switch\n              size=\"small\"\n              checked={appointment.active}\n              onChange={(event) => setAppointment({\n                ...appointment,\n                [event.target.name]: !appointment.active,\n              })}\n              name=\"active\"\n              color=\"primary\"\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n            <p className={classes.formHelperText}>\n              Status can be active or inactive\n            </p>\n          </FormControl>\n          <FormControl\n            component=\"div\"\n            className={`${classes.formControl} ${classes.textArea}`}\n          >\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Note\"\n              multiline\n              name=\"note\"\n              rows={4}\n              rowsMax={rowsMaxForTextArea}\n              value={appointment.note}\n              onChange={(event) => handleOnChange(event)}\n            />\n          </FormControl>\n        </div>\n      </DialogContent>\n      <DialogActions className={classes.modalAction}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => handleFormSubmission()}\n        >\n          {isNewAppointment ? \"Save\" : \"Update\"}\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          onClick={() => onClose()}\n          className={classes.cancelButton}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nNewOrEditAppointment.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  isNewAppointment: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  appointment: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      id: PropTypes.number,\n      appointment_type: PropTypes.string,\n      length: PropTypes.number,\n      sort_order: PropTypes.number,\n      allow_patients_schedule: PropTypes.number,\n      note: PropTypes.string,\n    }),\n  ]).isRequired,\n  savedAppointments: PropTypes.arrayOf(\n    PropTypes.shape({\n      appointment_type: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default NewOrEditAppointment;\n","import { useEffect, useCallback, useReducer } from \"react\";\n\nconst blacklistedTargets = [\"INPUT\", \"TEXTAREA\"];\n\nfunction disabledEventPropagation(e) {\n  if (e && e.stopPropagation) {\n    e.stopPropagation();\n  }\n  if (window.event) {\n    window.event.cancelBubble = true;\n  }\n}\n\n\nconst keysReducer = (state, action) => {\n  switch (action.type) {\n    case \"set-key-down\": {\n      const keydownState = { ...state, [action.key]: true };\n      return keydownState;\n    }\n    case \"set-key-up\": {\n      const keyUpState = { ...state, [action.key]: false };\n      return keyUpState;\n    }\n    case \"reset-keys\": {\n      const resetState = { ...action.data };\n      return resetState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst useKeyboardShortcut = (shortcutKeys, callback, options) => {\n  if (!Array.isArray(shortcutKeys)) {\n    throw new Error(\n      `The first parameter to \"useKeyboardShortcut\" must be an ordered array of \"KeyboardEvent.key\" strings.`,\n    );\n  }\n\n  if (!shortcutKeys.length) {\n    throw new Error(\n      `The first parameter to \"useKeyboardShortcut\" must contain atleast one \"KeyboardEvent.key\" string.`,\n    );\n  }\n\n  if (!callback || typeof callback !== \"function\") {\n    throw new Error(\n      `The second parameter to \"useKeyboardShortcut\" must be\n       a function that will be envoked when the keys are pressed.`,\n    );\n  }\n\n  const { overrideSystem } = options || {};\n  const initalKeyMapping = shortcutKeys.reduce((currentKeys, key) => {\n    const localVariableForCurrentKey = currentKeys;\n    localVariableForCurrentKey[key.toLowerCase()] = false;\n    return localVariableForCurrentKey;\n  }, {});\n\n  const [keys, setKeys] = useReducer(keysReducer, initalKeyMapping);\n\n  const keydownListener = useCallback(\n    (assignedKey) => (keydownEvent) => {\n      const loweredKey = assignedKey.toLowerCase();\n\n      if (keydownEvent.repeat) return;\n      if (blacklistedTargets.includes(keydownEvent.target.tagName)) return;\n      if (loweredKey !== keydownEvent.key.toLowerCase()) return;\n      if (keys[loweredKey] === undefined) return;\n\n      if (overrideSystem) {\n        keydownEvent.preventDefault();\n        disabledEventPropagation(keydownEvent);\n      }\n\n      setKeys({ type: \"set-key-down\", key: loweredKey });\n    },\n    [keys, overrideSystem],\n  );\n\n  const keyupListener = useCallback(\n    (assignedKey) => (keyupEvent) => {\n      const raisedKey = assignedKey.toLowerCase();\n\n      if (blacklistedTargets.includes(keyupEvent.target.tagName)) return;\n      if (keyupEvent.key.toLowerCase() !== raisedKey) return;\n      if (keys[raisedKey] === undefined) return;\n\n      if (overrideSystem) {\n        keyupEvent.preventDefault();\n        disabledEventPropagation(keyupEvent);\n      }\n\n      setKeys({ type: \"set-key-up\", key: raisedKey });\n    },\n    [keys, overrideSystem],\n  );\n\n  useEffect(() => {\n    if (!Object.values(keys).filter((value) => !value).length) {\n      callback(keys);\n      setKeys({ type: \"reset-keys\", data: initalKeyMapping });\n    } else {\n      setKeys({ type: null });\n    }\n  }, [callback, keys, initalKeyMapping]);\n\n  useEffect(() => {\n    shortcutKeys.forEach((k) => window.addEventListener(\"keydown\", keydownListener(k)));\n    return () => shortcutKeys.forEach((k) => window.removeEventListener(\"keydown\", keydownListener(k)));\n  }, [keydownListener, shortcutKeys]);\n\n  useEffect(() => {\n    shortcutKeys.forEach((k) => window.addEventListener(\"keyup\", keyupListener(k)));\n    return () => shortcutKeys.forEach((k) => window.removeEventListener(\"keyup\", keyupListener(k)));\n  }, [keyupListener, shortcutKeys]);\n};\n\n\nexport default useKeyboardShortcut;\n","import React, { useState, useEffect } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport _ from \"lodash\";\n\nimport AppointmentService from \"../../../../services/appointmentType.service\";\nimport { Appointments } from \"./components\";\nimport DeleteAppointmentModal from \"./components/modal/DeleteAppointmentType\";\nimport NewOrEditAppointment from \"./components/modal/NewOrEditAppointmentType\";\nimport useKeyboardShortcuts from \"./hooks/useKeyboardShortcuts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: \"25px 0px\",\n  },\n  uploadButtons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    maxWidth: \"450px\",\n    marginBottom: theme.spacing(1),\n    \"& h1\": {\n      [theme.breakpoints.up(\"md\")]: {\n        marginRight: theme.spacing(4),\n      },\n    },\n  },\n  card: {\n    minHeight: 300,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function AppointmentTypes() {\n  const classes = useStyles();\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(\"\");\n  const [selectedappointment, setSelectedAppointment] = useState({});\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [appointments, setAppointments] = useState([]);\n  const [isNewAppointment, setIsNewAppointment] = useState(true);\n\n\n  const fetchAppointmentTypes = () => {\n    AppointmentService.getAll().then((res) => {\n      setAppointments(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchAppointmentTypes();\n  }, []);\n\n  const handleEditButtonClick = (id) => {\n    setIsEditModalOpen(true);\n    setIsNewAppointment(false);\n    const appointmentById = appointments.filter(\n      (appointment) => appointment.id === id,\n    );\n    if (appointmentById) {\n      setSelectedAppointment(_.head(appointmentById));\n    }\n  };\n\n  const handleDeleteButton = (id) => {\n    setIsDeleteModalOpen(true);\n    setSelectedAppointmentId(id);\n  };\n\n  const handleEditModalClose = () => {\n    setIsEditModalOpen(false);\n    setIsNewAppointment(false);\n    fetchAppointmentTypes();\n  };\n\n  const handleDeleteModalClose = () => {\n    setIsDeleteModalOpen(false);\n    fetchAppointmentTypes();\n  };\n\n  const handleOnNewClick = () => {\n    setIsEditModalOpen(true);\n    setIsNewAppointment(true);\n    setSelectedAppointment(\"\");\n  };\n\n  useKeyboardShortcuts([\"N\"], () => {\n    handleOnNewClick();\n  }, { overrideSystem: true });\n\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth={false} className={classes.root}>\n        <div className={classes.uploadButtons}>\n          <Typography component=\"h1\" variant=\"h2\" color=\"textPrimary\">\n            Appointment Types\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"span\"\n            onClick={() => handleOnNewClick()}\n          >\n            New\n          </Button>\n        </div>\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item md={12} xs={12}>\n            <Typography component=\"p\" variant=\"body2\" color=\"textPrimary\">\n              This page is used to manage appointment types that are offered\n              to patients\n            </Typography>\n            <Appointments\n              appointments={appointments}\n              onEdit={handleEditButtonClick}\n              onDelete={handleDeleteButton}\n            />\n          </Grid>\n        </Grid>\n        <NewOrEditAppointment\n          appointment={selectedappointment}\n          isOpen={isEditModalOpen}\n          onClose={() => handleEditModalClose(false)}\n          isNewAppointment={isNewAppointment}\n          savedAppointments={appointments}\n        />\n        <DeleteAppointmentModal\n          id={selectedAppointmentId}\n          isOpen={isDeleteModalOpen}\n          onClose={() => handleDeleteModalClose(false)}\n        />\n      </Container>\n    </>\n  );\n}\n"],"sourceRoot":""}